{"version":3,"file":"static/js/109.4e9c2e5c.chunk.js","mappings":"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","sources":["../common/global/src/api.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/usePost.ts","../common/input-text/src/inputText.tsx","../pages/sign-in-page/src/component.tsx"],"sourcesContent":["const API_ID = {\n    QUERY_CUSTOMER_TABLE_DATA: \"basicData/customers\",\n    POST_CUSTOMER_TABLE_DATA: \"basicData/customers_dml\",\n    QUERY_SUPPLIER_TABLE_DATA: \"basicData/suppliers\",\n    POST_SUPPLIER_TABLE_DATA: \"basicData/suppliers_dml\",\n    POST_CUSTOMER_INVOICE_DETAILS: \"invoices/customer_invoice_dml\",\n    POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\n    POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\n    QUERY_EMPLOYEES_TABLE_DATA: \"employeesData/employees\",\n    POST_EMPLOYEES_TABLE_DATA: \"employeesData/employees_dml\",\n    QUERY_INVOICE_DETAIL_TABLE_DATA: \"invoices/get_invoice_detail\",\n    QUERY_INVOICE_MASTER_TABLE_DATA: \"invoices/get_invoice_master\",\n    QUERY_ITEMS_TABLE_DATA: \"basicData/items\",\n    POST_ITEMS_TABLE_DATA: \"basicData/items_dml\",\n    QUERY_PRINT_OPTIONS_TABLE_DAT: \"basicData/print_options\",\n    POST_PRINT_OPTIONS_TABLE_DATA:\"basicData/print_options_dml\",\n    USER_LOG_IN: \"user_log_in\",\n    POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice_dml\",\n    QUERY_LABELS: \"get_labels\",\n    QUERY_CHUNK_LABELS: \"get_chunk_labels\",\n    QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\n    QUERY_CUSTOMER_AND_SUPPLIER_LIST: \"invoices/get_customer_supplier_list\",\n    QUERY_SUPPLIER_LIST: \"basicData/supplier_pop_data\",\n    QUERY_CUSTOMERS_LIST: \"basicData/customer_pop_data\",\n    QUERY_ITEMS_LIST: \"basicData/items_pop_data\",\n    //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\n    QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\n    //http://144.24.209.19:9090/api/v1/income_expense/get_casher_receipt_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n    QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA: \"income_expense/get_casher_receipt_voucher_invoices\",\n    //http://144.24.209.19:9090/api/v1/income_expense/post_casher_receipt_voucher_invoices_dml?authorization=1677621781730\n    POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA: \"income_expense/post_casher_receipt_voucher_invoices_dml\",\n    //http://144.24.209.19:9090/api/v1/income_expense/get_casher_payment_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n    QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA: \"income_expense/get_casher_payment_voucher_invoices\",\n    //http://144.24.209.19:9090/api/v1/income_expense/post_casher_payment_voucher_invoices_dml?authorization=1677621781730\n    POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA: \"income_expense/post_casher_payment_voucher_invoices_dml\"\n};\n\nexport default API_ID","import {useState, useCallback, useEffect} from \"react\";\n\ninterface useFormManagerProps {\n    initialValue?: any\n    setSelectedRow?: any\n}\n\nconst useFormManager =({initialValue, setSelectedRow}: useFormManagerProps)=>{\n    const [initialValues, setInitialValues] = useState()\n    const [state, setState] = useState<typeof initialValue>({})\n\n    const onChange = useCallback((change: any)=>{\n        //@ts-ignore\n            if (setSelectedRow)setSelectedRow({...initialValue, [change.name]: change.value})\n            setState({...state, [change.name]: change.value})\n            setInitialValues(initialValues)\n    },[initialValues, initialValue, setSelectedRow, state])\n\n    useEffect(()=>{\n        if(setSelectedRow){\n            setState(initialValue);\n        }\n    },[initialValue, setSelectedRow])\n\n    useEffect(()=>{\n        setState(initialValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    const resetState = useCallback(()=>{\n        setSelectedRow(initialValues)\n    },[initialValues, setSelectedRow])\n\n    return{state, onChange, resetState}\n}\n\nexport default useFormManager","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport {API_ID} from \"@commons/global\";\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\ninterface usePostProps{\r\n    link: string;\r\n    noAuthorization?: boolean\r\n};\r\ninterface successType{\r\n    response: string;\r\n}\r\n\r\nconst usePost = ({\r\n    link  = \"\",\r\n    noAuthorization = false\r\n}: usePostProps) => {\r\n    const toast = useToast()\r\n    //@ts-ignore\r\n    const url = `http://144.24.209.19:9090/api/v1/${API_ID[link]}`\r\n    const [success, setSuccess] = useState<successType>()\r\n    const { authorization } = useLocalStorage()\r\n    const postData = useCallback(async (dataToPost: any) => {\r\n        if(authorization || noAuthorization){\r\n        dataToPost.authorization = authorization\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataToPost)\r\n        };\r\n        try {\r\n            const fetchResponse = await fetch(url, settings);\r\n            const data = await fetchResponse.json();\r\n            if (data.response === \"success\"){\r\n            toast({\r\n            position: \"top-right\",\r\n            title: 'Success',\r\n            description: `${data.response}`,\r\n            status: 'success',\r\n            duration: 5000,\r\n            isClosable: true,\r\n        })\r\n            } else {\r\n                toast({\r\n            position: \"top-right\",\r\n            title: 'Error',\r\n            description: `${data.response}`,\r\n            status: 'error',\r\n            duration: 9000,\r\n            isClosable: true,\r\n        })\r\n            }\r\n            setSuccess(data)\r\n            return data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }}\r\n    }, [authorization, noAuthorization, toast, url])\r\n\r\n    const setRow = useCallback((row: any) => {\r\n        postData(row)\r\n    }, [postData])\r\n\r\n    return { success, setRow }\r\n}\r\n\r\nexport default usePost","import React, { memo, useCallback, useEffect } from \"react\";\nimport { InputTextProps } from \"./interface\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\n\nconst InputText = ({\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n}: InputTextProps) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    // console.log(new Date().getFullYear() + \"-\" + ((new Date().getMonth() + 1).length !== 2 ? \"0\" + (new Date().getMonth() + 1) : (new Date().getMonth() + 1)) + \"-\" + (new Date().getDate().length != 2 ? \"0\" + new Date().getDate() : new Date().getDate()))\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                w={width}\n                padding={padding}\n                margin={margin}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Input\n                    placeholder={placeHolder}\n                    size='md'\n                    isDisabled={disabled}\n                    isRequired={required}\n                    onChange={handleChange}\n                    width=\"100%\"\n                    className={className}\n                    value={value}\n                    type={type}\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputText)","import React, { memo, useCallback, useEffect } from 'react';\r\nimport './Style.css';\r\nimport { Button } from \"@commons/button\";\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { useLocalStorage, usePost, useFormManager } from \"@commons/hooks\"\r\n\r\nconst SignInPage = () => {\r\n\r\n    const { setRow, success } = usePost({ link: \"USER_LOG_IN\", noAuthorization: true })\r\n    const { state, onChange } = useFormManager({})\r\n    const { authorization, changeLocalStorage } = useLocalStorage()\r\n\r\n    if (success) {\r\n        changeLocalStorage([\r\n            {\r\n                name: \"salam\",\r\n                //@ts-ignore\r\n                data: { authorization: success.authorization, display_name: success.display_name }\r\n            }\r\n        ])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authorization) {\r\n            window.location.assign(\"/home\")\r\n        }\r\n    }, [authorization])\r\n\r\n    // @ts-ignore\r\n    if (success && success.response === \"success\") {\r\n        window.location.assign(\"/home\")\r\n    }\r\n\r\n    const handleLogIn = useCallback(() => {\r\n        setRow(state)\r\n\r\n    }, [setRow, state])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sign_in\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h1>مرحبا</h1>\r\n                        <p>قم بتسجيل الدخول الى النظام</p>\r\n                        <InputText\r\n                            name='user_name'\r\n                            Label='usrnm'\r\n                            onChange={onChange}\r\n                            width=\"90%\"\r\n                        />\r\n                        <InputText\r\n                            name='user_password'\r\n                            Label='pswrd'\r\n                            onChange={onChange}\r\n                            type=\"password\"\r\n                            width=\"90%\"\r\n                        />\r\n                        <Button\r\n                            label='login'\r\n                            onClick={handleLogIn}\r\n                            width='40%'\r\n                            margin='10px'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(SignInPage);"],"names":["QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","initialValue","setSelectedRow","useState","initialValues","setInitialValues","state","setState","onChange","useCallback","change","name","value","useEffect","resetState","link","noAuthorization","toast","useToast","url","API_ID","success","setSuccess","authorization","useLocalStorage","postData","dataToPost","settings","method","headers","Accept","body","JSON","stringify","fetch","fetchResponse","json","data","response","position","title","description","status","duration","isClosable","console","log","setRow","row","InputText","disabled","Label","width","type","placeHolder","padding","margin","className","required","t","useTranslation","handleChange","event","target","direction","w","I","placeholder","size","isDisabled","isRequired","memo","SignInPage","usePost","useFormManager","changeLocalStorage","display_name","window","location","assign","handleLogIn","label","onClick"],"sourceRoot":""}