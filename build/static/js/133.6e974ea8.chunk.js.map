{"version":3,"file":"static/js/133.6e974ea8.chunk.js","mappings":"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","sources":["../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/useMutation.ts","../common/input-text/src/TextArea.tsx","../common/input-text/src/inputText.tsx","../common/modal/src/index.tsx","../common/check-box/src/CheckBox.tsx","../pages/employee-attendance-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Select as ChakraSelect, FormLabel, Flex } from '@chakra-ui/react';\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    width = \"200px\",\r\n    Options = [{\r\n        label: \"\",\r\n        value: 0\r\n    }],\r\n    onChange,\r\n    Label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\"\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.map((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <ChakraSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    {Array.isArray(Options) ? Options.map((Option) => {\r\n                        return (\r\n                            <option key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</option>\r\n                        )\r\n                    }) : <option disabled>{t(\"No data\")}</option>}\r\n                </ChakraSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    Api,\r\n    onChange,\r\n    Label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    fetchOnFirstRun = false\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: Api,\r\n        fetchOnFirstRun: fetchOnFirstRun,\r\n        params: params\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                Label={Label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","const API_ID = {\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dml\n  POST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\n  POST_CUSTOMER_INVOICE_DETAILS: \"invoices/customer_invoice_dml\",\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\n  QUERY_EMPLOYEES_TABLE_DATA: \"employeesData/employees\",\n  POST_EMPLOYEES_TABLE_DATA: \"employeesData/employees_dml\",\n  QUERY_INVOICE_DETAIL_TABLE_DATA: \"invoices/get_invoice_detail\",\n  QUERY_INVOICE_MASTER_TABLE_DATA: \"invoices/get_invoice_master\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\n    \"basic_data/print_options/print_options_table_data\",\n  POST_PRINT_OPTIONS_TABLE_DATA:\n    \"basic_data/print_options/print_options_table_data_dml\",\n  //http://144.24.209.19:9090/auth_security/sign_in\n  USER_LOG_IN: \"auth_security/sign_in\",\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\n  QUERY_LABELS: \"get_labels\",\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST: \"invoices/get_customer_supplier_list\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\n  QUERY_PRINT_OPTIONS_LIST: \"basicData/print_options_pop_data\",\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_receipt_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_expense/get_casher_receipt_voucher_invoices\",\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_receipt_voucher_invoices_dml?authorization=1677621781730\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_expense/post_casher_receipt_voucher_invoices_dml\",\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_payment_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_expense/get_casher_payment_voucher_invoices\",\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_payment_voucher_invoices_dml?authorization=1677621781730\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_expense/post_casher_payment_voucher_invoices_dml\",\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\n  POST_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\n};\n\nexport default API_ID;\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>([]);\r\n  const getData = useCallback(async () => {\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params]);\r\n\r\n  useEffect(() => {\r\n    if (data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useRef, useEffect } from \"react\";\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current as T;\n};\n\nexport default usePrevious;\n","import { useState, useCallback, useEffect, useRef } from \"react\";\nimport usePrevious from \"./usePrevious\";\n\ninterface useFormManagerProps {\n  initialValues?: any;\n  setSelectedRow?: any;\n  tableModal?: boolean;\n}\n\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\n  const [state, setState] = useState<typeof initialValues>(initialValues);\n\n  const hasAnyFieldChangedRef = useRef(false);\n  const preValues = usePrevious(initialValues);\n\n  const areInitialValuesChanged = useCallback(\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\n    [initialValues, preValues]\n  );\n\n  useEffect(() => {\n    if (areInitialValuesChanged()) {\n      setState({ ...initialValues });\n    }\n  }, [areInitialValuesChanged, initialValues]);\n\n  const resetForm = useCallback(() => {\n    hasAnyFieldChangedRef.current = false;\n    setState(() => initialValues);\n    // @ts-ignore\n  }, [initialValues]);\n\n  useEffect(\n    () => {\n      return resetForm;\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const onChange = useCallback(\n    (eventData: any) => {\n      const { name, value } = eventData;\n      setState({ ...state, [name]: value });\n    },\n    [state]\n  );\n\n  return { state, onChange, resetForm };\n};\n\nexport default useFormManager;\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import React, { memo, useCallback } from \"react\";\nimport { Textarea, FormLabel, Flex } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\nimport { TextAreaProps } from \"./interface\";\n\nconst TextArea = ({\n    name,\n    Label = \"name\",\n    placeHolder,\n    width = \"30%\",\n    height = \"100px\",\n    padding,\n    margin = \"10px\",\n    onChange,\n    value,\n    disabled,\n}: TextAreaProps) => {\n    const { t } = useTranslation()\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n                height={height}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Textarea\n                    value={value}\n                    onChange={handleChange}\n                    placeholder={placeHolder}\n                    isDisabled={disabled}\n                    height=\"100%\"\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(TextArea);","import React, { memo, useCallback } from \"react\";\nimport { InputTextProps } from \"./interface\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\n\nconst InputText = ({\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n}: InputTextProps) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Input\n                    placeholder={placeHolder}\n                    size='md'\n                    isDisabled={disabled}\n                    isRequired={required}\n                    onChange={handleChange}\n                    width=\"100%\"\n                    className={className}\n                    value={value}\n                    type={type}\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputText)","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useTranslation } from 'react-i18next'\nimport { Checkbox as ChakraCheckBox } from '@chakra-ui/react'\nimport { CheckBoxProps } from \"./interface\";\n\nconst CheckBox = ({\n    label = \"\",\n    value,\n    onChange,\n    name,\n    width,\n    disabled,\n    padding,\n    margin = \"10px\"\n}: CheckBoxProps) => {\n    const { t } = useTranslation()\n    const [checked, setChecked] = useState(false)\n    const handleChange = useCallback((event: { target: { checked: boolean; }; }) => {\n        if (event.target.checked === true) {\n            onChange({ name: name, value: \"Y\" })\n        } else if (event.target.checked === false) {\n            onChange({ name: name, value: \"N\" })\n        }\n    }, [name, onChange])\n\n    useEffect(() => {\n        if (value === \"Y\") {\n            setChecked(true)\n        } else if (value === \"N\") {\n            setChecked(false)\n        }\n    }, [value])\n\n    return (\n        <>\n            <ChakraCheckBox\n                isChecked={checked}\n                onChange={handleChange}\n                width={width}\n                isDisabled={disabled}\n                padding={padding}\n                margin={margin}\n            >\n                {t(label)}\n            </ChakraCheckBox>\n        </>\n    )\n}\n\nexport default memo(CheckBox)","import React, { memo } from \"react\";\nimport { InputText } from \"@commons/input-text\";\nimport { SelectWithApi } from \"@commons/select\";\nimport { TextArea } from \"@commons/input-text\";\nimport { useFormManager, useMutation } from \"@commons/hooks\";\nimport { CheckBox } from \"@commons/check-box\";\nimport Modal from \"@commons/modal\";\nimport { EmployeeAttendanceProps } from \"./interface\"\n\nconst EmployeeAttendance = ({ visible, handleCloseModal }: EmployeeAttendanceProps) => {\n    const initialValues = {\n        date: \"\",\n        employee_id: \"\",\n        absent: \"N\",\n        query_status: \"n\",\n        attendance_time: \"\"\n    }\n    const { onChange, state } = useFormManager({ initialValues: initialValues })\n    const { date, employee_id, real_time, absent, reason } = state\n\n    const { setRow } = useMutation({\n        link: \"POST_EMPLOYEE_ATTENDANCE\"\n    })\n\n    const handleSaveButton = () => {\n        setRow(state)\n        handleCloseModal()\n    }\n\n    return (\n        <>\n            <Modal\n                label=\"emplyatndnc\"\n                visible={visible}\n                onClose={handleCloseModal}\n                onOK={handleSaveButton}\n            >\n                <InputText\n                    Label=\"dt\"\n                    name=\"date\"\n                    value={date}\n                    onChange={onChange}\n                    type=\"date\"\n                    width=\"30%\"\n                />\n                <SelectWithApi\n                    name=\"employee_id\"\n                    onChange={onChange}\n                    Api=\"QUERY_EMPLOYEE_NAME_LIST\"\n                    value={employee_id}\n                    Label=\"emply\"\n                    width=\"30%\"\n                    fetchOnFirstRun={visible}\n                />\n                <InputText\n                    type=\"time\"\n                    name=\"attendance_time\"\n                    value={real_time}\n                    onChange={onChange}\n                    Label=\"atndnctm\"\n                    width=\"30%\"\n                />\n                <TextArea\n                    name=\"reason\"\n                    value={reason}\n                    onChange={onChange}\n                    Label=\"rsn\"\n                    width=\"70%\"\n                />\n                <CheckBox\n                    name=\"absent\"\n                    label=\"absnt\"\n                    value={absent}\n                    onChange={onChange}\n                />\n            </Modal>\n        </>\n    )\n}\n\nexport default memo(EmployeeAttendance)"],"names":["Select","width","Options","label","value","onChange","Label","name","withLabel","margin","padding","placeholder","t","useTranslation","direction","fontSize","as","event","Array","isArray","map","option","target","Option","selected","disabled","memo","SelectWithApi","Api","params","fetchOnFirstRun","data","useFetch","link","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","useState","setData","getData","useCallback","settings","headers","Accept","Authorization","fetch","URLSearchParams","response","json","apiData","useEffect","position","title","description","JSON","stringify","status","duration","isClosable","runFetch","ref","useRef","current","initialValues","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","Object","is","resetForm","eventData","additionalFunctionToRun","runOnSuccess","runOnFail","method","success","setSuccess","postData","dataToPost","body","fetchResponse","message","setRow","row","TextArea","placeHolder","height","handleChange","isDisabled","InputText","type","className","required","I","size","isRequired","Modal","children","visible","onClose","onOK","submitTitle","hideSaveButton","hideCloseButton","isOpen","w","wrap","justifyContent","colorScheme","mr","onClick","hidden","CheckBox","checked","setChecked","isChecked","EmployeeAttendance","handleCloseModal","useFormManager","date","employee_id","absent","query_status","attendance_time","real_time","reason","useMutation"],"sourceRoot":""}