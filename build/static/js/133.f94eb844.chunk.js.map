{"version":3,"file":"static/js/133.f94eb844.chunk.js","mappings":"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","sources":["../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/usePost.ts","../common/input-text/src/TextArea.tsx","../common/input-text/src/inputText.tsx","../common/modal/src/index.tsx","../common/check-box/src/CheckBox.tsx","../pages/employee-attendance-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { SelectProps } from \"./interface\"\r\n\r\nconst Select = ({\r\n    width = \"200px\",\r\n    Options,\r\n    onChange,\r\n    Label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        // eslint-disable-next-line array-callback-return\r\n        Options.map((option) => {\r\n            if (option.value === +event.target.value) {\r\n                if (withLabel) {\r\n                    onChange({ value: option.value, label: option.label, name: name })\r\n                } else {\r\n                    onChange({ value: option.value, name: name })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-1\" style={{ width: width, padding: padding, margin: margin }}>\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">{t(Label)}</label>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleValue}>\r\n                    <option selected>{`Select`}</option>\r\n                    {Options.map((Option) => {\r\n                        return (\r\n                            <option key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    Api,\r\n    onChange,\r\n    Label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    fetchOnFirstRun = false\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: Api,\r\n        fetchOnFirstRun: fetchOnFirstRun,\r\n        params: params\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                Label={Label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","const API_ID = {\r\n    QUERY_CUSTOMER_TABLE_DATA: \"basicData/customers\",\r\n    POST_CUSTOMER_TABLE_DATA: \"basicData/customers_dml\",\r\n    QUERY_SUPPLIER_TABLE_DATA: \"basicData/suppliers\",\r\n    POST_SUPPLIER_TABLE_DATA: \"basicData/suppliers_dml\",\r\n    POST_CUSTOMER_INVOICE_DETAILS: \"invoices/customer_invoice_dml\",\r\n    POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\r\n    POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\r\n    QUERY_EMPLOYEES_TABLE_DATA: \"employeesData/employees\",\r\n    POST_EMPLOYEES_TABLE_DATA: \"employeesData/employees_dml\",\r\n    QUERY_INVOICE_DETAIL_TABLE_DATA: \"invoices/get_invoice_detail\",\r\n    QUERY_INVOICE_MASTER_TABLE_DATA: \"invoices/get_invoice_master\",\r\n    QUERY_ITEMS_TABLE_DATA: \"basicData/items\",\r\n    POST_ITEMS_TABLE_DATA: \"basicData/items_dml\",\r\n    QUERY_PRINT_OPTIONS_TABLE_DAT: \"basicData/print_options\",\r\n    POST_PRINT_OPTIONS_TABLE_DATA:\"basicData/print_options_dml\",\r\n    USER_LOG_IN: \"user_log_in\",\r\n    POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice_dml\",\r\n    QUERY_LABELS: \"get_labels\",\r\n    QUERY_CHUNK_LABELS: \"get_chunk_labels\",\r\n    QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\r\n    QUERY_CUSTOMER_AND_SUPPLIER_LIST: \"invoices/get_customer_supplier_list\",\r\n    QUERY_SUPPLIER_LIST: \"basicData/supplier_pop_data\",\r\n    QUERY_CUSTOMERS_LIST: \"basicData/customer_pop_data\",\r\n    QUERY_ITEMS_LIST: \"basicData/items_pop_data\",\r\n    QUERY_PRINT_OPTIONS_LIST: \"basicData/print_options_pop_data\",\r\n    //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\r\n    QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\r\n    //http://144.24.209.19:9090/api/v1/income_expense/get_casher_receipt_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\r\n    QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA: \"income_expense/get_casher_receipt_voucher_invoices\",\r\n    //http://144.24.209.19:9090/api/v1/income_expense/post_casher_receipt_voucher_invoices_dml?authorization=1677621781730\r\n    POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA: \"income_expense/post_casher_receipt_voucher_invoices_dml\",\r\n    //http://144.24.209.19:9090/api/v1/income_expense/get_casher_payment_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\r\n    QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA: \"income_expense/get_casher_payment_voucher_invoices\",\r\n    //http://144.24.209.19:9090/api/v1/income_expense/post_casher_payment_voucher_invoices_dml?authorization=1677621781730\r\n    POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA: \"income_expense/post_casher_payment_voucher_invoices_dml\",\r\n    //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\r\n    QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\"\r\n};\r\n\r\nexport default API_ID","import { useState, useEffect, useCallback } from \"react\";\r\nimport {API_ID} from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any\r\n  noAuthorization?: boolean\r\n}\r\n\r\nconst useFetch = ({\r\n    link = \"\", \r\n    fetchOnFirstRun,\r\n    refreshTimeout,\r\n    params, \r\n    noAuthorization = false\r\n  }: useFetchProp) => {\r\n    const toast = useToast()\r\n  const { authorization } = useLocalStorage()\r\n  //@ts-ignore\r\n  const url = `http://192.168.1.250:9090/api/v1/${API_ID[link]}`\r\n  const [data, setData] = useState<any>([]);\r\n  const getData = useCallback(async()=>{\r\n    if(authorization || noAuthorization){\r\nconst response = await fetch(`${url}?authorization=${authorization}&${new URLSearchParams(params)}`)\r\n    const apiData=await response.json();  \r\n  setData(apiData);\r\n    }\r\n},[authorization, noAuthorization, params, url])\r\n\r\n\r\n    useEffect(() => {\r\n      if(fetchOnFirstRun){\r\n        getData()\r\n      }\r\n      }, [fetchOnFirstRun, getData, url, params]);\r\n\r\n      useEffect(()=>{\r\n        if (data.response){\r\n          toast({\r\n            position: \"top-right\",\r\n            title: 'error',\r\n            description: `${JSON.stringify(data.response)}`,\r\n            status: 'error',\r\n            duration: 5000,\r\n            isClosable: true,\r\n        })\r\n        }\r\n      }, [data, toast])\r\n\r\n\r\n\r\n      const runFetch = useCallback(()=>{\r\n          getData()\r\n      },[getData])\r\n\r\n      return{data, runFetch, setData}\r\n}\r\n\r\nexport default useFetch","import {useState, useCallback, useEffect} from \"react\";\r\n\r\ninterface useFormManagerProps {\r\n    initialValue?: any\r\n    setSelectedRow?: any\r\n}\r\n\r\nconst useFormManager =({initialValue, setSelectedRow}: useFormManagerProps)=>{\r\n    const [initialValues, setInitialValues] = useState()\r\n    const [state, setState] = useState<typeof initialValue>({})\r\n\r\n    const onChange = useCallback((change: any)=>{\r\n        //@ts-ignore\r\n            if (setSelectedRow)setSelectedRow({...initialValue, [change.name]: change.value})\r\n            setState({...state, [change.name]: change.value})\r\n            setInitialValues(initialValues)\r\n    },[initialValues, initialValue, setSelectedRow, state])\r\n\r\n    useEffect(()=>{\r\n        if(setSelectedRow){\r\n            setState(initialValue);\r\n        }\r\n    },[initialValue, setSelectedRow])\r\n\r\n    useEffect(()=>{\r\n        setState(initialValue);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    const resetState = useCallback(()=>{\r\n        setSelectedRow(initialValues)\r\n    },[initialValues, setSelectedRow])\r\n\r\n    return{state, onChange, resetState}\r\n}\r\n\r\nexport default useFormManager","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport {API_ID} from \"@commons/global\";\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\ninterface usePostProps{\r\n    link: string;\r\n    noAuthorization?: boolean\r\n};\r\ninterface successType{\r\n    response: string;\r\n}\r\n\r\nconst usePost = ({\r\n    link  = \"\",\r\n    noAuthorization = false\r\n}: usePostProps) => {\r\n    const toast = useToast()\r\n    //@ts-ignore\r\n    const url = `http://192.168.1.250:9090/api/v1/${API_ID[link]}`\r\n    const [success, setSuccess] = useState<successType>()\r\n    const { authorization } = useLocalStorage()\r\n    const postData = useCallback(async (dataToPost: any) => {\r\n        if(authorization || noAuthorization){\r\n        dataToPost.authorization = authorization\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataToPost)\r\n        };\r\n        try {\r\n            const fetchResponse = await fetch(url, settings);\r\n            const data = await fetchResponse.json();\r\n            if (data.response === \"success\"){\r\n            toast({\r\n            position: \"top-right\",\r\n            title: 'Success',\r\n            description: `${data.response}`,\r\n            status: 'success',\r\n            duration: 5000,\r\n            isClosable: true,\r\n        })\r\n            } else {\r\n                toast({\r\n            position: \"top-right\",\r\n            title: 'Error',\r\n            description: `${data.response}`,\r\n            status: 'error',\r\n            duration: 9000,\r\n            isClosable: true,\r\n        })\r\n            }\r\n            setSuccess(data)\r\n            return data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }}\r\n    }, [authorization, noAuthorization, toast, url])\r\n\r\n    const setRow = useCallback((row: any) => {\r\n        postData(row)\r\n    }, [postData])\r\n\r\n    return { success, setRow }\r\n}\r\n\r\nexport default usePost","import React, { memo, useCallback } from \"react\";\r\nimport { TextAreaProps } from \"./interface\";\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst TextArea = ({\r\n    name,\r\n    Label = \"name\",\r\n    placeHolder,\r\n    width = \"30%\",\r\n    height = \"100px\",\r\n    padding,\r\n    margin = \"10px\",\r\n    onChange,\r\n    value,\r\n    disabled,\r\n}: TextAreaProps) => {\r\n    const { t } = useTranslation()\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-1 d-inline-block\" style={{\r\n                height: height,\r\n                width: width,\r\n                padding: padding,\r\n                margin: margin\r\n            }}>\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">{t(Label)}</label>\r\n                <textarea className=\"form-control\" placeholder={t(placeHolder)} id=\"floatingTextarea2Disabled\" value={value} disabled={disabled} onChange={handleChange}></textarea>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TextArea);","import React, { memo, useCallback, useEffect } from \"react\";\r\nimport { InputTextProps } from \"./interface\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\r\n\r\nconst InputText = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    Label = \"\",\r\n    onChange,\r\n    width = \"200px\",\r\n    type = \"text\",\r\n    placeHolder,\r\n    padding,\r\n    margin = \"10px\",\r\n    className = \"\",\r\n    required = false\r\n}: InputTextProps) => {\r\n    const { t } = useTranslation()\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange])\r\n\r\n    // console.log(new Date().getFullYear() + \"-\" + ((new Date().getMonth() + 1).length !== 2 ? \"0\" + (new Date().getMonth() + 1) : (new Date().getMonth() + 1)) + \"-\" + (new Date().getDate().length != 2 ? \"0\" + new Date().getDate() : new Date().getDate()))\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                w={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel>{t(Label)}</FormLabel>\r\n                <Input\r\n                    placeholder={placeHolder}\r\n                    size='md'\r\n                    isDisabled={disabled}\r\n                    isRequired={required}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    className={className}\r\n                    value={value}\r\n                    type={type}\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InputText)","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { CheckBoxProps } from \"./interface\";\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst CheckBox = ({\r\n    label = \"\",\r\n    value,\r\n    onChange,\r\n    name,\r\n    width,\r\n    disabled,\r\n    padding,\r\n    margin = \"10px\"\r\n}: CheckBoxProps) => {\r\n    const { t } = useTranslation()\r\n    const [checked, setChecked] = useState(false)\r\n    const handleChange = useCallback((event: { target: { checked: boolean; }; }) => {\r\n        if (event.target.checked === true) {\r\n            onChange({ name: name, value: \"Y\" })\r\n        } else if (event.target.checked === false) {\r\n            onChange({ name: name, value: \"N\" })\r\n        }\r\n    }, [name, onChange])\r\n\r\n    useEffect(() => {\r\n        if (value === \"Y\") {\r\n            setChecked(true)\r\n        } else if (value === \"N\") {\r\n            setChecked(false)\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-check\" style={{\r\n                width: width,\r\n                padding: padding,\r\n                margin: margin\r\n            }}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" checked={checked} id=\"flexCheckIndeterminate\" onChange={handleChange} disabled={disabled} />\r\n                <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminate\">\r\n                    {t(label)}\r\n                </label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(CheckBox)","import React, { memo } from \"react\";\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { TextArea } from \"@commons/input-text\";\r\nimport { useFormManager, usePost } from \"@commons/hooks\";\r\nimport { CheckBox } from \"@commons/check-box\";\r\nimport Modal from \"@commons/modal\";\r\nimport { EmployeeAttendanceProps } from \"./interface\"\r\n\r\nconst EmployeeAttendance = ({ visible, handleCloseModal }: EmployeeAttendanceProps) => {\r\n    const initialValue = {\r\n        date: \"\",\r\n        employee_id: \"\",\r\n        absent: \"N\",\r\n        query_status: \"n\",\r\n        attendance_time: \"\"\r\n    }\r\n    const { onChange, state } = useFormManager({ initialValue: initialValue })\r\n    const { date, employee_id, real_time, absent, reason } = state\r\n\r\n    const { setRow } = usePost({\r\n        link: \"POST_EMPLOYEE_ATTENDANCE\"\r\n    })\r\n\r\n    const handleSaveButton = () => {\r\n        setRow(state)\r\n        handleCloseModal()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                label=\"emplyatndnc\"\r\n                visible={visible}\r\n                onClose={handleCloseModal}\r\n                onOK={handleSaveButton}\r\n            >\r\n                <InputText\r\n                    Label=\"dt\"\r\n                    name=\"date\"\r\n                    value={date}\r\n                    onChange={onChange}\r\n                    type=\"date\"\r\n                    width=\"30%\"\r\n                />\r\n                <SelectWithApi\r\n                    name=\"employee_id\"\r\n                    onChange={onChange}\r\n                    Api=\"QUERY_EMPLOYEE_NAME_LIST\"\r\n                    value={employee_id}\r\n                    Label=\"emply\"\r\n                    width=\"30%\"\r\n                    fetchOnFirstRun={visible}\r\n                />\r\n                <InputText\r\n                    type=\"time\"\r\n                    name=\"attendance_time\"\r\n                    value={real_time}\r\n                    onChange={onChange}\r\n                    Label=\"atndnctm\"\r\n                    width=\"30%\"\r\n                />\r\n                <TextArea\r\n                    name=\"reason\"\r\n                    value={reason}\r\n                    onChange={onChange}\r\n                    Label=\"rsn\"\r\n                    width=\"70%\"\r\n                />\r\n                <CheckBox\r\n                    name=\"absent\"\r\n                    label=\"absnt\"\r\n                    value={absent}\r\n                    onChange={onChange}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(EmployeeAttendance)"],"names":["Select","width","Options","onChange","Label","value","name","withLabel","margin","padding","t","useTranslation","className","style","htmlFor","event","map","option","target","label","selected","Option","memo","SelectWithApi","Api","params","fetchOnFirstRun","data","useFetch","link","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","useState","setData","getData","useCallback","fetch","URLSearchParams","response","json","apiData","useEffect","position","title","description","JSON","stringify","status","duration","isClosable","runFetch","initialValue","setSelectedRow","initialValues","setInitialValues","state","setState","change","resetState","success","setSuccess","postData","dataToPost","settings","method","headers","Accept","body","fetchResponse","console","log","setRow","row","TextArea","placeHolder","height","disabled","handleChange","placeholder","id","InputText","type","required","direction","w","I","size","isDisabled","isRequired","Modal","children","visible","onClose","onOK","submitTitle","hideSaveButton","hideCloseButton","isOpen","wrap","justifyContent","colorScheme","mr","onClick","hidden","CheckBox","checked","setChecked","EmployeeAttendance","handleCloseModal","useFormManager","date","employee_id","absent","query_status","attendance_time","real_time","reason","usePost"],"sourceRoot":""}