{"version":3,"file":"static/js/210.d03689d4.chunk.js","mappings":"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","sources":["../common/Flex/src/index.tsx","../common/Select/src/styled.ts","../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/TableView/src/Table.tsx","../common/button/src/constants.ts","../common/button/src/iconButton.tsx","../common/date-picker/src/styled.ts","../common/date-picker/src/index.tsx","../common/global/src/appConstants.ts","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/useMutation.ts","../common/hooks/src/useValidateForm.ts","../common/input-number/src/styled.ts","../common/input-number/src/index.tsx","../common/input-text/src/styled.ts","../common/input-text/src/inputText.tsx","../pages/supplier-invoice-page/src/constants.ts","../pages/supplier-invoice-page/src/Partials/InsertForm.tsx","../pages/supplier-invoice-page/src/component.tsx","../node_modules/@chakra-ui/form-control/src/form-label.tsx","../node_modules/@chakra-ui/form-control/src/form-control.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\r\nimport { Flex as ChackraFlex } from \"@chakra-ui/react\"\r\nimport { flexProp } from \"./interface\"\r\n\r\nconst Flex = ({\r\n    children,\r\n    justifyContent,\r\n    width,\r\n    height,\r\n    padding = \"10px\",\r\n    margin,\r\n    bordered = false,\r\n    backgroundColor,\r\n    borderColor = \"#3c8dcf\",\r\n    borderWidth = \"px\",\r\n    borderRadius = \"5px\",\r\n    flexDirection = \"row\",\r\n    textAlign = \"\",\r\n    hidden = false,\r\n    wrap,\r\n    ...prop\r\n}: any) => {\r\n    const [border, setBorder] = useState(\"\")\r\n    useEffect(() => {\r\n        if (bordered) {\r\n            setBorder(`${borderWidth} solid ${borderColor}`)\r\n        }\r\n    }, [borderColor, borderWidth, bordered])\r\n    return (\r\n        <>\r\n            <ChackraFlex\r\n                width={width}\r\n                height={height}\r\n                padding={padding}\r\n                margin={margin}\r\n                background={backgroundColor}\r\n                borderRadius={borderRadius}\r\n                flexDirection={flexDirection}\r\n                textAlign={textAlign}\r\n                justifyContent={justifyContent}\r\n                hidden={hidden}\r\n                //@ts-ignore\r\n                wrap={wrap ? \"wrap\" : \"\"}\r\n                {...prop}\r\n            >\r\n                {children}\r\n            </ChackraFlex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Flex)","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledSelect = styled.select`\r\n  background: #fdfdfd;\r\n  border: 0.5px solid #cbd5e0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 7px;\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport const StyledOption = styled.option`\r\n  padding: 100px;\r\n`;\r\n\r\n// export const DropDownContainer = styled.span`\r\n//   margin: 0;\r\n//   min-width: 100%;\r\n//   position: relative;\r\n//   display: inline-block;\r\n//   min-height: 2em;\r\n//   max-height: 2em;\r\n//   overflow: hidden;\r\n//   top: 0.5em;\r\n//   cursor: pointer;\r\n//   text-align: left;\r\n//   white-space: nowrap;\r\n//   color: #444;\r\n//   outline: none;\r\n//   border: 0.06em solid transparent;\r\n//   border-radius: 1em;\r\n//   background-color: #cde4f5;\r\n//   transition: 0.3s all ease-in-out;\r\n\r\n//   &::after {\r\n//     content: \"\";\r\n//     position: absolute;\r\n//     right: 0.8em;\r\n//     top: 0.9em;\r\n//     border: 0.3em solid #3694d7;\r\n//     border-color: #3694d7 transparent transparent transparent;\r\n//     transition: 0.4s all ease-in-out;\r\n//   }\r\n\r\n//   /* &:nth-child(2) {\r\n//     border-top: 0.06em solid #d9d9d9;\r\n//   } */\r\n// `;\r\n\r\n// export const SelectInputRadio = styled.input`\r\n//   width: 1px;\r\n//   height: 1px;\r\n//   display: inline-block;\r\n//   position: absolute;\r\n//   opacity: 0.01;\r\n\r\n//   &:focus {\r\n//     background: #def;\r\n//   }\r\n\r\n//   /* &:checked {\r\n//     display: block;\r\n//     border-top: none;\r\n//     position: absolute;\r\n//     top: 0;\r\n//     width: 100%;\r\n//   } */\r\n// `;\r\n\r\n// export const SelectLabel = styled.label`\r\n//   border-top: 0.06em solid #d9d9d9;\r\n//   display: block;\r\n//   height: 2em;\r\n//   line-height: 2em;\r\n//   padding-left: 1em;\r\n//   padding-right: 3em;\r\n//   cursor: pointer;\r\n//   position: relative;\r\n//   transition: 0.3s color ease-in-out;\r\n// `;\r\n\r\n// <DropDownContainer\r\n//   className={`dropdown-el ${expanded ? \"expanded\" : \"\"}`}\r\n// >\r\n//   {/* <input type=\"radio\" name=\"sortType\" value=\"Relevance\" id=\"sort-relevance\" onClick={handleValue} /><label htmlFor=\"sort-relevance\">Relevance</label> */}\r\n//   <SelectInputRadio type=\"radio\" />\r\n//   <SelectLabel htmlFor=\"sort-best\">Product Popularity</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"PriceIncreasing\"\r\n//     id=\"sort-low\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-low\">Price Low to High</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"PriceDecreasing\"\r\n//     id=\"sort-high\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-high\">Price High to Low</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"ProductBrand\"\r\n//     id=\"sort-brand\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-brand\">Product Brand</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"ProductName\"\r\n//     id=\"sort-name\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-name\">Product Name</SelectLabel>\r\n// </DropDownContainer>;\r\n","import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormLabel, Flex } from '@chakra-ui/react';\r\nimport { StyledSelect, StyledOption } from \"./styled\"\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    height = \"65px\",\r\n    width = \"200px\",\r\n    Options,\r\n    onChange,\r\n    label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\",\r\n    selectLabelName = \"label_select\",\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.forEach((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, selectLabelName: selectLabelName, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                height={height}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(label)}</FormLabel>\r\n                <StyledSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    <StyledOption>{t(\"Select\")}</StyledOption>\r\n                    {Array.isArray(Options) && Options.length !== 0 ? Options.map((Option) => {\r\n                        return (\r\n                            <StyledOption key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</StyledOption>\r\n                        )\r\n                    }) : <StyledOption disabled>{t(\"No data\")}</StyledOption>}\r\n                </StyledSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    api,\r\n    onChange,\r\n    label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    selectLabelName = \"label_select\"\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params,\r\n        checkForParams: true\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                label={label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import React, { useState, useCallback, useRef } from \"react\";\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Table as ChakraTable,\r\n  Thead,\r\n  Tbody,\r\n  // Tfoot,\r\n  Text,\r\n  Box,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableContainer,\r\n  Skeleton,\r\n} from \"@chakra-ui/react\";\r\nimport Flex from \"@commons/flex\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\n\r\nconst Table = ({\r\n  dataSource,\r\n  height = \"300px\",\r\n  rowKey = \"rowKey\",\r\n  columns,\r\n  hideTools = true,\r\n  canEdit = false,\r\n  canAdd = false,\r\n  canDelete = false,\r\n  canExcel = false,\r\n  onAdd,\r\n  onEdit,\r\n  onDelete,\r\n  actionColumn = false,\r\n  onAction,\r\n  actionLabel = \"\",\r\n  onSelectedRow,\r\n  label,\r\n  canPrint = false,\r\n  onPrint,\r\n  additionalButtons,\r\n  onSave,\r\n  canSave = false,\r\n  width = \"100%\",\r\n  margin = \"\",\r\n  padding = \"\",\r\n  loading = false,\r\n  onDoubleClick,\r\n}: TableProps) => {\r\n  const { pathname } = useLocation();\r\n  const { t } = useTranslation();\r\n  const [rowSelected, setRowSelected] = useState();\r\n  const handleSelectedRow = useCallback(\r\n    (item: any) => () => {\r\n      if (onSelectedRow) onSelectedRow(item);\r\n      setRowSelected(item);\r\n    },\r\n    [onSelectedRow]\r\n  );\r\n\r\n  const handleDouble = useCallback(\r\n    (item: any) => () => {\r\n      if (onDoubleClick) onDoubleClick(item);\r\n      setRowSelected(item);\r\n    },\r\n    [onDoubleClick]\r\n  );\r\n\r\n  const onExcel = useCallback(() => {\r\n    const pathName = pathname.replace(\"/\", \"\");\r\n    const wb = XLSX.utils.book_new(),\r\n      //@ts-ignore\r\n      ws = XLSX.utils.json_to_sheet(dataSource);\r\n    XLSX.utils.book_append_sheet(wb, ws, pathName);\r\n    XLSX.writeFile(wb, `${pathName} ${new Date().toUTCString()}.xlsx`);\r\n  }, [dataSource, pathname]);\r\n\r\n  const componentRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <TableContainer width={width} padding={padding} margin={margin}>\r\n        {label && (\r\n          <Text\r\n            width=\"100%\"\r\n            textAlign=\"center\"\r\n            marginBottom=\"7px\"\r\n            fontSize=\"md\"\r\n            fontWeight=\"bold\"\r\n          >\r\n            {t(label)}\r\n          </Text>\r\n        )}\r\n        <Flex\r\n          width=\"100%\"\r\n          padding=\"0\"\r\n          margin=\"5px 0\"\r\n          justifyContent=\"center\"\r\n          hidden={hideTools}\r\n        >\r\n          <IconButton iconName=\"plus\" onClick={onAdd} hidden={!canAdd} />\r\n          <IconButton\r\n            iconName=\"edit\"\r\n            onClick={onEdit}\r\n            hidden={!canEdit}\r\n            disabled={!rowSelected}\r\n          />\r\n          <IconButton\r\n            iconName=\"delete\"\r\n            onClick={onDelete}\r\n            hidden={!canDelete}\r\n            disabled={!rowSelected}\r\n          />\r\n          {additionalButtons &&\r\n            additionalButtons.map((button: additionalButtonsType) => {\r\n              return (\r\n                <IconButton\r\n                  iconName={button.icon}\r\n                  onClick={button.onClick}\r\n                  disabled={button.disabled}\r\n                  hidden={false}\r\n                />\r\n              );\r\n            })}\r\n          <IconButton\r\n            iconName=\"save\"\r\n            onClick={onSave}\r\n            hidden={!canSave}\r\n            disabled={!canSave}\r\n          />\r\n          <IconButton\r\n            iconName=\"print\"\r\n            onClick={onPrint}\r\n            hidden={!canPrint}\r\n            disabled={!canPrint}\r\n          />\r\n          <IconButton\r\n            iconName=\"excel\"\r\n            onClick={onExcel}\r\n            hidden={!canExcel}\r\n            disabled={!canExcel}\r\n          />\r\n        </Flex>\r\n        <Skeleton isLoaded={!loading} fadeDuration={0}>\r\n          <Box overflowY=\"auto\" height={height}>\r\n            <ChakraTable\r\n              //@ts-ignore\r\n              ref={componentRef}\r\n            >\r\n              <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                <Tr>\r\n                  {columns.map((item: any) => {\r\n                    return (\r\n                      <Th maxWidth={item.width} minWidth={item.width}>\r\n                        {t(item.title)}\r\n                      </Th>\r\n                    );\r\n                  })}\r\n                  <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {dataSource?.map((item: any) => {\r\n                  return (\r\n                    <Tr\r\n                      key={item[rowKey]}\r\n                      onClick={handleSelectedRow(item)}\r\n                      onDoubleClick={handleDouble(item)}\r\n                      background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`}\r\n                    >\r\n                      {columns.map((column: any) => {\r\n                        return (\r\n                          <Td maxWidth={column.width} minWidth={column.width}>\r\n                            {item[column.dataIndex]}\r\n                          </Td>\r\n                        );\r\n                      })}\r\n                      <Td hidden={!actionColumn}>\r\n                        <Button\r\n                          label={actionLabel}\r\n                          width=\"100%\"\r\n                          onClick={() => {\r\n                            onAction(item);\r\n                          }}\r\n                        />\r\n                      </Td>\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </Tbody>\r\n\r\n              {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n            </ChakraTable>\r\n            {(!Array.isArray(dataSource) || dataSource.length === 0) &&\r\n            !loading ? (\r\n              <Flex justifyContent=\"center\" width=\"100%\">\r\n                <Text as=\"b\" fontSize=\"md\" color=\"red\">\r\n                  No Data\r\n                </Text>\r\n              </Flex>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Skeleton>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { typeObject } from \"./interface\";\r\n\r\nexport const iconType: typeObject = {\r\n  excel: \"fa-sharp fa-regular fa-file-excel\",\r\n  plus: \"fa-sharp fa-solid fa-plus\",\r\n  edit: \"fa-sharp fa-solid fa-pen-clip\",\r\n  delete: \"fa-sharp fa-solid fa-trash\",\r\n  save: \"fa-solid fa-floppy-disk\",\r\n  print: \"fa-solid fa-print\",\r\n  search: \"fa-solid fa-magnifying-glass\",\r\n  clear: \"fa-solid fa-broom\",\r\n};\r\n","import React, { memo } from \"react\";\r\nimport Button from \"./button\"\r\nimport { iconType } from \"./constants\"\r\nimport { iconButtonProp } from \"./interface\"\r\n\r\nconst IconButton = ({\r\n    iconName,\r\n    backGround = \"none\",\r\n    margin = \"5px\",\r\n    ...prop\r\n}: iconButtonProp) => {\r\n\r\n    const icon = <i className={iconName ? iconType[iconName] : \"\"}></i>\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                border=\"none\"\r\n                icon={icon}\r\n                padding=\"0\"\r\n                borderRadius=\"20px\"\r\n                margin={margin}\r\n                backGround={backGround}\r\n                {...prop}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(IconButton)","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledDate = styled.input`\r\n  background: #fdfdfd;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 7px;\r\n  padding: 0 10px;\r\n  border: 1px solid #cbd5e0;\r\n`;\r\n","import React, { memo, useCallback } from \"react\";\r\nimport { FormLabel, Flex } from '@chakra-ui/react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { defaultDate } from \"@commons/global\";\r\nimport { StyledDate } from \"./styled\"\r\nimport { DatePickerProps } from \"./interface\"\r\n\r\nconst DatePicker = ({\r\n    label,\r\n    value,\r\n    width = \"200px\",\r\n    padding,\r\n    margin = \"10px\",\r\n    name,\r\n    onChange,\r\n    required = false,\r\n    ...props\r\n}: DatePickerProps) => {\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange]);\r\n\r\n    const { t } = useTranslation()\r\n    return (\r\n        <Flex\r\n            direction=\"column\"\r\n            width={width}\r\n            padding={padding}\r\n            margin={margin}\r\n        >\r\n            <FormLabel>{t(label)}</FormLabel>\r\n            <StyledDate\r\n                type=\"date\"\r\n                value={value !== \"\" ? value : defaultDate}\r\n                onChange={handleChange}\r\n                {...props}\r\n            />\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default memo(DatePicker)\r\nexport * from \"./interface\"","export const month = [\r\n  {\r\n    label: \"1\",\r\n    value: 1,\r\n  },\r\n  {\r\n    label: \"2\",\r\n    value: 2,\r\n  },\r\n  {\r\n    label: \"3\",\r\n    value: 3,\r\n  },\r\n  {\r\n    label: \"4\",\r\n    value: 4,\r\n  },\r\n  {\r\n    label: \"5\",\r\n    value: 5,\r\n  },\r\n  {\r\n    label: \"6\",\r\n    value: 6,\r\n  },\r\n  {\r\n    label: \"7\",\r\n    value: 7,\r\n  },\r\n  {\r\n    label: \"8\",\r\n    value: 8,\r\n  },\r\n  {\r\n    label: \"9\",\r\n    value: 9,\r\n  },\r\n  {\r\n    label: \"10\",\r\n    value: 10,\r\n  },\r\n  {\r\n    label: \"11\",\r\n    value: 11,\r\n  },\r\n  {\r\n    label: \"12\",\r\n    value: 12,\r\n  },\r\n];\r\n\r\nexport const defaultDate = `${new Date().getFullYear()}-${\r\n  new Date().getMonth() + 1\r\n}-${new Date().getDate()}`;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst usePrevious = <T>(value: T): T => {\r\n  const ref = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current as T;\r\n};\r\n\r\nexport default usePrevious;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport usePrevious from \"./usePrevious\";\r\n\r\ninterface useFormManagerProps {\r\n  initialValues?: any;\r\n}\r\n\r\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\r\n  const [state, setState] = useState<typeof initialValues>(initialValues);\r\n\r\n  const hasAnyFieldChangedRef = useRef(false);\r\n  const preValues = usePrevious(initialValues);\r\n\r\n  const areInitialValuesChanged = useCallback(\r\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\r\n    [initialValues, preValues]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (areInitialValuesChanged()) {\r\n      setState({ ...initialValues });\r\n    }\r\n  }, [areInitialValuesChanged, initialValues]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    hasAnyFieldChangedRef.current = false;\r\n    setState(() => initialValues);\r\n    // @ts-ignore\r\n  }, [initialValues]);\r\n\r\n  useEffect(\r\n    () => {\r\n      return resetForm;\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const onChange = useCallback(\r\n    (eventData: any) => {\r\n      const { name, value } = eventData;\r\n      setState({ ...state, [name]: value });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleMultiInput = useCallback((e:any)=>{\r\n    setState({\r\n      ...state,\r\n      ...e\r\n    })\r\n  },[state])\r\n\r\n  const handleSelectWithLabelChange = useCallback(\r\n    (eventData: any) => {\r\n      setState({\r\n        ...state,\r\n        [eventData.name]: eventData.value,\r\n        [eventData.selectLabelName]: eventData.label,\r\n      });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleArrayChange = useCallback(\r\n    ({ name, value }: any) => {\r\n      setState({ ...state, [name]: [...state[name], value] });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return {\r\n    state,\r\n    onChange,\r\n    resetForm,\r\n    handleRootState: setState,\r\n    handleSelectWithLabelChange,\r\n    handleArrayChange,\r\n    handleMultiInput\r\n  };\r\n};\r\n\r\nexport default useFormManager;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://192.168.1.250:5000/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import { useCallback } from \"react\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useValidateFormProp{\r\n  validateFelids: string[],\r\n  functionToRun: ()=>void,\r\n  stateToValidate: any\r\n}\r\n\r\nconst useValidateForm = ({\r\n    validateFelids,\r\n    functionToRun,\r\n    stateToValidate\r\n  }: useValidateFormProp) => {\r\n    const toast = useToast();\r\n\r\n  const handleValidateFelids = useCallback(()=>{\r\n    let newARR: string[] = []\r\n    validateFelids.forEach((felid)=>{\r\n      if(stateToValidate[felid] !== undefined &&  !stateToValidate[felid]){\r\n        newARR.push(felid)\r\n      }\r\n    })\r\n\r\n    newARR.length !== 0 ? \r\n    toast({\r\n      position: \"top-right\",\r\n      title: \"Error\",\r\n      description: `\r\n      Make sure to fill this required fields\r\n      ${newARR.toString()}\r\n      `,\r\n      status: \"info\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n    }):\r\n    functionToRun()\r\n\r\n  },[functionToRun, stateToValidate, toast, validateFelids])\r\n\r\n  return handleValidateFelids;\r\n};\r\n\r\nexport default useValidateForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledInput = styled.input<any>`\r\nbackground: #fdfdfd;\r\nborder: 0.5px solid #cbd5e0;\r\nheight: 100%;\r\nwidth: 100%;\r\nborder-radius: 7px;\r\npadding: 0 16px;\r\n`","import React, { memo, useCallback } from \"react\";\r\nimport { FormLabel, Flex } from '@chakra-ui/react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyledInput } from \"./styled\"\r\nimport { inputNumberProp } from \"./interface\";\r\n\r\nconst InputNumber = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    label = \"\",\r\n    onChange,\r\n    height = \"65px\",\r\n    width = \"200px\",\r\n    padding,\r\n    margin = \"10px\",\r\n    ...props\r\n}: inputNumberProp) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: +event.target.value })\r\n    }, [name, onChange]);\r\n\r\n    return (\r\n\r\n        <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                height={height}\r\n            >\r\n                <FormLabel>{t(label)}</FormLabel>\r\n                <StyledInput\r\n                    disabled={disabled}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    value={value}\r\n                    type = \"number\"\r\n                    {...props}\r\n                />\r\n            </Flex>\r\n    )\r\n}\r\n\r\nexport default memo(InputNumber)","import styled from '@emotion/styled';\r\n\r\nexport const StyledInput = styled.input<any>`\r\nbackground: #fdfdfd;\r\nborder: 0.5px solid #cbd5e0;\r\nheight: 100%;\r\nwidth: 100%;\r\nborder-radius: 7px;\r\npadding: 0 16px;\r\n`\r\n\r\n//`border:  ${required ? `0.5px solid red` : `0.5px solid #cbd5e0`};`","import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormLabel, Flex } from '@chakra-ui/react'\r\nimport { StyledInput } from \"./styled\"\r\nimport { InputTextProps } from \"./interface\";\r\n\r\nconst InputText = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    label = \"\",\r\n    onChange,\r\n    height = \"65px\",\r\n    width = \"200px\",\r\n    type = \"text\",\r\n    placeHolder,\r\n    padding,\r\n    margin = \"10px\",\r\n    className = \"\",\r\n    required,\r\n    ...props\r\n}: InputTextProps) => {\r\n    const { t } = useTranslation();\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange]);\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                height={height}\r\n            >\r\n                <FormLabel>{t(label)}</FormLabel>\r\n                <StyledInput\r\n                    placeholder={placeHolder}\r\n                    disabled={disabled}\r\n                    required={required}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    className={className}\r\n                    value={value}\r\n                    type={type}\r\n                    {...props}\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InputText)","import { defaultDate } from \"@commons/global\";\r\n\r\nexport const initialRootState = {\r\n  supplier_id: 0,\r\n  supplier_name: \"\",\r\n  supplier_invoice_date: defaultDate,\r\n  supplier_invoice_items: [],\r\n  query_status: \"n\",\r\n  supplier_invoice_total: 0,\r\n  supplier_invoice_discount: 0,\r\n  supplier_invoice_after_discount: 0,\r\n  supplier_invoice_paid: 0,\r\n  supplier_invoice_credit: 0\r\n}\r\n\r\nexport const initialItemState = {\r\n  supplier_invoice_item_id: 0,\r\n  supplier_invoice_item_width: 0,\r\n  supplier_invoice_item_height: 0,\r\n  supplier_invoice_item_size: 0,\r\n  supplier_invoice_item_quantity: 0,\r\n  supplier_invoice_item_price: 0,\r\n  supplier_invoice_item_total: 0,\r\n  supplier_invoice_item_notes: \"\",\r\n}\r\n\r\nexport const itemValidate = [\r\n  \"supplier_invoice_item_id\",\r\n  \"supplier_invoice_item_width\",\r\n  \"supplier_invoice_item_height\",\r\n  \"supplier_invoice_item_size\",\r\n  \"supplier_invoice_item_quantity\",\r\n  \"supplier_invoice_item_price\",\r\n  \"supplier_invoice_item_total\",\r\n]\r\n\r\nexport const rootValidate = [\r\n  \"supplier_id\",\r\n  \"supplier_invoice_date\",\r\n  \"supplier_invoice_items\",\r\n  \"supplier_invoice_total\",\r\n  \"supplier_invoice_after_discount\",\r\n]\r\n\r\nexport const columns = [\r\n  {\r\n    title: \"itmnm\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"item_name\",\r\n  },\r\n  {\r\n    title: \"wdth\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_width\",\r\n  },\r\n  {\r\n    title: \"hght\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_height\",\r\n  },\r\n  {\r\n    title: \"sz\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_size\",\r\n  },\r\n  {\r\n    title: \"qnty\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_quantity\",\r\n  },\r\n  {\r\n    title: \"prc\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_price\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_total\",\r\n  },\r\n  {\r\n    title: \"nts\",\r\n    width: \"11.1%\",\r\n    dataIndex: \"supplier_invoice_item_notes\",\r\n  },\r\n];\r\n","import React, { memo, useCallback } from \"react\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { InputText } from \"@commons/input-text\";\r\nimport Flex from \"@commons/flex\";\r\nimport InputNumber from \"@commons/input-number\"\r\nimport {onChangeType} from\"@commons/global\"\r\n\r\ninterface InsertFormProp {\r\n    onChange: any;\r\n    state: any;\r\n    handleSelectWithLabelChange: any\r\n    handleItemMultiInput?: any\r\n}\r\n\r\nconst InsertForm = ({\r\n    onChange,\r\n    state,\r\n    handleSelectWithLabelChange,\r\n    handleItemMultiInput\r\n}: InsertFormProp) => {\r\n\r\n    const handleWidth = useCallback(({name, value}:onChangeType)=>{\r\n        handleItemMultiInput({\r\n            [name]:value,\r\n            supplier_invoice_item_size: +value * +state.supplier_invoice_item_height,\r\n        })\r\n    },[handleItemMultiInput, state.supplier_invoice_item_height])\r\n    const handleHeight = useCallback(({name, value}:onChangeType)=>{\r\n        handleItemMultiInput({\r\n            [name]:value,\r\n            supplier_invoice_item_size: +state.supplier_invoice_item_width  * +value\r\n        })\r\n    },[handleItemMultiInput, state.supplier_invoice_item_width])\r\n    const handleQuantity = useCallback(({name, value}:onChangeType)=>{\r\n        handleItemMultiInput({\r\n            [name]:value,\r\n            supplier_invoice_item_total: +value * +state.supplier_invoice_item_price *  +state.supplier_invoice_item_size\r\n        })\r\n    },[handleItemMultiInput, state.supplier_invoice_item_price, state.supplier_invoice_item_size])\r\n    const handlePrice = useCallback(({name, value}:onChangeType)=>{\r\n        handleItemMultiInput({\r\n            [name]:value,\r\n            supplier_invoice_item_total: +state.supplier_invoice_item_quantity * +value * +state.supplier_invoice_item_size\r\n        })\r\n    },[handleItemMultiInput, state.supplier_invoice_item_quantity, state.supplier_invoice_item_size])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Flex width=\"100%\" flexDirection=\"column\" margin=\"0\" padding=\"0\">\r\n                <Flex margin=\"0\" padding=\"0\">\r\n                    <SelectWithApi\r\n                        api=\"QUERY_ITEMS_LIST\"\r\n                        onChange={handleSelectWithLabelChange}\r\n                        value={state.supplier_invoice_item_id}\r\n                        label=\"itmnm\"\r\n                        name=\"supplier_invoice_item_id\"\r\n                        withLabel\r\n                        fetchOnFirstRun\r\n                        selectLabelName=\"item_name\"\r\n                    />\r\n                </Flex>\r\n                <Flex margin=\"0\" padding=\"0\">\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_width\"\r\n                        value={state.supplier_invoice_item_width}\r\n                        label=\"wdth\"\r\n                        onChange={handleWidth}\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_height\"\r\n                        value={state.supplier_invoice_item_height}\r\n                        label=\"hght\"\r\n                        onChange={handleHeight}\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_size\"\r\n                        value={state.supplier_invoice_item_size}\r\n                        label=\"sz\"\r\n                        onChange={onChange}\r\n                        disabled\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_quantity\"\r\n                        value={state.supplier_invoice_item_quantity}\r\n                        label=\"qty\"\r\n                        onChange={handleQuantity}\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_price\"\r\n                        value={state.supplier_invoice_item_price}\r\n                        label=\"prc\"\r\n                        onChange={handlePrice}\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputNumber\r\n                        name=\"supplier_invoice_item_total\"\r\n                        value={state.supplier_invoice_item_total}\r\n                        label=\"total\"\r\n                        onChange={onChange}\r\n                        disabled\r\n                        width=\"14%\"\r\n                    />\r\n                    <InputText\r\n                        name=\"supplier_invoice_item_notes\"\r\n                        value={state.supplier_invoice_item_notes}\r\n                        label=\"nts\"\r\n                        onChange={onChange}\r\n                        width=\"14%\"\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InsertForm)","import React, { memo, useCallback } from 'react';\r\nimport { Table } from \"@commons/table\";\r\nimport DatePicker from \"@commons/date-picker\"\r\nimport { onChangeType } from \"@commons/global\";\r\nimport { useFormManager, useMutation, useValidateForm } from \"@commons/hooks\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { Button } from \"@commons/button\";\r\nimport Flex from \"@commons/flex\";\r\nimport InputNumber from \"@commons/input-number\";\r\nimport { columns, initialRootState, initialItemState, rootValidate, itemValidate } from \"./constants\";\r\nimport InsertForm from \"./Partials/InsertForm\";\r\n\r\nconst SupplierInvoice = () => {\r\n\r\n    const {\r\n        state,\r\n        onChange,\r\n        resetForm,\r\n        handleArrayChange,\r\n        handleMultiInput,\r\n        handleSelectWithLabelChange: mainStateHandleSelectWithLabelChange\r\n    } = useFormManager({\r\n        initialValues: initialRootState\r\n    })\r\n\r\n    const {\r\n        state: currentItemState,\r\n        onChange: currentItemChange,\r\n        handleSelectWithLabelChange,\r\n        resetForm: resetItemForm,\r\n        handleMultiInput: handleItemMultiInput\r\n    } = useFormManager({\r\n        initialValues: initialItemState\r\n    })\r\n\r\n    const { setRow } = useMutation({ link: \"POST_SUPPLIER_INVOICE\", runOnSuccess: resetForm })\r\n\r\n    const handleSave = useCallback(() => {\r\n        setRow(state)\r\n    }, [setRow, state]);\r\n\r\n    const additionalButtons = [\r\n        {\r\n            icon: \"fa-solid fa-broom\",\r\n            onClick: resetForm\r\n        },\r\n    ]\r\n\r\n    const handleAdd = useCallback(() => {\r\n        handleArrayChange({ name: \"supplier_invoice_items\", value: {...currentItemState, rowKey: state.supplier_invoice_items.length + 1} })\r\n        let totals = 0\r\n        state.supplier_invoice_items.forEach((item: any) => {\r\n            totals = totals + item.supplier_invoice_item_total\r\n        });\r\n        const computedTotals = totals + currentItemState.supplier_invoice_item_total\r\n        handleMultiInput({\r\n            supplier_invoice_items: [\r\n                ...state.supplier_invoice_items,\r\n                currentItemState\r\n            ],\r\n            supplier_invoice_total: computedTotals,\r\n            supplier_invoice_after_discount:  computedTotals - state.supplier_invoice_discount,\r\n            supplier_invoice_credit: computedTotals - state.supplier_invoice_discount - state.supplier_invoice_paid\r\n        })\r\n        resetItemForm()\r\n    }, [currentItemState, handleArrayChange, handleMultiInput, resetItemForm, state.supplier_invoice_discount, state.supplier_invoice_items, state.supplier_invoice_paid])\r\n\r\n    const handleDiscount = useCallback(({ name, value }: onChangeType) => {\r\n        handleMultiInput({\r\n            [name]: value,\r\n            supplier_invoice_after_discount: state.supplier_invoice_total - +value\r\n        })\r\n    }, [handleMultiInput, state.supplier_invoice_total])\r\n\r\n    const handlePaid = useCallback(({ name, value }: onChangeType) => {\r\n        handleMultiInput({\r\n            [name]: value,\r\n            supplier_invoice_credit: state.supplier_invoice_total - state.supplier_invoice_discount - +value\r\n        })\r\n    }, [handleMultiInput, state.supplier_invoice_discount, state.supplier_invoice_total])\r\n\r\n    //TODO: add Delete Function and make sure to update the total and credit\r\n    const handleDelete = (e: any) => {\r\n        const computedItems = state.supplier_invoice_items.filter((f:any)=> e.rowKey !== f.rowKey )\r\n        const totalAfterDelete = state.supplier_invoice_total - state.supplier_invoice_item_total\r\n        handleMultiInput({\r\n            supplier_invoice_items: computedItems,\r\n            supplier_invoice_total:totalAfterDelete,\r\n            supplier_invoice_after_discount:totalAfterDelete - state.supplier_invoice_discount,\r\n            supplier_invoice_credit:totalAfterDelete - state.supplier_invoice_discount - state.supplier_invoice_paid\r\n        })\r\n    }\r\n\r\n    const handleValidateFelids = useValidateForm({\r\n        validateFelids: itemValidate,\r\n        functionToRun: handleAdd,\r\n        stateToValidate: currentItemState\r\n    })\r\n\r\n    const handleValidateInvoiceFelids = useValidateForm({\r\n        validateFelids: rootValidate,\r\n        functionToRun: handleSave,\r\n        stateToValidate: state\r\n    })\r\n\r\n    return (\r\n        <>\r\n\r\n            <Flex flexDirection='column' width='100%'>\r\n                <Flex margin=\"0\" padding=\"0\">\r\n                    <SelectWithApi\r\n                        api=\"QUERY_SUPPLIER_LIST\"\r\n                        onChange={mainStateHandleSelectWithLabelChange}\r\n                        value={state.supplier_id}\r\n                        label=\"splr\"\r\n                        name=\"supplier_id\"\r\n                        fetchOnFirstRun\r\n                        withLabel\r\n                        selectLabelName=\"supplier_name\"\r\n                    />\r\n                    <DatePicker\r\n                        name=\"supplier_invoice_date\"\r\n                        value={state.supplier_invoice_date}\r\n                        label=\"dt\"\r\n                        onChange={onChange}\r\n                    />\r\n                </Flex>\r\n                <InsertForm\r\n                    state={currentItemState}\r\n                    onChange={currentItemChange}\r\n                    handleSelectWithLabelChange={handleSelectWithLabelChange}\r\n                    handleItemMultiInput={handleItemMultiInput}\r\n                />\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={state.supplier_invoice_items}\r\n                    actionColumn\r\n                    actionLabel=\"Delete\"\r\n                    rowKey=\"supplier_invoice_item_id\"\r\n                    onAction={handleDelete}\r\n                    hideTools={false}\r\n                    onAdd={handleValidateFelids}\r\n                    canAdd={true}\r\n                    canPrint\r\n                    additionalButtons={additionalButtons}\r\n                />\r\n                <Flex width='100%' justifyContent='space-around'>\r\n                    <InputNumber\r\n                        name='supplier_invoice_total'\r\n                        disabled\r\n                        value={state.supplier_invoice_total}\r\n                        label=\"total\"\r\n                        width=\"15%\"\r\n                    />\r\n                    <InputNumber\r\n                        name='supplier_invoice_discount'\r\n                        value={state.supplier_invoice_discount}\r\n                        label=\"dscnt\"\r\n                        onChange={handleDiscount}\r\n                        width=\"15%\"\r\n                    />\r\n                    <InputNumber\r\n                        name='supplier_invoice_after_discount'\r\n                        disabled\r\n                        value={state.supplier_invoice_after_discount}\r\n                        label=\"tlaftrdsnt\"\r\n                        width=\"15%\"\r\n                    />\r\n                    <InputNumber\r\n                        name='supplier_invoice_paid'\r\n                        value={state.handlePaid}\r\n                        label=\"paid\"\r\n                        onChange={handlePaid}\r\n                        width=\"15%\"\r\n                    />\r\n                    <InputNumber\r\n                        name='supplier_invoice_credit'\r\n                        disabled\r\n                        value={state.supplier_invoice_credit}\r\n                        label=\"crdt\"\r\n                        width=\"15%\"\r\n                    />\r\n                    <Button\r\n                        label=\"sv\"\r\n                        width=\"15%\"\r\n                        margin=\"30px 0\"\r\n                        onClick={handleValidateInvoiceFelids}\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SupplierInvoice);","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { useCallback, useId, useState } from \"react\"\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `,\n})\n\nexport { useFormControlContext, useFormControlStyles }\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g. Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [FormControlProvider, useFormControlContext] =\n  createContext<FormControlProviderContext>({\n    strict: false,\n    name: \"FormControlContext\",\n  })\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useState(false)\n\n  const getHelpTextProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id !== undefined ? props.id : labelId,\n      htmlFor: props.htmlFor !== undefined ? props.htmlFor : id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n    }),\n    [htmlProps],\n  )\n\n  const getRequiredIndicatorProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n *\n * @see Docs https://chakra-ui.com/docs/components/form-control\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  function FormControl(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props)\n    const ownProps = omitThemingProps(props)\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps)\n\n    const className = cx(\"chakra-form-control\", props.className)\n\n    return (\n      <FormControlProvider value={context}>\n        <FormControlStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className={className}\n            __css={styles[\"container\"]}\n          />\n        </FormControlStylesProvider>\n      </FormControlProvider>\n    )\n  },\n)\n\nFormControl.displayName = \"FormControl\"\n\nexport interface FormHelperTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<FormHelperTextProps, \"div\">(\n  function FormHelperText(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n    const className = cx(\"chakra-form__helper-text\", props.className)\n    return (\n      <chakra.div\n        {...field?.getHelpTextProps(props, ref)}\n        __css={styles.helperText}\n        className={className}\n      />\n    )\n  },\n)\n\nFormHelperText.displayName = \"FormHelperText\"\n"],"names":["Flex","_ref","children","justifyContent","width","height","padding","margin","bordered","backgroundColor","borderColor","borderWidth","borderRadius","flexDirection","textAlign","hidden","wrap","prop","border","setBorder","useState","useEffect","concat","_jsx","_Fragment","ChackraFlex","background","memo","StyledSelect","styled","select","_templateObject","_taggedTemplateLiteral","StyledOption","option","_templateObject2","Select","Options","onChange","label","value","name","withLabel","placeholder","selectLabelName","t","useTranslation","_jsxs","direction","FormLabel","fontSize","as","event","Array","isArray","forEach","target","length","map","Option","selected","disabled","SelectWithApi","api","params","data","useFetch","link","fetchOnFirstRun","checkForParams","dataSource","rowKey","columns","hideTools","canEdit","canAdd","canDelete","canExcel","onAdd","onEdit","onDelete","actionColumn","onAction","actionLabel","onSelectedRow","canPrint","onPrint","additionalButtons","onSave","canSave","loading","onDoubleClick","pathname","useLocation","rowSelected","setRowSelected","handleSelectedRow","useCallback","item","handleDouble","onExcel","pathName","replace","wb","XLSX","book_new","ws","json_to_sheet","book_append_sheet","Date","toUTCString","componentRef","useRef","TableContainer","Text","marginBottom","fontWeight","IconButton","iconName","onClick","button","icon","Skeleton","isLoaded","fadeDuration","Box","overflowY","ChakraTable","ref","Thead","top","position","bgColor","Tr","Th","maxWidth","minWidth","title","Tbody","column","Td","dataIndex","Button","color","iconType","excel","plus","edit","delete","save","print","search","clear","backGround","className","StyledDate","input","DatePicker","required","props","handleChange","type","defaultDate","getFullYear","getMonth","getDate","current","initialValues","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","Object","is","JSON","stringify","resetForm","eventData","handleMultiInput","e","handleSelectWithLabelChange","handleArrayChange","_ref2","handleRootState","noAuthorization","additionalFunctionToRun","runOnSuccess","runOnFail","method","toast","useToast","url","API_ID","success","setSuccess","authorization","useLocalStorage","postData","async","settings","headers","Accept","Authorization","body","dataToPost","fetchResponse","fetch","json","response","description","status","duration","isClosable","message","setRow","row","validateFelids","functionToRun","stateToValidate","newARR","felid","undefined","push","toString","StyledInput","InputNumber","InputText","placeHolder","initialRootState","supplier_id","supplier_name","supplier_invoice_date","supplier_invoice_items","query_status","supplier_invoice_total","supplier_invoice_discount","supplier_invoice_after_discount","supplier_invoice_paid","supplier_invoice_credit","initialItemState","supplier_invoice_item_id","supplier_invoice_item_width","supplier_invoice_item_height","supplier_invoice_item_size","supplier_invoice_item_quantity","supplier_invoice_item_price","supplier_invoice_item_total","supplier_invoice_item_notes","itemValidate","rootValidate","InsertForm","handleItemMultiInput","handleWidth","handleHeight","_ref3","handleQuantity","_ref4","handlePrice","_ref5","SupplierInvoice","mainStateHandleSelectWithLabelChange","useFormManager","currentItemState","currentItemChange","resetItemForm","useMutation","handleSave","handleAdd","totals","computedTotals","handleDiscount","handlePaid","handleValidateFelids","useValidateForm","handleValidateInvoiceFelids","Table","computedItems","filter","f","totalAfterDelete","forwardRef","passedProps","_a","styles","useStyleConfig","omitThemingProps","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","display","isRequired","displayName","useFormControlStyles","span","getRequiredIndicatorProps","FormControlStylesProvider","createContext","errorMessage","FormControlProvider","strict","FormControl","useMultiStyleConfig","getRootProps","htmlProps","_","context","id","idProp","isInvalid","isDisabled","isReadOnly","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","forwardedRef","arguments","mergeRefs","node","props2","dataAttr","htmlFor","getErrorMessageProps","role","onFocus","onBlur","useFormControlProvider","div","helperText"],"sourceRoot":""}