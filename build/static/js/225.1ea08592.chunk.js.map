{"version":3,"file":"static/js/225.1ea08592.chunk.js","mappings":"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","sources":["../common/Flex/src/index.tsx","../common/modal/src/index.tsx","../common/TableView/src/ApiTable.tsx","../common/button/src/iconButton.tsx","../common/TableView/src/Table.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/useMutation.ts"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport { Flex as ChackraFlex } from \"@chakra-ui/react\"\nimport { flexProp } from \"./interface\"\n\nconst Flex = ({\n    children,\n    justifyContent,\n    width,\n    height,\n    padding = \"10px\",\n    margin,\n    bordered = false,\n    backgroundColor,\n    borderColor = \"#3c8dcf\",\n    borderWidth = \"px\",\n    borderRadius = \"5px\",\n    flexDirection = \"row\",\n    textAlign = \"\",\n    hidden = false,\n    wrap\n}: any) => {\n    const [border, setBorder] = useState(\"\")\n    useEffect(() => {\n        if (bordered) {\n            setBorder(`${borderWidth} solid ${borderColor}`)\n        }\n    }, [borderColor, borderWidth, bordered])\n    return (\n        <>\n            <ChackraFlex\n                width={width}\n                height={height}\n                padding={padding}\n                margin={margin}\n                background={backgroundColor}\n                borderRadius={borderRadius}\n                flexDirection={flexDirection}\n                textAlign={textAlign}\n                justifyContent={justifyContent}\n                hidden={hidden}\n                //@ts-ignore\n                wrap={wrap ? \"wrap\" : \"\"}\n            >\n                {children}\n            </ChackraFlex>\n        </>\n    )\n}\n\nexport default memo(Flex)","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo, useState, useCallback } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\nimport { TableWithApiProps } from \"./interface\"\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    ModalContent,\r\n    onClick,\r\n    fetchOnFirstRun = false,\r\n    params,\r\n    ...props\r\n}: TableWithApiProps) => {\r\n    const { data, runFetch, loading } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false)\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onClick) onClick(row)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onSelectedRow={handleSelectedRow}\r\n                loading={loading}\r\n                {...props}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TableWithApi)","import React, { memo } from \"react\";\nimport { iconButtonProp } from \"./interface\"\n\nconst IconButton = ({\n    icon,\n    onClick,\n    disabled = false,\n    width = \"30px\",\n    height = \"30px\",\n    color,\n    margin = \"10px\",\n    padding,\n    hidden = false\n}: iconButtonProp) => {\n    return (\n        <>\n            <button style={{\n                border: \"none\",\n                width: width,\n                height: height,\n                backgroundColor: color,\n                padding: padding,\n                margin: margin,\n                borderRadius: \"20px\"\n            }} hidden={hidden} onClick={onClick} disabled={disabled} >\n                <i className={icon}></i>\n            </button>\n        </>\n    )\n}\n\nexport default memo(IconButton)","import React, { useState, useCallback, useRef } from 'react';\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as XLSX from \"xlsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport ReactToPrint from 'react-to-print';\r\nimport {\r\n    Table as ChakraTable,\r\n    Thead,\r\n    Tbody,\r\n    // Tfoot,\r\n    Text,\r\n    Box,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableContainer,\r\n    Skeleton,\r\n} from '@chakra-ui/react'\r\nimport Flex from \"@commons/flex\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\n\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    height = \"300px\",\r\n    rowKey = \"rowKey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    canExcel = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    label,\r\n    canPrint = false,\r\n    onPrint,\r\n    additionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\",\r\n    margin = \"\",\r\n    padding = \"\",\r\n    loading = false,\r\n    onDoubleClick = (e) => { console.log(e) }\r\n}: TableProps) => {\r\n    const { pathname } = useLocation()\r\n    const { t } = useTranslation()\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        if (onSelectedRow) onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    const handleDouble = useCallback((item: any) => () => {\r\n        if (onDoubleClick) onDoubleClick(item)\r\n        setRowSelected(item)\r\n    }, [onDoubleClick])\r\n\r\n    const onExcel = useCallback(() => {\r\n        const pathName = pathname.replace(\"/\", \"\")\r\n        const wb = XLSX.utils.book_new(),\r\n            //@ts-ignore\r\n            ws = XLSX.utils.json_to_sheet(dataSource)\r\n        XLSX.utils.book_append_sheet(wb, ws, pathName)\r\n        XLSX.writeFile(wb, `${pathName} ${new Date().toUTCString()}.xlsx`)\r\n    }, [dataSource, pathname])\r\n\r\n    const componentRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <TableContainer width={width} padding={padding} margin={margin}>\r\n                {label && <Text width=\"100%\" textAlign=\"center\" marginBottom=\"7px\" fontSize='md' fontWeight=\"bold\">{t(label)}</Text>}\r\n                <Flex\r\n                    width='100%'\r\n                    padding='0'\r\n                    margin='5px 0'\r\n                    justifyContent='center'\r\n                    hidden={hideTools}\r\n                >\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-plus'\r\n                        onClick={onAdd}\r\n                        hidden={!canAdd}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-pen-clip'\r\n                        onClick={onEdit}\r\n                        hidden={!canEdit}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-trash'\r\n                        onClick={onDelete}\r\n                        hidden={!canDelete}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    {additionalButtons && additionalButtons.map((button: additionalButtonsType) => {\r\n                        return (\r\n                            <IconButton\r\n                                icon={button.icon}\r\n                                onClick={button.onClick}\r\n                                disabled={button.disabled}\r\n                                hidden={false}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <IconButton\r\n                        icon='fa-solid fa-floppy-disk'\r\n                        onClick={onSave}\r\n                        hidden={!canSave}\r\n                        disabled={!canSave}\r\n                    />\r\n                    <ReactToPrint\r\n                        trigger={() => <IconButton\r\n                            icon='fa-solid fa-print'\r\n                            hidden={!canPrint}\r\n                            disabled={!canPrint}\r\n                        />}\r\n                        //@ts-ignore\r\n                        content={() => {\r\n                            return (\r\n                                componentRef.current\r\n                            )\r\n                        }}\r\n                        documentTitle=\"dd\"\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-regular fa-file-excel'\r\n                        onClick={onExcel}\r\n                        hidden={!canExcel}\r\n                        disabled={!canExcel}\r\n                    />\r\n                </Flex>\r\n                <Skeleton isLoaded={!loading} fadeDuration={0} >\r\n                    <Box overflowY=\"auto\" height={height}>\r\n                        <ChakraTable\r\n                            //@ts-ignore\r\n                            ref={componentRef}\r\n                        >\r\n                            <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                                <Tr>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <Th maxWidth={item.width} minWidth={item.width}>\r\n                                                {t(item.title)}\r\n                                            </Th>\r\n                                        )\r\n                                    })}\r\n                                    <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <Tr key={item[rowKey]} onClick={handleSelectedRow(item)} onDoubleClick={handleDouble(item)} background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`} >\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <Td maxWidth={column.width} minWidth={column.width}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </Td>\r\n                                                )\r\n                                            })}\r\n                                            <Td hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={() => { onAction(item) }}\r\n                                                />\r\n                                            </Td>\r\n                                        </Tr>\r\n                                    )\r\n                                })}\r\n                            </Tbody>\r\n\r\n                            {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n\r\n                        </ChakraTable>\r\n\r\n                        {!Array.isArray(dataSource) || dataSource.length === 0 && !loading ? <Flex justifyContent='center' width='100%'>\r\n                            <Text as='b' fontSize='md' color='red'>No Data</Text>\r\n                        </Flex> : <></>}\r\n                    </Box>\r\n                </Skeleton>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","const API_ID = {\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dmlPOST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\n  //http://144.24.209.19:9090/api/invoices/customer_invoice/new_customer_invoice\n  POST_CUSTOMER_INVOICE_DETAILS:\n    \"invoices/customer_invoice/new_customer_invoice\",\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\n  //http://144.24.209.19:9090/api/employees/employee_data/employee_table_data\n  QUERY_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data\",\n  ////http://144.24.209.19:9090/api/employees/employee_data/employee_table_data_dml\n  POST_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data_dml\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_detail_table?invoice_type=C&invoice_no=\n  QUERY_INVOICE_DETAIL_TABLE_DATA:\n    \"invoices/invoice_search/customer_supplier_invoice_detail_table\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_main_table?invoice_type=C&invoice_no=\n  QUERY_INVOICE_MASTER_TABLE_DATA:\n    \"invoices/invoice_search/customer_supplier_invoice_main_table\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_invoices_for_today\n  QUERY_CUSTOMERS_INVOICES_FOT_TODAY:\n    \"invoices/invoice_search/customer_invoices_for_today\",\n  QUERY_SUPPLIERS_INVOICES_FOT_TODAY:\n    \"invoices/invoice_search/supplier_invoices_for_today\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\n    \"basic_data/print_options/print_options_table_data\",\n  POST_PRINT_OPTIONS_TABLE_DATA:\n    \"basic_data/print_options/print_options_table_data_dml\",\n  //http://144.24.209.19:9090/auth_security/sign_in\n  USER_LOG_IN: \"auth_security/sign_in\",\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\n  QUERY_LABELS: \"get_labels\",\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_list?invoice_type=S\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST:\n    \"invoices/invoice_search/customer_supplier_list\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_lins\n  QUERY_PRINT_OPTIONS_LIST: \"basic_data/print_options/print_options_lins\",\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_receipt_voucher/main_table\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_receipt_voucher/main_table_dml\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_payment_voucher/main_table\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_payment_voucher/main_table_dml\",\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\n  POST_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\n  //http://144.24.209.19:9090/api/charts/invoices_query?\n  QUERY_INVOICES_CHART_DATA: \"charts/invoices_query\",\n  //http://144.24.209.19:9090/api/auth_security/users_info\n  QUERY_USERS_TABLE_DATA: \"auth_security/users_info\",\n  //http://144.24.209.19:9090/api/auth_security/users_info_dml\n  POST_USERS_TABLE_DATA: \"auth_security/users_info_dml\",\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data\n  QUERY_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data\",\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data_dml\n  POST_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data_dml\",\n  //http://144.24.209.19:9090/api/system_reports/customer_summary_table\n  QUERY_CUSTOMER_SUMMARY_TABLE: \"system_reports/customer_summary_table\",\n};\n\nexport default API_ID;\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setLoading(true);\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      setLoading(false);\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  const everyTime = useCallback(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n      // setInterval(everyTime, 10000);\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params, everyTime]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  // clearInterval(myInterval);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, useCallback } from \"react\";\nimport { useLocalStorage } from \"@commons/hooks\";\nimport { API_ID } from \"@commons/global\";\nimport { useToast } from \"@chakra-ui/react\";\n\ninterface useMutationProps {\n  link: string;\n  noAuthorization?: boolean;\n  additionalFunctionToRun?: () => void;\n  runOnSuccess?: () => void;\n  runOnFail?: () => void;\n  method?: string;\n}\ninterface successType {\n  response: string;\n}\n\nconst useMutation = ({\n  link = \"\",\n  noAuthorization = false,\n  additionalFunctionToRun,\n  runOnSuccess,\n  runOnFail,\n  method = \"POST\",\n}: useMutationProps) => {\n  const toast = useToast();\n  //@ts-ignore\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\n  const [success, setSuccess] = useState<successType>();\n  const { authorization } = useLocalStorage();\n  const postData = useCallback(\n    async (dataToPost: any) => {\n      if (authorization || noAuthorization) {\n        const settings = {\n          method: method,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${authorization}`,\n          },\n          body: JSON.stringify(dataToPost),\n        };\n        try {\n          const fetchResponse = await fetch(url, settings);\n          const data = await fetchResponse.json();\n          if (data.response === \"success\") {\n            toast({\n              position: \"top-right\",\n              title: \"Success\",\n              description: `${data.response}`,\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n            });\n            if (runOnSuccess) runOnSuccess();\n          } else {\n            toast({\n              position: \"top-right\",\n              title: \"Error\",\n              description: `${data.message}`,\n              status: \"error\",\n              duration: 9000,\n              isClosable: true,\n            });\n            if (runOnFail) runOnFail();\n          }\n          setSuccess(data);\n          if (additionalFunctionToRun) {\n            additionalFunctionToRun();\n          }\n          return data;\n        } catch (e) {}\n      }\n    },\n    [\n      additionalFunctionToRun,\n      authorization,\n      method,\n      noAuthorization,\n      runOnFail,\n      runOnSuccess,\n      toast,\n      url,\n    ]\n  );\n\n  const setRow = useCallback(\n    (row: any) => {\n      postData(row);\n    },\n    [postData]\n  );\n\n  return { success, setRow };\n};\n\nexport default useMutation;\n"],"names":["Flex","children","justifyContent","width","height","padding","margin","bordered","backgroundColor","borderColor","borderWidth","borderRadius","flexDirection","textAlign","hidden","wrap","useState","setBorder","useEffect","background","memo","Modal","visible","label","onClose","onOK","submitTitle","hideSaveButton","hideCloseButton","t","useTranslation","isOpen","size","w","colorScheme","mr","onClick","TableWithApi","api","postApi","columns","ModalContent","fetchOnFirstRun","params","props","useFetch","link","data","runFetch","loading","onSaveAndInsertion","useTableControlsButtons","selectedRow","setSelectedRow","modal","setModal","handleAdd","useCallback","query_status","handleEdit","handleCloseModal","refreshTable","Table","dataSource","onAdd","onEdit","onDelete","onSelectedRow","row","IconButton","icon","disabled","color","style","border","className","rowKey","hideTools","canEdit","canAdd","canDelete","canExcel","actionColumn","onAction","actionLabel","canPrint","additionalButtons","onPrint","onSave","canSave","onDoubleClick","e","console","log","pathname","useLocation","rowSelected","setRowSelected","handleSelectedRow","item","handleDouble","onExcel","pathName","replace","wb","XLSX","ws","Date","toUTCString","componentRef","useRef","marginBottom","fontSize","fontWeight","map","button","trigger","content","current","documentTitle","isLoaded","fadeDuration","overflowY","ref","top","position","bgColor","Tr","Th","maxWidth","minWidth","title","column","Td","dataIndex","Array","isArray","length","as","newRecord","useMutation","additionalFunctionToRun","method","setRow","updateRecord","deleteRecord","record","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_CUSTOMERS_INVOICES_FOT_TODAY","QUERY_SUPPLIERS_INVOICES_FOT_TODAY","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","QUERY_INVOICES_CHART_DATA","QUERY_USERS_TABLE_DATA","POST_USERS_TABLE_DATA","QUERY_PAGE_NAME_MAIN_TABLE","POST_PAGE_NAME_MAIN_TABLE","QUERY_CUSTOMER_SUMMARY_TABLE","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","undefined","setData","setLoading","getData","settings","headers","Accept","Authorization","fetch","URLSearchParams","response","json","apiData","everyTime","description","JSON","stringify","status","duration","isClosable","runOnSuccess","runOnFail","success","setSuccess","postData","dataToPost","body","fetchResponse","message"],"sourceRoot":""}