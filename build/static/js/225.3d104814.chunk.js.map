{"version":3,"file":"static/js/225.3d104814.chunk.js","mappings":"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","sources":["../common/Flex/src/index.tsx","../common/modal/src/index.tsx","../common/TableView/src/ApiTable.tsx","../common/button/src/iconButton.tsx","../common/TableView/src/Table.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/useMutation.ts"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\r\nimport { Flex as ChackraFlex } from \"@chakra-ui/react\"\r\nimport { flexProp } from \"./interface\"\r\n\r\nconst Flex = ({\r\n    children,\r\n    justifyContent,\r\n    width,\r\n    height,\r\n    padding = \"10px\",\r\n    margin,\r\n    bordered = false,\r\n    backgroundColor,\r\n    borderColor = \"#3c8dcf\",\r\n    borderWidth = \"px\",\r\n    borderRadius = \"5px\",\r\n    flexDirection = \"row\",\r\n    textAlign = \"\",\r\n    hidden = false,\r\n    wrap\r\n}: any) => {\r\n    const [border, setBorder] = useState(\"\")\r\n    useEffect(() => {\r\n        if (bordered) {\r\n            setBorder(`${borderWidth} solid ${borderColor}`)\r\n        }\r\n    }, [borderColor, borderWidth, bordered])\r\n    return (\r\n        <>\r\n            <ChackraFlex\r\n                width={width}\r\n                height={height}\r\n                padding={padding}\r\n                margin={margin}\r\n                background={backgroundColor}\r\n                borderRadius={borderRadius}\r\n                flexDirection={flexDirection}\r\n                textAlign={textAlign}\r\n                justifyContent={justifyContent}\r\n                hidden={hidden}\r\n                //@ts-ignore\r\n                wrap={wrap ? \"wrap\" : \"\"}\r\n            >\r\n                {children}\r\n            </ChackraFlex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Flex)","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo, useState, useCallback } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\nimport { TableWithApiProps } from \"./interface\"\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    ModalContent,\r\n    onClick,\r\n    fetchOnFirstRun = false,\r\n    params,\r\n    ...props\r\n}: TableWithApiProps) => {\r\n    const { data, runFetch, loading } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false)\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onClick) onClick(row)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onSelectedRow={handleSelectedRow}\r\n                loading={loading}\r\n                {...props}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TableWithApi)","import React, { memo } from \"react\";\r\nimport { iconButtonProp } from \"./interface\"\r\n\r\nconst IconButton = ({\r\n    icon,\r\n    onClick,\r\n    disabled = false,\r\n    width = \"30px\",\r\n    height = \"30px\",\r\n    color,\r\n    margin = \"10px\",\r\n    padding,\r\n    hidden = false\r\n}: iconButtonProp) => {\r\n    return (\r\n        <>\r\n            <button style={{\r\n                border: \"none\",\r\n                width: width,\r\n                height: height,\r\n                backgroundColor: color,\r\n                padding: padding,\r\n                margin: margin,\r\n                borderRadius: \"20px\"\r\n            }} hidden={hidden} onClick={onClick} disabled={disabled} >\r\n                <i className={icon}></i>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(IconButton)","import React, { useState, useCallback, useRef } from 'react';\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as XLSX from \"xlsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport ReactToPrint from 'react-to-print';\r\nimport {\r\n    Table as ChakraTable,\r\n    Thead,\r\n    Tbody,\r\n    // Tfoot,\r\n    Text,\r\n    Box,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableContainer,\r\n    Skeleton,\r\n} from '@chakra-ui/react'\r\nimport Flex from \"@commons/flex\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\n\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    height = \"300px\",\r\n    rowKey = \"rowKey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    canExcel = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    label,\r\n    canPrint = false,\r\n    onPrint,\r\n    additionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\",\r\n    margin = \"\",\r\n    padding = \"\",\r\n    loading = false,\r\n    onDoubleClick = (e) => { console.log(e) }\r\n}: TableProps) => {\r\n    const { pathname } = useLocation()\r\n    const { t } = useTranslation()\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        if (onSelectedRow) onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    const handleDouble = useCallback((item: any) => () => {\r\n        if (onDoubleClick) onDoubleClick(item)\r\n        setRowSelected(item)\r\n    }, [onDoubleClick])\r\n\r\n    const onExcel = useCallback(() => {\r\n        const pathName = pathname.replace(\"/\", \"\")\r\n        const wb = XLSX.utils.book_new(),\r\n            //@ts-ignore\r\n            ws = XLSX.utils.json_to_sheet(dataSource)\r\n        XLSX.utils.book_append_sheet(wb, ws, pathName)\r\n        XLSX.writeFile(wb, `${pathName} ${new Date().toUTCString()}.xlsx`)\r\n    }, [dataSource, pathname])\r\n\r\n    const componentRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <TableContainer width={width} padding={padding} margin={margin}>\r\n                {label && <Text width=\"100%\" textAlign=\"center\" marginBottom=\"7px\" fontSize='md' fontWeight=\"bold\">{t(label)}</Text>}\r\n                <Flex\r\n                    width='100%'\r\n                    padding='0'\r\n                    margin='5px 0'\r\n                    justifyContent='center'\r\n                    hidden={hideTools}\r\n                >\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-plus'\r\n                        onClick={onAdd}\r\n                        hidden={!canAdd}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-pen-clip'\r\n                        onClick={onEdit}\r\n                        hidden={!canEdit}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-trash'\r\n                        onClick={onDelete}\r\n                        hidden={!canDelete}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    {additionalButtons && additionalButtons.map((button: additionalButtonsType) => {\r\n                        return (\r\n                            <IconButton\r\n                                icon={button.icon}\r\n                                onClick={button.onClick}\r\n                                disabled={button.disabled}\r\n                                hidden={false}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <IconButton\r\n                        icon='fa-solid fa-floppy-disk'\r\n                        onClick={onSave}\r\n                        hidden={!canSave}\r\n                        disabled={!canSave}\r\n                    />\r\n                    <ReactToPrint\r\n                        trigger={() => <IconButton\r\n                            icon='fa-solid fa-print'\r\n                            hidden={!canPrint}\r\n                            disabled={!canPrint}\r\n                        />}\r\n                        //@ts-ignore\r\n                        content={() => {\r\n                            return (\r\n                                componentRef.current\r\n                            )\r\n                        }}\r\n                        documentTitle=\"dd\"\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-regular fa-file-excel'\r\n                        onClick={onExcel}\r\n                        hidden={!canExcel}\r\n                        disabled={!canExcel}\r\n                    />\r\n                </Flex>\r\n                <Skeleton isLoaded={!loading} fadeDuration={0} >\r\n                    <Box overflowY=\"auto\" height={height}>\r\n                        <ChakraTable\r\n                            //@ts-ignore\r\n                            ref={componentRef}\r\n                        >\r\n                            <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                                <Tr>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <Th maxWidth={item.width} minWidth={item.width}>\r\n                                                {t(item.title)}\r\n                                            </Th>\r\n                                        )\r\n                                    })}\r\n                                    <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <Tr key={item[rowKey]} onClick={handleSelectedRow(item)} onDoubleClick={handleDouble(item)} background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`} >\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <Td maxWidth={column.width} minWidth={column.width}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </Td>\r\n                                                )\r\n                                            })}\r\n                                            <Td hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={() => { onAction(item) }}\r\n                                                />\r\n                                            </Td>\r\n                                        </Tr>\r\n                                    )\r\n                                })}\r\n                            </Tbody>\r\n\r\n                            {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n\r\n                        </ChakraTable>\r\n\r\n                        {!Array.isArray(dataSource) || dataSource.length === 0 && !loading ? <Flex justifyContent='center' width='100%'>\r\n                            <Text as='b' fontSize='md' color='red'>No Data</Text>\r\n                        </Flex> : <></>}\r\n                    </Box>\r\n                </Skeleton>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","const API_ID = {\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\r\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\r\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\r\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dmlPOST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/invoices/customer_invoice/new_customer_invoice\r\n  POST_CUSTOMER_INVOICE_DETAILS:\r\n    \"invoices/customer_invoice/new_customer_invoice\",\r\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\r\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\r\n  //http://144.24.209.19:9090/api/employees/employee_data/employee_table_data\r\n  QUERY_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data\",\r\n  ////http://144.24.209.19:9090/api/employees/employee_data/employee_table_data_dml\r\n  POST_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_detail_table?invoice_type=C&invoice_no=\r\n  QUERY_INVOICE_DETAIL_TABLE_DATA:\r\n    \"invoices/invoice_search/customer_supplier_invoice_detail_table\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_main_table?invoice_type=C&invoice_no=\r\n  QUERY_INVOICE_MASTER_TABLE_DATA:\r\n    \"invoices/invoice_search/customer_supplier_invoice_main_table\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_invoices_for_today\r\n  QUERY_CUSTOMERS_INVOICES_FOT_TODAY:\r\n    \"invoices/invoice_search/customer_invoices_for_today\",\r\n  QUERY_SUPPLIERS_INVOICES_FOT_TODAY:\r\n    \"invoices/invoice_search/supplier_invoices_for_today\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\r\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\r\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\r\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\r\n    \"basic_data/print_options/print_options_table_data\",\r\n  POST_PRINT_OPTIONS_TABLE_DATA:\r\n    \"basic_data/print_options/print_options_table_data_dml\",\r\n  //http://144.24.209.19:9090/auth_security/sign_in\r\n  USER_LOG_IN: \"auth_security/sign_in\",\r\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\r\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\r\n  QUERY_LABELS: \"get_labels\",\r\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\r\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_list?invoice_type=S\r\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST:\r\n    \"invoices/invoice_search/customer_supplier_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\r\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\r\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\r\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_lins\r\n  QUERY_PRINT_OPTIONS_LIST: \"basic_data/print_options/print_options_lins\",\r\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\r\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\r\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\r\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\r\n    \"income_and_expenses/casher_receipt_voucher/main_table\",\r\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\r\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\r\n    \"income_and_expenses/casher_receipt_voucher/main_table_dml\",\r\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\r\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\r\n    \"income_and_expenses/casher_payment_voucher/main_table\",\r\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\r\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\r\n    \"income_and_expenses/casher_payment_voucher/main_table_dml\",\r\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\r\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\r\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\r\n    \"basic_data/expenses_type/expenses_type_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\r\n  POST_EXPENSES_TYPES_TABLE_DATA:\r\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\r\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\r\n  //http://144.24.209.19:9090/api/charts/invoices_query?\r\n  QUERY_INVOICES_CHART_DATA: \"charts/invoices_query\",\r\n  //http://144.24.209.19:9090/api/auth_security/users_info\r\n  QUERY_USERS_TABLE_DATA: \"auth_security/users_info\",\r\n  //http://144.24.209.19:9090/api/auth_security/users_info_dml\r\n  POST_USERS_TABLE_DATA: \"auth_security/users_info_dml\",\r\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data\r\n  QUERY_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data\",\r\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data_dml\r\n  POST_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/system_reports/customer_summary_table\r\n  QUERY_CUSTOMER_SUMMARY_TABLE: \"system_reports/customer_summary_table\",\r\n  //http://144.24.209.19:9090/api/system_reports/supplier_summary_table?supplier_id=1\r\n  QUERY_SUPPLIER_SUMMARY_TABLE: \"system_reports/supplier_summary_table\",\r\n  //http://144.24.209.19:9090/api/system_reports/items_summary_table?item_id=1\r\n  QUERY_ITEM_SUMMARY_TABLE: \"system_reports/items_summary_table\",\r\n  //http://144.24.209.19:9090/api/system_reports/daily_summary_table?date_from=2023-01-01&date_to=2023-12-12\r\n  QUERY_DAILY_SUMMARY_TABLE: \"system_reports/daily_summary_table\",\r\n  //http://144.24.209.19:9090/api/system_reports/accounts_summary_table?type=C\r\n  QUERY_ACCOUNTS_SUMMARY_TABLE: \"system_reports/accounts_summary_table\",\r\n};\r\n\r\nexport default API_ID;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setLoading(true);\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      setLoading(false);\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  const everyTime = useCallback(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n      // setInterval(everyTime, 10000);\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params, everyTime]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  // clearInterval(myInterval);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n"],"names":["Flex","_ref","children","justifyContent","width","height","_ref$padding","padding","margin","_ref$bordered","bordered","backgroundColor","_ref$borderColor","borderColor","_ref$borderWidth","borderWidth","_ref$borderRadius","borderRadius","_ref$flexDirection","flexDirection","_ref$textAlign","textAlign","_ref$hidden","hidden","wrap","_useState","useState","_useState2","_slicedToArray","setBorder","useEffect","concat","_jsx","_Fragment","ChackraFlex","background","memo","Modal","_ref$visible","visible","label","onClose","onOK","_ref$submitTitle","submitTitle","_ref$width","_ref$hideSaveButton","hideSaveButton","_ref$hideCloseButton","hideCloseButton","t","useTranslation","_jsxs","ModalView","isOpen","size","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","w","ModalFooter","Button","colorScheme","mr","onClick","TableWithApi","api","postApi","columns","_ref$fetchOnFirstRun","fetchOnFirstRun","params","props","_objectWithoutProperties","_excluded","_useFetch","useFetch","link","data","runFetch","loading","onSaveAndInsertion","useTableControlsButtons","selectedRow","setSelectedRow","_useState3","_useState4","modal","setModal","handleAdd","useCallback","query_status","handleEdit","_objectSpread","handleCloseModal","refreshTable","Table","dataSource","onAdd","onEdit","onDelete","onSelectedRow","row","IconButton","icon","_ref$disabled","disabled","_ref$height","color","_ref$margin","style","border","className","_ref$rowKey","rowKey","_ref$hideTools","hideTools","_ref$canEdit","canEdit","_ref$canAdd","canAdd","_ref$canDelete","canDelete","_ref$canExcel","canExcel","_ref$actionColumn","actionColumn","onAction","_ref$actionLabel","actionLabel","_ref$canPrint","canPrint","additionalButtons","onPrint","onSave","_ref$canSave","canSave","_ref$loading","_ref$onDoubleClick","onDoubleClick","e","console","log","pathname","useLocation","rowSelected","setRowSelected","handleSelectedRow","item","handleDouble","onExcel","pathName","replace","wb","XLSX","book_new","ws","json_to_sheet","book_append_sheet","Date","toUTCString","componentRef","useRef","TableContainer","Text","marginBottom","fontSize","fontWeight","map","button","ReactToPrint","trigger","content","current","documentTitle","Skeleton","isLoaded","fadeDuration","Box","overflowY","ChakraTable","ref","Thead","top","position","bgColor","Tr","Th","maxWidth","minWidth","title","Tbody","column","Td","dataIndex","Array","isArray","length","as","_ref$api","newRecord","useMutation","additionalFunctionToRun","method","setRow","updateRecord","deleteRecord","record","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_CUSTOMERS_INVOICES_FOT_TODAY","QUERY_SUPPLIERS_INVOICES_FOT_TODAY","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","QUERY_INVOICES_CHART_DATA","QUERY_USERS_TABLE_DATA","POST_USERS_TABLE_DATA","QUERY_PAGE_NAME_MAIN_TABLE","POST_PAGE_NAME_MAIN_TABLE","QUERY_CUSTOMER_SUMMARY_TABLE","QUERY_SUPPLIER_SUMMARY_TABLE","QUERY_ITEM_SUMMARY_TABLE","QUERY_DAILY_SUMMARY_TABLE","QUERY_ACCOUNTS_SUMMARY_TABLE","_ref$link","refreshTimeout","_ref$noAuthorization","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","undefined","setData","setLoading","getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settings","response","apiData","_context","prev","next","headers","Accept","Authorization","fetch","URLSearchParams","sent","json","stop","everyTime","description","JSON","stringify","status","duration","isClosable","_ref2","runOnSuccess","runOnFail","_ref$method","success","setSuccess","postData","_x","dataToPost","fetchResponse","body","message","abrupt","t0","apply","arguments"],"sourceRoot":""}