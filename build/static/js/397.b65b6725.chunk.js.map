{"version":3,"file":"static/js/397.b65b6725.chunk.js","mappings":"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","sources":["../common/radio-box/src/index.tsx","../pages/invoices-search-page/src/constant.ts","../pages/invoices-search-page/src/Partials/FormView.tsx","../pages/invoices-search-page/src/component.tsx"],"sourcesContent":["import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Radio, RadioGroup, Stack, FormLabel, Flex } from '@chakra-ui/react'\r\nimport { radioBoxProps, option } from \"./interface\"\r\n\r\nconst RadioBox = ({\r\n    name,\r\n    options,\r\n    width,\r\n    onChange,\r\n    value,\r\n    Label,\r\n    margin = \"10px\",\r\n    padding\r\n}: radioBoxProps) => {\r\n    const { t } = useTranslation()\r\n    const handleChange = useCallback((value: string | number) => {\r\n        onChange({ name: name, value: value })\r\n    }, [name, onChange])\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                wrap=\"wrap\"\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <Flex\r\n                    className=\"css-1xsh6d8\"\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                >\r\n                    <RadioGroup\r\n                        padding=\"7px\"\r\n                        onChange={handleChange}\r\n                        value={value}\r\n                        width=\"100%\"\r\n                        display=\"flex\"\r\n                        gap=\"15px\"\r\n                        flexWrap=\"wrap\"\r\n                    >\r\n                        {options.map((option: option) => {\r\n                            return (\r\n                                <Stack direction='row'>\r\n                                    <Radio value={option.value} >{t(option.label)}</Radio>\r\n                                </Stack>\r\n                            )\r\n                        })}\r\n                    </RadioGroup>\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(RadioBox)","export const mainTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"invoice_id\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"dt\",\r\n    dataIndex: \"invoice_date\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"invoice_after_discount\",\r\n    width: \"10%\",\r\n  },\r\n];\r\n\r\nexport const detailTableColumns = [\r\n  {\r\n    title: \"itmid\",\r\n    dataIndex: \"item_id\",\r\n    width: \"7%\",\r\n  },\r\n  {\r\n    title: \"itmnm\",\r\n    dataIndex: \"item_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"wdth\",\r\n    dataIndex: \"width\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"hght\",\r\n    dataIndex: \"height\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"sz\",\r\n    dataIndex: \"size\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"qnty\",\r\n    dataIndex: \"quantity\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"prc\",\r\n    dataIndex: \"price\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"total\",\r\n    width: \"5%\",\r\n  },\r\n];\r\n\r\nexport const RadioBoxOptions = [\r\n  {\r\n    label: \"splr\",\r\n    value: \"S\",\r\n  },\r\n  {\r\n    label: \"cstmr\",\r\n    value: \"C\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport RadioBox from \"@commons/radio-box\";\r\nimport { RadioBoxOptions } from \"../constant\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { InputText } from \"@commons/input-text\";\r\nimport Flex from \"@commons/flex\";\r\nimport { SearchButton } from \"@commons/button\"\r\n\r\nconst FormView = ({ onChange, state, runQuery }: any) => {\r\n    return (\r\n        <>\r\n            <Flex bordered width=\"100%\" wrap>\r\n                <RadioBox\r\n                    name=\"invoice_type\"\r\n                    options={RadioBoxOptions}\r\n                    value={state.invoice_type}\r\n                    onChange={onChange}\r\n                    Label=\"invctyp\"\r\n                    width=\"17%\"\r\n                />\r\n                <InputText\r\n                    name=\"invoice_no\"\r\n                    Label=\"no\"\r\n                    onChange={onChange}\r\n                    type=\"number\"\r\n                    value={state.invoice_no}\r\n                />\r\n                <SelectWithApi\r\n                    name=\"person_id\"\r\n                    Api=\"QUERY_CUSTOMER_AND_SUPPLIER_LIST\"\r\n                    Label=\"nm\"\r\n                    params={{\r\n                        invoice_type: state.invoice_type\r\n                    }}\r\n                    value={state.name}\r\n                    fetchOnFirstRun\r\n                    onChange={onChange}\r\n                />\r\n                <InputText\r\n                    name=\"date_from\"\r\n                    value={state.date_from}\r\n                    Label=\"dtfrm\"\r\n                    onChange={onChange}\r\n                    type=\"date\"\r\n                />\r\n                <InputText\r\n                    name=\"date_to\"\r\n                    value={state.date_to}\r\n                    Label=\"dto\"\r\n                    onChange={onChange}\r\n                    type=\"date\"\r\n                />\r\n            </Flex>\r\n            <SearchButton\r\n                onClick={runQuery}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(FormView)","import React, { memo, useCallback, useState } from \"react\";\r\nimport { Table } from \"@commons/table\";\r\nimport { useFormManager } from \"@commons/hooks\";\r\nimport Flex from \"@commons/flex\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport FormView from \"./Partials/FormView\";\r\nimport { mainTableColumns, detailTableColumns } from \"./constant\";\r\n\r\nconst InvoicesSearch = () => {\r\n\r\n    const [row, setRow] = useState({\r\n        invoice_id: \"\"\r\n    })\r\n    const {\r\n        state\r\n        , onChange\r\n    } = useFormManager({\r\n        initialValues: {\r\n            invoice_type: \"C\",\r\n            invoice_no: \"\",\r\n            person_id: \"\",\r\n            date_from: \"\",\r\n            date_to: \"\"\r\n        }\r\n    })\r\n    const { invoice_type, invoice_no, person_id } = state\r\n\r\n    const onSelectedRow = useCallback((row?: any) => {\r\n        setRow(row)\r\n    }, [])\r\n\r\n    const { data, runFetch, loading } = useFetch({\r\n        link: \"QUERY_INVOICE_MASTER_TABLE_DATA\",\r\n        params: {\r\n            invoice_type: invoice_type,\r\n            invoice_no: invoice_no,\r\n            person_id: person_id,\r\n        },\r\n    })\r\n\r\n    const {\r\n        data: detailData,\r\n        runFetch: runFetchDetailData,\r\n        loading: detailLoading\r\n    } = useFetch({\r\n        link: \"QUERY_INVOICE_DETAIL_TABLE_DATA\",\r\n        params: {\r\n            invoice_type: invoice_type,\r\n            invoice_no: row.invoice_id\r\n        }\r\n    })\r\n\r\n    const runQuery = useCallback(() => {\r\n        runFetch()\r\n        runFetchDetailData()\r\n    }, [runFetch, runFetchDetailData])\r\n\r\n    return (\r\n        <>\r\n            <Flex width=\"100%\" margin=\"0\" padding=\"0\" flexDirection=\"column\">\r\n                <FormView\r\n                    onChange={onChange}\r\n                    state={state}\r\n                    runQuery={runQuery}\r\n                />\r\n                <Flex width=\"100%\" margin=\"0\" padding=\"0\" justifyContent=\"space-between\">\r\n                    <Flex width=\"40%\">\r\n                        <Table\r\n                            columns={mainTableColumns}\r\n                            dataSource={data?.data}\r\n                            rowKey=\"invoice_id\"\r\n                            onSelectedRow={onSelectedRow}\r\n                            height=\"400px\"\r\n                            loading={loading}\r\n                        />\r\n                    </Flex>\r\n                    <Flex width=\"60%\">\r\n                        <Table\r\n                            columns={detailTableColumns}\r\n                            dataSource={detailData?.data}\r\n                            rowKey=\"row_key\"\r\n                            loading={detailLoading}\r\n                        />\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InvoicesSearch)"],"names":["RadioBox","name","options","width","onChange","value","Label","margin","padding","t","useTranslation","handleChange","useCallback","direction","wrap","fontSize","as","className","height","display","gap","flexWrap","map","option","label","memo","mainTableColumns","title","dataIndex","detailTableColumns","RadioBoxOptions","FormView","state","runQuery","bordered","invoice_type","type","invoice_no","Api","params","fetchOnFirstRun","date_from","date_to","onClick","InvoicesSearch","useState","invoice_id","row","setRow","useFormManager","initialValues","person_id","onSelectedRow","useFetch","link","data","runFetch","loading","detailData","runFetchDetailData","detailLoading","flexDirection","justifyContent","Table","columns","dataSource","rowKey"],"sourceRoot":""}