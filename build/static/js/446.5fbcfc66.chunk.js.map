{"version":3,"file":"static/js/446.5fbcfc66.chunk.js","mappings":"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","sources":["../common/chart-js/src/chart.tsx","../common/chart-js/src/chartWithApi.tsx","../components/invoice-details-with-edit-modal/src/constant.ts","../components/invoice-details-with-edit-modal/src/index.tsx","../pages/DashBoard/src/constants.ts","../pages/DashBoard/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport 'chart.js/auto';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Flex from \"@commons/flex\";\r\nimport { barChartProp } from \"./interface\";\r\n\r\nconst BarChart = ({\r\n  mode = 'bar',\r\n  width,\r\n  height,\r\n  margin,\r\n  padding,\r\n  label = \"chart\",\r\n  dataSource\r\n}: barChartProp) => {\r\n  const { t } = useTranslation()\r\n  const view = () => {\r\n\r\n    switch (mode) {\r\n      case \"line\":\r\n        return <Chart type='line' data={dataSource} />;\r\n      case \"pie\":\r\n        return <Chart type='pie' data={dataSource} />;\r\n      case \"bar\":\r\n        return <Chart type='bar' data={dataSource} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        width={width}\r\n        height={height}\r\n        margin={margin}\r\n        padding={padding}\r\n      >\r\n        <Flex width=\"100%\" justifyContent=\"center\">\r\n          <p>{t(label)}</p>\r\n        </Flex>\r\n        {dataSource && view()}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(BarChart)","import React, { memo, useEffect, useState } from \"react\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport BarChart from \"./chart\";\r\nimport { chartWithApi } from \"./interface\"\r\n\r\nconst ChartWithApi = ({\r\n    api,\r\n    params,\r\n    ...prop\r\n}: chartWithApi) => {\r\n\r\n    const [dataSource, setDataSource] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                data: [],\r\n            },\r\n        ],\r\n    })\r\n\r\n    const { data } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(data)) {\r\n            setDataSource(data)\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <BarChart\r\n                dataSource={dataSource}\r\n                {...prop}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ChartWithApi);","export const columns = [\r\n  {\r\n    title: \"itmnm\",\r\n    dataIndex: \"item\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"wdth\",\r\n    dataIndex: \"width\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"hght\",\r\n    dataIndex: \"height\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"sz\",\r\n    dataIndex: \"size\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"qnty\",\r\n    dataIndex: \"quantity\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"prc\",\r\n    dataIndex: \"price\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nts\",\r\n    dataIndex: \"notes\",\r\n    width: \"5%\",\r\n  },\r\n];","import React, {memo} from \"react\";\r\nimport Modal from \"@commons/modal\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport {columns} from \"./constant\"\r\n\r\nconst InvoiceDetailsWithEditModal = ({visible, onClose, invoiceType, invoiceNumber, withEdit}:any) => {\r\n    const type = invoiceType === \"C\" ? \"customer\" : \"supplier\"\r\n    return (\r\n        <Modal\r\n        visible={visible}\r\n        label={invoiceType === \"C\" ? \"cstmrs\" : \"splrs\"}\r\n        onClose={onClose}\r\n        noFooter\r\n        >\r\n            <TableWithApi\r\n                api=\"QUERY_INVOICE_DETAIL_TABLE_DATA\"\r\n                rowKey={`${type}_invoice_id`}\r\n                params={{\r\n                    invoice_type: invoiceType,\r\n                    invoice_no: invoiceNumber\r\n                }}\r\n                columns={columns}\r\n                hideTools={!withEdit}\r\n                canDelete\r\n                fetchOnFirstRun\r\n                checkForParams={false}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(InvoiceDetailsWithEditModal)","export const customerTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"customer_invoice_id\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"customer_invoice_total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"discount\",\r\n    dataIndex: \"customer_invoice_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total after\",\r\n    dataIndex: \"customer_invoice_after_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"customer_invoice_paid\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"credit\",\r\n    dataIndex: \"customer_invoice_credit\",\r\n    width: \"5%\",\r\n  },\r\n];\r\n\r\nexport const supplierTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"supplier_invoice_id\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"supplier_invoice_total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"discount\",\r\n    dataIndex: \"supplier_invoice_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total after\",\r\n    dataIndex: \"supplier_invoice_after_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"supplier_invoice_paid\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"credit\",\r\n    dataIndex: \"supplier_invoice_credit\",\r\n    width: \"5%\",\r\n  }\r\n];\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { ChartWithApi } from \"@pages/chart-js\";\r\nimport Flex from \"@commons/flex\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport InvoiceDetailsWithEditModal from \"@components/invoice-details-with-edit-modal\"\r\nimport { supplierTableColumns, customerTableColumns } from \"./constants\"\r\n\r\nconst DashBoard = () => {\r\n\r\n    const [{invoiceType,invoiceNumber, visible}, setModalProp] = useState({\r\n        invoiceType:\"\",\r\n        invoiceNumber: 0,\r\n        visible: false\r\n    })\r\n\r\n    const handleClose = useCallback(()=>{\r\n        setModalProp({\r\n            invoiceType:\"\",\r\n            invoiceNumber: 0,\r\n            visible: false\r\n        })\r\n    },[]);\r\n\r\n    const handleCustomerModal = useCallback((e:any)=>{\r\n        setModalProp({\r\n            invoiceType:\"C\",\r\n            invoiceNumber: e.customer_invoice_id,\r\n            visible: true\r\n        })\r\n    },[])\r\n\r\n    const handleSupplierModal = useCallback((e:any)=>{\r\n        setModalProp({\r\n            invoiceType:\"S\",\r\n            invoiceNumber: e.supplier_invoice_id,\r\n            visible: true\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Flex width='100%'>\r\n                <Flex width='75%' flexDirection='column'>\r\n                    <TableWithApi\r\n                        api='QUERY_CUSTOMERS_INVOICES_FOR_TODAY'\r\n                        rowKey='customer_invoice_id'\r\n                        columns={customerTableColumns}\r\n                        fetchOnFirstRun\r\n                        label='cstmrs'\r\n                        onDoubleClick={handleCustomerModal}\r\n                    />\r\n                    <TableWithApi\r\n                        api='QUERY_SUPPLIERS_INVOICES_FOR_TODAY'\r\n                        rowKey='supplier_invoice_id'\r\n                        columns={supplierTableColumns}\r\n                        fetchOnFirstRun\r\n                        label='splrs'\r\n                        onDoubleClick={handleSupplierModal}\r\n                    />\r\n                </Flex>\r\n                <Flex width='25%' flexDirection=\"column\">\r\n                    <ChartWithApi\r\n                        api=\"QUERY_INVOICES_CHART_DATA\"\r\n                        label=\"invcs\"\r\n                        mode=\"pie\"\r\n                        width=\"100%\"\r\n                    />\r\n                    <ChartWithApi\r\n                        api=\"QUERY_MAIN_CHART_DATA\"\r\n                        label=\"vault\"\r\n                        mode=\"pie\"\r\n                        width=\"100%\"\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n            <InvoiceDetailsWithEditModal \r\n                invoiceType={invoiceType}\r\n                invoiceNumber={invoiceNumber}\r\n                visible={visible}\r\n                onClose={handleClose}\r\n                withEdit={false}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(DashBoard);\r\n"],"names":["BarChart","_ref","_ref$mode","mode","width","height","margin","padding","_ref$label","label","dataSource","t","useTranslation","_jsx","_Fragment","children","_jsxs","Flex","flexDirection","justifyContent","Chart","type","data","view","memo","ChartWithApi","api","params","prop","_objectWithoutProperties","_excluded","_useState","useState","labels","datasets","_useState2","_slicedToArray","setDataSource","useFetch","link","fetchOnFirstRun","useEffect","Array","isArray","_objectSpread","columns","title","dataIndex","InvoiceDetailsWithEditModal","visible","onClose","invoiceType","invoiceNumber","withEdit","Modal","noFooter","TableWithApi","rowKey","concat","invoice_type","invoice_no","hideTools","canDelete","checkForParams","customerTableColumns","supplierTableColumns","DashBoard","_useState2$","setModalProp","handleClose","useCallback","handleCustomerModal","e","customer_invoice_id","handleSupplierModal","supplier_invoice_id","onDoubleClick"],"sourceRoot":""}