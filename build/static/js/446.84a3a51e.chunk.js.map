{"version":3,"file":"static/js/446.84a3a51e.chunk.js","mappings":"sIAEA,MAeA,EAf4BA,KAExB,MAAMC,GAASC,EAAAA,EAAAA,UAETC,GAAkBC,EAAAA,EAAAA,cAAYC,UAAA,IAAAC,EAAA,aAEhB,QAApBA,EAAML,EAAOM,eAAO,IAAAD,OAAA,EAAdA,EAAgBE,aAAY,GACpC,CAACP,IAEC,MAAO,CACHA,SACAE,kBACH,E,uBCVL,MAAMM,EAAYA,CAAAC,EAIdC,KACM,IALS,WACXC,EAAU,OACVC,GACCH,EAID,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAEjCR,GAAaJ,EAAAA,EAAAA,cAAY,KAC3BW,GAAW,EAAK,GAClB,IAEIE,GAAcb,EAAAA,EAAAA,cAAY,KAC5BW,GAAW,EAAM,GACnB,KAEFG,EAAAA,EAAAA,qBAAoBP,GAAK,MACrBH,iBAMJ,MAAMW,EAAW,iDAAAC,OAAmDR,EAAU,KAAAQ,OAAI,IAAIC,gBAAgBR,IAE1G,OACIS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,MAAM,aACNV,QAASA,EACTW,QAASR,EACTS,UAAQ,EACRC,MAAM,MACNC,OAAO,MAAKC,UAEZP,EAAAA,EAAAA,KAAA,UAAQQ,KAAMX,EAAaQ,MAAM,OAAOC,OAAO,OAAMC,SAAA,8CAGjD,EAIhB,GAAeE,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,YAAWvB,I,aC1C/B,MAAMwB,EAAoBvB,IAA+D,IAA9D,QAACI,EAAO,QAAEW,EAAO,UAAES,EAAS,QAAEC,GAA0BzB,EAE/E,MAAM0B,GAAqBhC,EAAAA,EAAAA,cAAY,KACnC8B,IACAT,GAAS,GACX,CAACA,EAASS,IAEZ,OACIZ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFC,MAAM,UACNV,QAASA,EACTW,QAASA,EACTE,MAAM,MACNU,KAAMD,EACNE,YAAY,QAAOT,SAElBM,GAAoB,8BACjB,EAIhB,GAAeJ,EAAAA,EAAAA,MAAKE,G,wBCNpB,MAAMM,EAAeA,CAAA7B,EAcjBC,KACE,IAfgB,IAClB6B,EAAG,QACHC,EAAO,QACPC,EAAO,aACPC,EAAY,QACZC,EAAO,gBACPC,GAAkB,EAAK,OACvBhC,EAAM,eACNiC,GAAiB,EAAK,WACtBC,EAAa,MAAK,WAClBC,EAAU,WACVpC,KACGqC,GACavC,EAGhB,MAAM,KAAEoB,EAAI,SAAEoB,EAAQ,QAAEC,EAAO,QAAEC,EAAO,UAAEC,IAAcC,EAAAA,EAAAA,GAAS,CAAEC,KAAMf,EAAKK,gBAAiBA,EAAiBhC,OAAQA,EAAQiC,eAAgBA,KAC1I,mBAAEU,IAAuBC,EAAAA,EAAAA,GAAwB,CAAEjB,IAAKC,EAASS,SAAUA,KAC3E,OAAEjD,EAAM,gBAAEE,GAAoBH,KAC7B0D,EAAaC,IAAkB3C,EAAAA,EAAAA,UAAS,CAAC,IACzC4C,EAAOC,IAAY7C,EAAAA,EAAAA,WAAS,IAC5B8C,EAAcC,IAAmB/C,EAAAA,EAAAA,WAAS,GAC3CgD,GAAY5D,EAAAA,EAAAA,cAAY,KAC1BuD,EAAe,CAAEM,aAAc,MAC/BJ,GAAS,EAAK,GACf,CAACF,IACEO,GAAa9D,EAAAA,EAAAA,cAAY,KAC3BuD,EAAe,IAAKD,EAAaO,aAAc,MAC/CJ,GAAS,EAAK,GACf,CAACH,EAAaC,IAKXQ,GAAmB/D,EAAAA,EAAAA,cAAY,KACjCyD,GAAS,EAAM,GAChB,IAEGO,GAA0BhE,EAAAA,EAAAA,cAAY,KAAQ2D,GAAgB,EAAM,GAAI,IACxEM,GAAyBjE,EAAAA,EAAAA,cAAY,KAAQ2D,GAAgB,EAAK,GAAI,IAOtEO,GAAkBC,EAAAA,EAAAA,UACpB,IAAU,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MACZ,CAAK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,OAGL0C,GAAcpE,EAAAA,EAAAA,cAAY,KAC5BsD,GAAevD,GAAiB,GACjC,CAACA,EAAiBuD,IAWrB,OATAxC,EAAAA,EAAAA,qBAAoBP,GAAK,MACrBuC,WACAuB,aAAcrB,EACdsB,eAAgBrB,EAChBsB,qBAAsBA,IAAML,OAM5BM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhD,SAAA,CACKc,IAAgBrB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACnBT,QAAS8C,EACTnC,QAAS0C,EACTW,iBAAe,EACfC,gBAAc,EACdvD,MAAM,OACNE,UAAQ,EACRC,MAAOoB,EAAWlB,UAElBP,EAAAA,EAAAA,KAACqB,EAAY,CACTlB,QAAS0C,EACTT,YAAaA,EACbsB,aAAc9B,OAItB5B,EAAAA,EAAAA,KAACW,EAAiB,CACdnB,QAASgD,EACT5B,UAtDS+C,KACjBzB,EAAmB,IAAKE,EAAaO,aAAc,KAAM,EAsDjDxC,QAAS2C,KAEb9C,EAAAA,EAAAA,KAACb,EAAS,CACNE,IAAKV,EACLW,WAAYA,EACZC,OAAQmC,KAEZ1B,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CACFC,WAAgB,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAClBY,QAASA,EACT0C,MAAOpB,EACPqB,OAAQnB,EACRoB,QAASd,EACTe,SAAUlB,EACVmB,cA1DeC,IACvB9B,EAAe8B,GACX7C,GAASA,EAAQ6C,EAAI,EAyDjBtC,QAASA,KACLF,MAIT,EAGX,GAAelB,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,YAAWO,G,0DC5H/B,MAiCA,EAjCgC7B,IAAkC,IAAjC,IAAE8B,EAAM,GAAE,SAAEU,GAAexC,EAC1D,MAAQgF,OAAQC,IAAcC,EAAAA,EAAAA,GAAY,CACxCrC,KAAMf,EACNqD,wBAAyB3C,EACzB4C,OAAQ,UAEFJ,OAAQK,IAAiBH,EAAAA,EAAAA,GAAY,CAC3CrC,KAAMf,EACNqD,wBAAyB3C,EACzB4C,OAAQ,SAEFJ,OAAQM,IAAiBJ,EAAAA,EAAAA,GAAY,CAC3CrC,KAAMf,EACNqD,wBAAyB3C,EACzB4C,OAAQ,WAgBV,MAAO,CAAEtC,oBAbkBpD,EAAAA,EAAAA,cACxB6F,IAC6B,MAAxBA,EAAOhC,aACT0B,EAAUM,GACuB,MAAxBA,EAAOhC,aAChB8B,EAAaE,GACoB,MAAxBA,EAAOhC,cAChB+B,EAAaC,EACf,GAEF,CAACN,EAAWI,EAAcC,IAGC,C,6EChB/B,MA+EA,EA/EoBtF,IAOK,IAPJ,KACnB6C,EAAO,GAAE,gBACT2C,GAAkB,EAAK,wBACvBL,EAAuB,aACvBM,EAAY,UACZC,EAAS,OACTN,EAAS,QACQpF,EACjB,MAAM2F,GAAQC,EAAAA,EAAAA,KAERC,EAAG,iCAAAnF,OAAoCoF,EAAAA,EAAOjD,KAC7CkD,EAASC,IAAc1F,EAAAA,EAAAA,aACxB,cAAE2F,IAAkBC,EAAAA,EAAAA,KACpBC,GAAWzG,EAAAA,EAAAA,cACfC,UACE,GAAIsG,GAAiBT,EAAiB,CACpC,MAAMY,EAAW,CACfhB,OAAQA,EACRiB,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD7F,OAAYuF,IAE3BO,KAAMC,KAAKC,UAAUC,IAEvB,IACE,MAAMC,QAAsBC,MAAMhB,EAAKO,GACjChF,QAAawF,EAAcE,OA0BjC,MAzBsB,YAAlB1F,EAAK2F,UACPpB,EAAM,CACJqB,SAAU,YACVC,MAAO,UACPC,YAAY,GAADxG,OAAKU,EAAK2F,UACrBI,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEV5B,GAAcA,MAElBE,EAAM,CACJqB,SAAU,YACVC,MAAO,QACPC,YAAY,GAADxG,OAAKU,EAAKK,SACrB0F,OAAQ,QACRC,SAAU,IACVC,YAAY,IAEV3B,GAAWA,KAEjBM,EAAW5E,GACP+D,GACFA,IAEK/D,CACT,CAAE,MAAOkG,GAAI,CACf,IAEF,CACEnC,EACAc,EACAb,EACAI,EACAE,EACAD,EACAE,EACAE,IAWJ,MAAO,CAAEE,UAASf,QAPHtF,EAAAA,EAAAA,cACZqF,IACCoB,EAASpB,EAAI,GAEf,CAACoB,IAGuB,C,8FC3FrB,MAAMoB,EAAiBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAa3B1F,EAAeuF,EAAAA,EAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,8hBAKzB3H,IAAA,IAAC,MAAEiB,GAAOjB,EAAA,OAAKiB,CAAK,IACnB4G,IAAA,IAAC,OAAE3G,GAAQ2G,EAAA,OAAK3G,CAAM,IAKzB4G,IAAA,IAAC,MAAE7G,GAAO6G,EAAA,OAAK7G,CAAK,IACnB8G,IAAA,IAAC,OAAE7G,GAAQ6G,EAAA,OAAK7G,CAAM,IAcrB8G,EAAcR,EAAAA,EAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gJAQxBO,EAAYV,EAAAA,EAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sEAMtBS,EAAcZ,EAAAA,EAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qc,aCpCrC,MAAM9G,EAAQb,IAcR,IAbF,SACImB,EAAQ,QACRf,GAAU,EAAK,MACfU,EAAK,QACLC,EAAO,KACPY,EAAI,YACJC,EAAc,OAAM,MACpBX,EAAQ,MAAK,OACbC,EAAS,OAAM,eACfmD,GAAiB,EAAK,gBACtBD,GAAkB,EAAK,SACvBpD,GAAW,GACHhB,EAGZ,OACIY,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAAhD,SACKf,IACGQ,EAAAA,EAAAA,KAAC2G,EAAc,CAACe,QAASlI,EAAQe,UAC7B+C,EAAAA,EAAAA,MAACjC,EAAY,CAAChB,MAAOA,EAAOC,OAAQA,EAAOC,SAAA,EACvC+C,EAAAA,EAAAA,MAAC8D,EAAW,CAAA7G,SAAA,EACRP,EAAAA,EAAAA,KAAC2H,EAAAA,EAAS,CAAApH,SAAEL,KACZF,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CAAC1H,MAAM,OAAUG,MAAM,KAAKwH,WAAW,OAAOC,OAAO,IAAIC,QAAQ,IAAI,eAAa,QAAQzG,QAASnB,EAAS6H,WAAW,aAGlIhI,EAAAA,EAAAA,KAACsH,EAAS,CAAA/G,SACDA,KAGPH,IACEkD,EAAAA,EAAAA,MAACkE,EAAW,CAACE,OAAQtH,EAASG,SAAA,EACxBkD,IAAkBzD,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CAACtG,QAASP,EAAMb,MAAOc,EAAa0G,OAAQjE,EAAgBpD,MAAM,MAAMyH,OAAO,OACxGtE,IAAmBxD,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CAACtG,QAASnB,EAASD,MAAM,MAAMwH,OAAQlE,EAAiBnD,MAAM,MAAMwH,WAAW,MAAMC,OAAO,eAM7I,EAIX,GAAerH,EAAAA,EAAAA,MAAKR,E,sHCvDpB,MAAMgI,EAAW7I,IAQI,IARH,KAChB8I,EAAO,MAAK,MACZ7H,EAAK,OACLC,EAAM,OACNwH,EAAM,QACNC,EAAO,MACP7H,EAAQ,QAAO,WACf2D,GACazE,EACb,MAAM,EAAE+I,IAAMC,EAAAA,EAAAA,MAad,OACEpI,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAAhD,UACE+C,EAAAA,EAAAA,MAAC+E,EAAAA,EAAI,CACHC,cAAc,SACdjI,MAAOA,EACPC,OAAQA,EACRwH,OAAQA,EACRC,QAASA,EAAQxH,SAAA,EAEjBP,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAAChI,MAAM,OAAOkI,eAAe,SAAQhI,UACxCP,EAAAA,EAAAA,KAAA,KAAAO,SAAI4H,EAAEjI,OAEP2D,GAxBM2E,MAEX,OAAQN,GACN,IAAK,OACH,OAAOlI,EAAAA,EAAAA,KAACyI,EAAAA,GAAK,CAACC,KAAK,OAAOlI,KAAMqD,IAClC,IAAK,MACH,OAAO7D,EAAAA,EAAAA,KAACyI,EAAAA,GAAK,CAACC,KAAK,MAAMlI,KAAMqD,IACjC,IAAK,MACH,OAAO7D,EAAAA,EAAAA,KAACyI,EAAAA,GAAK,CAACC,KAAK,MAAMlI,KAAMqD,IACnC,EAemB2E,OAEhB,EAIP,GAAe/H,EAAAA,EAAAA,MAAKwH,GC1CdU,EAAevJ,IAIA,IAJC,IAClB8B,EAAG,OACH3B,KACGqJ,GACQxJ,EAEX,MAAOyE,EAAYgF,IAAiBnJ,EAAAA,EAAAA,UAAS,CACzCoJ,OAAQ,GACRC,SAAU,CACN,CACI7I,MAAO,GACPM,KAAM,QAKZ,KAAEA,IAASwB,EAAAA,EAAAA,GAAS,CACtBC,KAAMf,EACNK,iBAAiB,EACjBhC,OAAQA,IASZ,OANAyJ,EAAAA,EAAAA,YAAU,KACDC,MAAMC,QAAQ1I,IACfqI,EAAcrI,EAClB,GACD,CAACA,KAGAR,EAAAA,EAAAA,KAAAuD,EAAAA,SAAA,CAAAhD,UACIP,EAAAA,EAAAA,KAACiI,EAAQ,CACLpE,WAAYA,KACR+E,KAET,EAIX,GAAenI,EAAAA,EAAAA,MAAKkI,G,wBC3Cb,MAAMvH,EAAU,CACrB,CACEiF,MAAO,QACP8C,UAAW,OACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,QACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,SACX9I,MAAO,OAET,CACEgG,MAAO,KACP8C,UAAW,OACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,WACX9I,MAAO,OAET,CACEgG,MAAO,MACP8C,UAAW,QACX9I,MAAO,OAET,CACEgG,MAAO,QACP8C,UAAW,QACX9I,MAAO,OAET,CACEgG,MAAO,MACP8C,UAAW,QACX9I,MAAO,QClCL+I,EAA8BhK,IAAmE,IAAlE,QAACI,EAAO,QAAEW,EAAO,YAAEkJ,EAAW,cAAEC,EAAa,SAAEC,GAAanK,EAC7F,OACIY,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACNT,QAASA,EACTU,MAAuB,MAAhBmJ,EAAsB,SAAW,QACxClJ,QAASA,EACTC,UAAQ,EAAAG,UAEJP,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CACTC,IAAI,kCACJsI,OAAO,UACPjK,OAAQ,CACJkK,aAAcJ,EACdK,WAAYJ,GAEhBlI,QAASA,EACTuI,WAAYJ,EACZK,WAAS,EACTrI,iBAAe,EACfC,gBAAgB,KAEhB,EAIhB,GAAef,EAAAA,EAAAA,MAAK2I,GC9BPS,EAAuB,CAClC,CACExD,MAAO,KACP8C,UAAW,sBACX9I,MAAO,MAET,CACEgG,MAAO,KACP8C,UAAW,sBACX9I,MAAO,OAET,CACEgG,MAAO,QACP8C,UAAW,yBACX9I,MAAO,OAET,CACEgG,MAAO,QACP8C,UAAW,4BACX9I,MAAO,OAET,CACEgG,MAAO,aACP8C,UAAW,kCACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,wBACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,0BACX9I,MAAO,QAIEyJ,EAAuB,CAClC,CACEzD,MAAO,KACP8C,UAAW,sBACX9I,MAAO,MAET,CACEgG,MAAO,KACP8C,UAAW,sBACX9I,MAAO,OAET,CACEgG,MAAO,QACP8C,UAAW,yBACX9I,MAAO,OAET,CACEgG,MAAO,QACP8C,UAAW,4BACX9I,MAAO,OAET,CACEgG,MAAO,aACP8C,UAAW,kCACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,wBACX9I,MAAO,OAET,CACEgG,MAAO,OACP8C,UAAW,0BACX9I,MAAO,QCjEL0J,EAAYA,KAEd,OAAO,YAAEV,EAAW,cAAEC,EAAa,QAAE9J,GAAWwK,IAAgBtK,EAAAA,EAAAA,UAAS,CACrE2J,YAAa,GACbC,cAAe,EACf9J,SAAS,IAGPG,GAAcb,EAAAA,EAAAA,cAAY,KAC5BkL,EAAa,CACTX,YAAa,GACbC,cAAe,EACf9J,SAAS,GACX,GACH,IAEGyK,GAAsBnL,EAAAA,EAAAA,cAAa4H,IACrCsD,EAAa,CACTX,YAAa,IACbC,cAAe5C,EAAEwD,oBACjB1K,SAAS,GACX,GACH,IAEG2K,GAAsBrL,EAAAA,EAAAA,cAAa4H,IACrCsD,EAAa,CACTX,YAAa,IACbC,cAAe5C,EAAE0D,oBACjB5K,SAAS,GACX,GACH,IAEH,OACI8D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhD,SAAA,EACI+C,EAAAA,EAAAA,MAAC+E,EAAAA,EAAI,CAAChI,MAAM,OAAME,SAAA,EACd+C,EAAAA,EAAAA,MAAC+E,EAAAA,EAAI,CAAChI,MAAM,MAAMiI,cAAc,SAAQ/H,SAAA,EACpCP,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CACTC,IAAI,qCACJsI,OAAO,sBACPpI,QAASyI,EACTtI,iBAAe,EACfrB,MAAM,SACNG,MAAM,OACNgK,YAAY,QACZC,cAAeL,EACfM,cAAY,KAEhBvK,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CACTC,IAAI,qCACJsI,OAAO,sBACPpI,QAAS0I,EACTvI,iBAAe,EACflB,MAAM,OACNgK,YAAY,QACZnK,MAAM,QACNoK,cAAeH,EACfI,cAAY,QAGpBvK,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAAChI,MAAM,MAAMiI,cAAc,SAAQ/H,UACpCP,EAAAA,EAAAA,KAAC2I,EAAY,CACTzH,IAAI,4BACJhB,MAAM,QACNgI,KAAK,MACL7H,MAAM,cAUlBL,EAAAA,EAAAA,KAACoJ,EAA2B,CACxBC,YAAaA,EACbC,cAAeA,EACf9J,QAASA,EACTW,QAASR,EACT4J,UAAU,MAEf,EAIX,GAAe9I,EAAAA,EAAAA,MAAKsJ,E","sources":["../common/pdf-viewer/src/hooks/usePdfViewerControl.ts","../common/pdf-viewer/src/index.tsx","../common/confirmation-modal/src/index.tsx","../common/TableView/src/ApiTable.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/hooks/src/useMutation.ts","../common/modal/src/style.ts","../common/modal/src/index.tsx","../common/chart-js/src/chart.tsx","../common/chart-js/src/chartWithApi.tsx","../components/invoice-details-with-edit-modal/src/constant.ts","../components/invoice-details-with-edit-modal/src/index.tsx","../pages/DashBoard/src/constants.ts","../pages/DashBoard/src/component.tsx"],"sourcesContent":["import { useRef, useCallback } from \"react\";\r\n\r\nconst usePdfViewerControl = ()=>{\r\n\r\n    const PDFRef = useRef()\r\n\r\n    const handleOpenModal = useCallback(async () =>\r\n    //@ts-ignore\r\n    await PDFRef.current?.handleOpen(),\r\n  [PDFRef])\r\n\r\n    return {\r\n        PDFRef,\r\n        handleOpenModal\r\n    }\r\n}\r\n\r\nexport default usePdfViewerControl","import React, {memo, useImperativeHandle, forwardRef, useState, useCallback} from \"react\";\r\nimport Modal from \"@commons/modal\";\r\n\r\n//TODO: implement pdf viewer type\r\nconst PdfViewer = ({\r\n        reportName,\r\n        params\r\n    }:any,\r\n    ref: any\r\n    ) => {\r\n\r\n        const [visible, setVisible] = useState(false);\r\n        \r\n        const handleOpen = useCallback(()=>{\r\n            setVisible(true);\r\n        },[])\r\n\r\n        const handleClose = useCallback(()=>{\r\n            setVisible(false);\r\n        },[])\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            handleOpen,\r\n            // setTableData: setData,\r\n            // resetTableData: resetData,\r\n            // getCurrentDataSource: data\r\n        }));\r\n\r\n        const computedUrl =`http://192.168.1.250:5000/system_pdf_generate/${reportName}?${new URLSearchParams(params)}`\r\n\r\n    return(\r\n        <Modal\r\n            label=\"PDF Viewer\"\r\n            visible={visible}\r\n            onClose={handleClose}\r\n            noFooter\r\n            width=\"90%\"\r\n            height=\"80%\"\r\n        >\r\n            <object data={computedUrl} width=\"100%\" height=\"100%\">\r\n          {`Your browser does not support pdf files.`}\r\n        </object>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(forwardRef(PdfViewer))\r\nexport * from \"./interface\"\r\nexport {default as usePdfViewerControl} from \"./hooks/usePdfViewerControl\";\r\n","import React, { memo, useCallback } from \"react\";\r\nimport Modal from \"@commons/modal\";\r\nimport {confirmationModal} from \"./interface\"\r\n\r\nconst ConfirmationModal = ({visible, onClose, onConfirm, message}:confirmationModal) => {\r\n\r\n    const handleConfirmation = useCallback(() => {\r\n        onConfirm()\r\n        onClose()\r\n    },[onClose, onConfirm])\r\n\r\n    return (\r\n        <Modal \r\n            label=\"cnfrmtn\"\r\n            visible={visible}\r\n            onClose={onClose}\r\n            width=\"25%\"\r\n            onOK={handleConfirmation}\r\n            submitTitle=\"cnfrm\"\r\n        >\r\n            {message ? message : \"Are you want to continue ?\"}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(ConfirmationModal)\r\nexport * from \"./interface\"","import React,\r\n{\r\n    memo,\r\n    useState,\r\n    useCallback,\r\n    useImperativeHandle,\r\n    forwardRef,\r\n    useMemo\r\n} from \"react\";\r\nimport PdfViewer, { usePdfViewerControl } from \"@commons/pdf-viewer\";\r\nimport { useFetch, useEffectTimeOut } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport ConfirmationModal from \"@commons/confirmation-modal\"\r\nimport Table from \"./Table\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\nimport { TableWithApiProps } from \"./interface\"\r\n\r\n//TODO: change the ref type\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    ModalContent,\r\n    onClick,\r\n    fetchOnFirstRun = false,\r\n    params,\r\n    checkForParams = false,\r\n    modalWidth = \"60%\",\r\n    printProps,\r\n    reportName,\r\n    ...tableProps\r\n}: TableWithApiProps,\r\n    ref: any\r\n) => {\r\n    const { data, runFetch, loading, setData, resetData } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params, checkForParams: checkForParams })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const { PDFRef, handleOpenModal } = usePdfViewerControl()\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false);\r\n    const [confirmModal, setConfirmModal] = useState(false);\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n    const handleCloseConfirmModal = useCallback(() => { setConfirmModal(false) }, [])\r\n    const handleOpenConfirmModal = useCallback(() => { setConfirmModal(true) }, [])\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onClick) onClick(row)\r\n    };\r\n\r\n    const foundDataSource = useMemo(\r\n        () => data?.data,\r\n        [data?.data]\r\n    );\r\n\r\n    const handlePrint = useCallback(() => {\r\n        selectedRow && handleOpenModal()\r\n    }, [handleOpenModal, selectedRow])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        runFetch,\r\n        setTableData: setData,\r\n        resetTableData: resetData,\r\n        getCurrentDataSource: () => foundDataSource,\r\n    }));\r\n\r\n    // useEffectTimeOut(runFetch, 30000)\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n                noFooter\r\n                width={modalWidth}\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <ConfirmationModal\r\n                visible={confirmModal}\r\n                onConfirm={handleDelete}\r\n                onClose={handleCloseConfirmModal}\r\n            />\r\n            <PdfViewer\r\n                ref={PDFRef}\r\n                reportName={reportName}\r\n                params={printProps}\r\n            />\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onPrint={handlePrint}\r\n                onDelete={handleOpenConfirmModal}\r\n                onSelectedRow={handleSelectedRow}\r\n                loading={loading}\r\n                {...tableProps}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default memo(forwardRef(TableWithApi))","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://192.168.1.250:5000/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`;\r\n\r\nexport const ModalContent = styled.div<{ width: string; height?: string }>`\r\n  /* position: relative;\r\n    margin: 5% auto;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: ${({ width }) => width};\r\n    height: ${({ height }) => height};\r\n    background-color: white;\r\n    border-radius: 15px; */\r\n  /* max-height: 90vh;\r\n\tmax-width: 500px; */\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #fff;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 15px 30px 0 rgba(#000, 0.25);\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  padding: 15px 32px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  margin: 10px 15px;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n  padding: 35px 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border-top: 1px solid #ddd;\r\n  gap: 12px;\r\n  position: relative;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: -51px;\r\n    left: 24px;\r\n    right: 24px;\r\n    height: 50px;\r\n    flex-shrink: 0;\r\n    background-image: linear-gradient(to top, rgba(#fff, 0.75), transparent);\r\n    pointer-events: none;\r\n  }\r\n`;\r\n","import React, { memo } from 'react';\r\nimport { Button } from \"@commons/button\";\r\nimport { BaseTitle } from \"@commons/page-title\"\r\nimport { ModalContainer, ModalContent, ModalHeader, ModalBody, ModalFooter } from \"./style\"\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose?: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n    height?: string;\r\n    noFooter?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"90%\",\r\n        height = \"auto\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false,\r\n        noFooter = false\r\n    }: ModalProp\r\n) => {\r\n\r\n    return (\r\n        <>\r\n            {visible &&\r\n                <ModalContainer hidden={!visible} >\r\n                    <ModalContent width={width} height={height}>\r\n                        <ModalHeader>\r\n                            <BaseTitle>{label}</BaseTitle>\r\n                            <Button label='&times;' width='5%' backGround='none' margin='0' padding='0' data-dismiss=\"modal\" onClick={onClose} fontWeight=\"19px\" />\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                                {children}\r\n                        </ModalBody>\r\n\r\n                        {!noFooter &&\r\n                            <ModalFooter hidden={noFooter}>\r\n                                {!hideSaveButton && <Button onClick={onOK} label={submitTitle} hidden={hideSaveButton} width='20%' margin='0' />}\r\n                                {!hideCloseButton && <Button onClick={onClose} label='cls' hidden={hideCloseButton} width='20%' backGround='red' margin='0' />}\r\n                            </ModalFooter>\r\n                        }\r\n                    </ModalContent>\r\n                </ModalContainer>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo } from \"react\";\r\nimport 'chart.js/auto';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Flex from \"@commons/flex\";\r\nimport { barChartProp } from \"./interface\";\r\n\r\nconst BarChart = ({\r\n  mode = 'bar',\r\n  width,\r\n  height,\r\n  margin,\r\n  padding,\r\n  label = \"chart\",\r\n  dataSource\r\n}: barChartProp) => {\r\n  const { t } = useTranslation()\r\n  const view = () => {\r\n\r\n    switch (mode) {\r\n      case \"line\":\r\n        return <Chart type='line' data={dataSource} />;\r\n      case \"pie\":\r\n        return <Chart type='pie' data={dataSource} />;\r\n      case \"bar\":\r\n        return <Chart type='bar' data={dataSource} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        width={width}\r\n        height={height}\r\n        margin={margin}\r\n        padding={padding}\r\n      >\r\n        <Flex width=\"100%\" justifyContent=\"center\">\r\n          <p>{t(label)}</p>\r\n        </Flex>\r\n        {dataSource && view()}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(BarChart)","import React, { memo, useEffect, useState } from \"react\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport BarChart from \"./chart\";\r\nimport { chartWithApi } from \"./interface\"\r\n\r\nconst ChartWithApi = ({\r\n    api,\r\n    params,\r\n    ...prop\r\n}: chartWithApi) => {\r\n\r\n    const [dataSource, setDataSource] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                data: [],\r\n            },\r\n        ],\r\n    })\r\n\r\n    const { data } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(data)) {\r\n            setDataSource(data)\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <BarChart\r\n                dataSource={dataSource}\r\n                {...prop}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ChartWithApi);","export const columns = [\r\n  {\r\n    title: \"itmnm\",\r\n    dataIndex: \"item\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"wdth\",\r\n    dataIndex: \"width\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"hght\",\r\n    dataIndex: \"height\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"sz\",\r\n    dataIndex: \"size\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"qnty\",\r\n    dataIndex: \"quantity\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"prc\",\r\n    dataIndex: \"price\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"total\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"nts\",\r\n    dataIndex: \"notes\",\r\n    width: \"18%\",\r\n  },\r\n];\r\n","import React, {memo} from \"react\";\r\nimport Modal from \"@commons/modal\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport {columns} from \"./constant\"\r\n\r\nconst InvoiceDetailsWithEditModal = ({visible, onClose, invoiceType, invoiceNumber, withEdit}:any) => {\r\n    return (\r\n        <Modal\r\n        visible={visible}\r\n        label={invoiceType === \"C\" ? \"cstmrs\" : \"splrs\"}\r\n        onClose={onClose}\r\n        noFooter\r\n        >\r\n            <TableWithApi\r\n                api=\"QUERY_INVOICE_DETAIL_TABLE_DATA\"\r\n                rowKey=\"row_key\"\r\n                params={{\r\n                    invoice_type: invoiceType,\r\n                    invoice_no: invoiceNumber\r\n                }}\r\n                columns={columns}\r\n                hideTools={!withEdit}\r\n                canDelete\r\n                fetchOnFirstRun\r\n                checkForParams={false}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(InvoiceDetailsWithEditModal)","export const customerTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"customer_invoice_id\",\r\n    width: \"8%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"37%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"customer_invoice_total\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"dscnt\",\r\n    dataIndex: \"customer_invoice_discount\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"tlaftrdsnt\",\r\n    dataIndex: \"customer_invoice_after_discount\",\r\n    width: \"13%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"customer_invoice_paid\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"crdt\",\r\n    dataIndex: \"customer_invoice_credit\",\r\n    width: \"10%\",\r\n  },\r\n];\r\n\r\nexport const supplierTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"supplier_invoice_id\",\r\n    width: \"8%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"37%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"supplier_invoice_total\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"dscnt\",\r\n    dataIndex: \"supplier_invoice_discount\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"tlaftrdsnt\",\r\n    dataIndex: \"supplier_invoice_after_discount\",\r\n    width: \"13%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"supplier_invoice_paid\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"crdt\",\r\n    dataIndex: \"supplier_invoice_credit\",\r\n    width: \"10%\",\r\n  }\r\n];\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { ChartWithApi } from \"@commons/chart-js\";\r\nimport Flex from \"@commons/flex\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport InvoiceDetailsWithEditModal from \"@components/invoice-details-with-edit-modal\"\r\nimport { supplierTableColumns, customerTableColumns } from \"./constants\"\r\n\r\nconst DashBoard = () => {\r\n\r\n    const [{ invoiceType, invoiceNumber, visible }, setModalProp] = useState({\r\n        invoiceType: \"\",\r\n        invoiceNumber: 0,\r\n        visible: false\r\n    })\r\n\r\n    const handleClose = useCallback(() => {\r\n        setModalProp({\r\n            invoiceType: \"\",\r\n            invoiceNumber: 0,\r\n            visible: false\r\n        })\r\n    }, []);\r\n\r\n    const handleCustomerModal = useCallback((e: any) => {\r\n        setModalProp({\r\n            invoiceType: \"C\",\r\n            invoiceNumber: e.customer_invoice_id,\r\n            visible: true\r\n        })\r\n    }, [])\r\n\r\n    const handleSupplierModal = useCallback((e: any) => {\r\n        setModalProp({\r\n            invoiceType: \"S\",\r\n            invoiceNumber: e.supplier_invoice_id,\r\n            visible: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Flex width='100%'>\r\n                <Flex width='75%' flexDirection='column'>\r\n                    <TableWithApi\r\n                        api='QUERY_CUSTOMERS_INVOICES_FOR_TODAY'\r\n                        rowKey='customer_invoice_id'\r\n                        columns={customerTableColumns}\r\n                        fetchOnFirstRun\r\n                        label='cstmrs'\r\n                        width=\"100%\"\r\n                        fixedHeight='300px'\r\n                        onDoubleClick={handleCustomerModal}\r\n                        noPagination\r\n                    />\r\n                    <TableWithApi\r\n                        api='QUERY_SUPPLIERS_INVOICES_FOR_TODAY'\r\n                        rowKey='supplier_invoice_id'\r\n                        columns={supplierTableColumns}\r\n                        fetchOnFirstRun\r\n                        width=\"100%\"\r\n                        fixedHeight='300px'\r\n                        label='splrs'\r\n                        onDoubleClick={handleSupplierModal}\r\n                        noPagination\r\n                    />\r\n                </Flex>\r\n                <Flex width='25%' flexDirection=\"column\">\r\n                    <ChartWithApi\r\n                        api=\"QUERY_INVOICES_CHART_DATA\"\r\n                        label=\"invcs\"\r\n                        mode=\"pie\"\r\n                        width=\"90%\"\r\n                    />\r\n                    {/* <ChartWithApi\r\n                        api=\"QUERY_VAULT_CHART_DATA\"\r\n                        label=\"vault\"\r\n                        mode=\"pie\"\r\n                        width=\"90%\"\r\n                    /> */}\r\n                </Flex>\r\n            </Flex>\r\n            <InvoiceDetailsWithEditModal\r\n                invoiceType={invoiceType}\r\n                invoiceNumber={invoiceNumber}\r\n                visible={visible}\r\n                onClose={handleClose}\r\n                withEdit={false}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(DashBoard);\r\n"],"names":["usePdfViewerControl","PDFRef","useRef","handleOpenModal","useCallback","async","_PDFRef$current","current","handleOpen","PdfViewer","_ref","ref","reportName","params","visible","setVisible","useState","handleClose","useImperativeHandle","computedUrl","concat","URLSearchParams","_jsx","Modal","label","onClose","noFooter","width","height","children","data","memo","forwardRef","ConfirmationModal","onConfirm","message","handleConfirmation","onOK","submitTitle","TableWithApi","api","postApi","columns","ModalContent","onClick","fetchOnFirstRun","checkForParams","modalWidth","printProps","tableProps","runFetch","loading","setData","resetData","useFetch","link","onSaveAndInsertion","useTableControlsButtons","selectedRow","setSelectedRow","modal","setModal","confirmModal","setConfirmModal","handleAdd","query_status","handleEdit","handleCloseModal","handleCloseConfirmModal","handleOpenConfirmModal","foundDataSource","useMemo","handlePrint","setTableData","resetTableData","getCurrentDataSource","_jsxs","_Fragment","hideCloseButton","hideSaveButton","refreshTable","handleDelete","Table","dataSource","onAdd","onEdit","onPrint","onDelete","onSelectedRow","row","setRow","newRecord","useMutation","additionalFunctionToRun","method","updateRecord","deleteRecord","record","noAuthorization","runOnSuccess","runOnFail","toast","useToast","url","API_ID","success","setSuccess","authorization","useLocalStorage","postData","settings","headers","Accept","Authorization","body","JSON","stringify","dataToPost","fetchResponse","fetch","json","response","position","title","description","status","duration","isClosable","e","ModalContainer","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","_ref3","_ref4","ModalHeader","_templateObject3","ModalBody","_templateObject4","ModalFooter","_templateObject5","hidden","BaseTitle","Button","backGround","margin","padding","fontWeight","BarChart","mode","t","useTranslation","Flex","flexDirection","justifyContent","view","Chart","type","ChartWithApi","prop","setDataSource","labels","datasets","useEffect","Array","isArray","dataIndex","InvoiceDetailsWithEditModal","invoiceType","invoiceNumber","withEdit","rowKey","invoice_type","invoice_no","hideTools","canDelete","customerTableColumns","supplierTableColumns","DashBoard","setModalProp","handleCustomerModal","customer_invoice_id","handleSupplierModal","supplier_invoice_id","fixedHeight","onDoubleClick","noPagination"],"sourceRoot":""}