{"version":3,"file":"static/js/461.0557368e.chunk.js","mappings":"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","sources":["../common/Flex/src/index.tsx","../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/button/src/iconButton.tsx","../common/TableView/src/Table.tsx","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/useMutation.ts","../common/input-number/src/index.tsx","../common/input-text/src/inputText.tsx","../pages/customer-invoice-page/src/Partials/InsertForm.tsx","../pages/customer-invoice-page/src/constant.ts","../pages/customer-invoice-page/src/component.tsx","../node_modules/@chakra-ui/select/dist/chunk-HQIEHZYI.mjs","../node_modules/@chakra-ui/select/dist/chunk-GJO77I2I.mjs"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport { Flex as ChackraFlex } from \"@chakra-ui/react\"\nimport { flexProp } from \"./interface\"\n\nconst Flex = ({\n    children,\n    justifyContent,\n    width,\n    height,\n    padding = \"10px\",\n    margin,\n    bordered = false,\n    backgroundColor,\n    borderColor = \"#3c8dcf\",\n    borderWidth = \"px\",\n    borderRadius = \"5px\",\n    flexDirection = \"row\",\n    textAlign = \"\",\n    hidden = false,\n    wrap\n}: any) => {\n    const [border, setBorder] = useState(\"\")\n    useEffect(() => {\n        if (bordered) {\n            setBorder(`${borderWidth} solid ${borderColor}`)\n        }\n    }, [borderColor, borderWidth, bordered])\n    return (\n        <>\n            <ChackraFlex\n                width={width}\n                height={height}\n                padding={padding}\n                margin={margin}\n                background={backgroundColor}\n                borderRadius={borderRadius}\n                flexDirection={flexDirection}\n                textAlign={textAlign}\n                justifyContent={justifyContent}\n                hidden={hidden}\n                //@ts-ignore\n                wrap={wrap ? \"wrap\" : \"\"}\n            >\n                {children}\n            </ChackraFlex>\n        </>\n    )\n}\n\nexport default memo(Flex)","import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Select as ChakraSelect, FormLabel, Flex } from '@chakra-ui/react';\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    width = \"200px\",\r\n    Options = [{\r\n        label: \"\",\r\n        value: 0\r\n    }],\r\n    onChange,\r\n    Label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\",\r\n    selectLabelName = \"label_select\",\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.map((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, selectLabelName: selectLabelName, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <ChakraSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    {Array.isArray(Options) ? Options.map((Option) => {\r\n                        return (\r\n                            <option key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</option>\r\n                        )\r\n                    }) : <option disabled>{t(\"No data\")}</option>}\r\n                </ChakraSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    Api,\r\n    onChange,\r\n    Label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    fetchOnFirstRun = false,\r\n    selectLabelName = \"label_select\"\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: Api,\r\n        fetchOnFirstRun: fetchOnFirstRun,\r\n        params: params\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                Label={Label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import React, { memo } from \"react\";\nimport { iconButtonProp } from \"./interface\"\n\nconst IconButton = ({\n    icon,\n    onClick,\n    disabled = false,\n    width = \"30px\",\n    height = \"30px\",\n    color,\n    margin = \"10px\",\n    padding,\n    hidden = false\n}: iconButtonProp) => {\n    return (\n        <>\n            <button style={{\n                border: \"none\",\n                width: width,\n                height: height,\n                backgroundColor: color,\n                padding: padding,\n                margin: margin,\n                borderRadius: \"20px\"\n            }} hidden={hidden} onClick={onClick} disabled={disabled} >\n                <i className={icon}></i>\n            </button>\n        </>\n    )\n}\n\nexport default memo(IconButton)","import React, { useState, useCallback, useRef } from 'react';\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as XLSX from \"xlsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport ReactToPrint from 'react-to-print';\r\nimport {\r\n    Table as ChakraTable,\r\n    Thead,\r\n    Tbody,\r\n    // Tfoot,\r\n    Text,\r\n    Box,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableContainer,\r\n    Skeleton,\r\n} from '@chakra-ui/react'\r\nimport Flex from \"@commons/flex\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\n\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    height = \"300px\",\r\n    rowKey = \"rowKey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    canExcel = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    label,\r\n    canPrint = false,\r\n    onPrint,\r\n    additionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\",\r\n    margin = \"\",\r\n    padding = \"\",\r\n    loading = false,\r\n    onDoubleClick = (e) => { console.log(e) }\r\n}: TableProps) => {\r\n    const { pathname } = useLocation()\r\n    const { t } = useTranslation()\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        if (onSelectedRow) onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    const handleDouble = useCallback((item: any) => () => {\r\n        if (onDoubleClick) onDoubleClick(item)\r\n        setRowSelected(item)\r\n    }, [onDoubleClick])\r\n\r\n    const onExcel = useCallback(() => {\r\n        const pathName = pathname.replace(\"/\", \"\")\r\n        const wb = XLSX.utils.book_new(),\r\n            //@ts-ignore\r\n            ws = XLSX.utils.json_to_sheet(dataSource)\r\n        XLSX.utils.book_append_sheet(wb, ws, pathName)\r\n        XLSX.writeFile(wb, `${pathName} ${new Date().toUTCString()}.xlsx`)\r\n    }, [dataSource, pathname])\r\n\r\n    const componentRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <TableContainer width={width} padding={padding} margin={margin}>\r\n                {label && <Text width=\"100%\" textAlign=\"center\" marginBottom=\"7px\" fontSize='md' fontWeight=\"bold\">{t(label)}</Text>}\r\n                <Flex\r\n                    width='100%'\r\n                    padding='0'\r\n                    margin='5px 0'\r\n                    justifyContent='center'\r\n                    hidden={hideTools}\r\n                >\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-plus'\r\n                        onClick={onAdd}\r\n                        hidden={!canAdd}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-pen-clip'\r\n                        onClick={onEdit}\r\n                        hidden={!canEdit}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-trash'\r\n                        onClick={onDelete}\r\n                        hidden={!canDelete}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    {additionalButtons && additionalButtons.map((button: additionalButtonsType) => {\r\n                        return (\r\n                            <IconButton\r\n                                icon={button.icon}\r\n                                onClick={button.onClick}\r\n                                disabled={button.disabled}\r\n                                hidden={false}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <IconButton\r\n                        icon='fa-solid fa-floppy-disk'\r\n                        onClick={onSave}\r\n                        hidden={!canSave}\r\n                        disabled={!canSave}\r\n                    />\r\n                    <ReactToPrint\r\n                        trigger={() => <IconButton\r\n                            icon='fa-solid fa-print'\r\n                            hidden={!canPrint}\r\n                            disabled={!canPrint}\r\n                        />}\r\n                        //@ts-ignore\r\n                        content={() => {\r\n                            return (\r\n                                componentRef.current\r\n                            )\r\n                        }}\r\n                        documentTitle=\"dd\"\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-regular fa-file-excel'\r\n                        onClick={onExcel}\r\n                        hidden={!canExcel}\r\n                        disabled={!canExcel}\r\n                    />\r\n                </Flex>\r\n                <Skeleton isLoaded={!loading} fadeDuration={0} >\r\n                    <Box overflowY=\"auto\" height={height}>\r\n                        <ChakraTable\r\n                            //@ts-ignore\r\n                            ref={componentRef}\r\n                        >\r\n                            <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                                <Tr>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <Th maxWidth={item.width} minWidth={item.width}>\r\n                                                {t(item.title)}\r\n                                            </Th>\r\n                                        )\r\n                                    })}\r\n                                    <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <Tr key={item[rowKey]} onClick={handleSelectedRow(item)} onDoubleClick={handleDouble(item)} background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`} >\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <Td maxWidth={column.width} minWidth={column.width}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </Td>\r\n                                                )\r\n                                            })}\r\n                                            <Td hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={() => { onAction(item) }}\r\n                                                />\r\n                                            </Td>\r\n                                        </Tr>\r\n                                    )\r\n                                })}\r\n                            </Tbody>\r\n\r\n                            {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n\r\n                        </ChakraTable>\r\n\r\n                        {!Array.isArray(dataSource) || dataSource.length === 0 && !loading ? <Flex justifyContent='center' width='100%'>\r\n                            <Text as='b' fontSize='md' color='red'>No Data</Text>\r\n                        </Flex> : <></>}\r\n                    </Box>\r\n                </Skeleton>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","const API_ID = {\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dmlPOST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\n  //http://144.24.209.19:9090/api/invoices/customer_invoice/new_customer_invoice\n  POST_CUSTOMER_INVOICE_DETAILS:\n    \"invoices/customer_invoice/new_customer_invoice\",\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\n  //http://144.24.209.19:9090/api/employees/employee_data/employee_table_data\n  QUERY_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data\",\n  ////http://144.24.209.19:9090/api/employees/employee_data/employee_table_data_dml\n  POST_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data_dml\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_detail_table?invoice_type=C&invoice_no=\n  QUERY_INVOICE_DETAIL_TABLE_DATA:\n    \"invoices/invoice_search/customer_supplier_invoice_detail_table\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_main_table?invoice_type=C&invoice_no=\n  QUERY_INVOICE_MASTER_TABLE_DATA:\n    \"invoices/invoice_search/customer_supplier_invoice_main_table\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_invoices_for_today\n  QUERY_CUSTOMERS_INVOICES_FOT_TODAY:\n    \"invoices/invoice_search/customer_invoices_for_today\",\n  QUERY_SUPPLIERS_INVOICES_FOT_TODAY:\n    \"invoices/invoice_search/supplier_invoices_for_today\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\n    \"basic_data/print_options/print_options_table_data\",\n  POST_PRINT_OPTIONS_TABLE_DATA:\n    \"basic_data/print_options/print_options_table_data_dml\",\n  //http://144.24.209.19:9090/auth_security/sign_in\n  USER_LOG_IN: \"auth_security/sign_in\",\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\n  QUERY_LABELS: \"get_labels\",\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_list?invoice_type=S\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST:\n    \"invoices/invoice_search/customer_supplier_list\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_lins\n  QUERY_PRINT_OPTIONS_LIST: \"basic_data/print_options/print_options_lins\",\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_receipt_voucher/main_table\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_receipt_voucher/main_table_dml\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_payment_voucher/main_table\",\n  //http://144.24.209.19:9090/api/income_and_expenses/casher_receipt_voucher/main_table_dml\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_and_expenses/casher_payment_voucher/main_table_dml\",\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\n  POST_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\n  //http://144.24.209.19:9090/api/charts/invoices_query?\n  QUERY_INVOICES_CHART_DATA: \"charts/invoices_query\",\n  //http://144.24.209.19:9090/api/auth_security/users_info\n  QUERY_USERS_TABLE_DATA: \"auth_security/users_info\",\n  //http://144.24.209.19:9090/api/auth_security/users_info_dml\n  POST_USERS_TABLE_DATA: \"auth_security/users_info_dml\",\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data\n  QUERY_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data\",\n  //http://144.24.209.19:9090/api/system_tools/page_name/page_name_table_data_dml\n  POST_PAGE_NAME_MAIN_TABLE: \"system_tools/page_name/page_name_table_data_dml\",\n  //http://144.24.209.19:9090/api/system_reports/customer_summary_table\n  QUERY_CUSTOMER_SUMMARY_TABLE: \"system_reports/customer_summary_table\",\n};\n\nexport default API_ID;\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setLoading(true);\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      setLoading(false);\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  const everyTime = useCallback(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n      // setInterval(everyTime, 10000);\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params, everyTime]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  // clearInterval(myInterval);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useRef, useEffect } from \"react\";\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current as T;\n};\n\nexport default usePrevious;\n","import { useState, useCallback, useEffect, useRef } from \"react\";\nimport usePrevious from \"./usePrevious\";\n\ninterface useFormManagerProps {\n  initialValues?: any;\n  setSelectedRow?: any;\n  tableModal?: boolean;\n}\n\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\n  const [state, setState] = useState<typeof initialValues>(initialValues);\n\n  const hasAnyFieldChangedRef = useRef(false);\n  const preValues = usePrevious(initialValues);\n\n  const areInitialValuesChanged = useCallback(\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\n    [initialValues, preValues]\n  );\n\n  useEffect(() => {\n    if (areInitialValuesChanged()) {\n      setState({ ...initialValues });\n    }\n  }, [areInitialValuesChanged, initialValues]);\n\n  const resetForm = useCallback(() => {\n    hasAnyFieldChangedRef.current = false;\n    setState(() => initialValues);\n    // @ts-ignore\n  }, [initialValues]);\n\n  useEffect(\n    () => {\n      return resetForm;\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const onChange = useCallback(\n    (eventData: any) => {\n      const { name, value } = eventData;\n      setState({ ...state, [name]: value });\n    },\n    [state]\n  );\n\n  const handleRootState = useCallback((e: any) => {\n    setState(e);\n  }, []);\n\n  const handleSelectWithLabelChange = useCallback(\n    (eventData: any) => {\n      setState({\n        ...state,\n        [eventData.name]: eventData.value,\n        [eventData.selectLabelName]: eventData.label,\n      });\n    },\n    [state]\n  );\n\n  const handleArrayChange = useCallback(\n    ({ name, value }: any) => {\n      setState({ ...state, [name]: [...state[name], value] });\n    },\n    [state]\n  );\n\n  return {\n    state,\n    onChange,\n    resetForm,\n    handleRootState,\n    handleSelectWithLabelChange,\n    handleArrayChange,\n  };\n};\n\nexport default useFormManager;\n","import { useState, useCallback } from \"react\";\nimport { useLocalStorage } from \"@commons/hooks\";\nimport { API_ID } from \"@commons/global\";\nimport { useToast } from \"@chakra-ui/react\";\n\ninterface useMutationProps {\n  link: string;\n  noAuthorization?: boolean;\n  additionalFunctionToRun?: () => void;\n  runOnSuccess?: () => void;\n  runOnFail?: () => void;\n  method?: string;\n}\ninterface successType {\n  response: string;\n}\n\nconst useMutation = ({\n  link = \"\",\n  noAuthorization = false,\n  additionalFunctionToRun,\n  runOnSuccess,\n  runOnFail,\n  method = \"POST\",\n}: useMutationProps) => {\n  const toast = useToast();\n  //@ts-ignore\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\n  const [success, setSuccess] = useState<successType>();\n  const { authorization } = useLocalStorage();\n  const postData = useCallback(\n    async (dataToPost: any) => {\n      if (authorization || noAuthorization) {\n        const settings = {\n          method: method,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${authorization}`,\n          },\n          body: JSON.stringify(dataToPost),\n        };\n        try {\n          const fetchResponse = await fetch(url, settings);\n          const data = await fetchResponse.json();\n          if (data.response === \"success\") {\n            toast({\n              position: \"top-right\",\n              title: \"Success\",\n              description: `${data.response}`,\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n            });\n            if (runOnSuccess) runOnSuccess();\n          } else {\n            toast({\n              position: \"top-right\",\n              title: \"Error\",\n              description: `${data.message}`,\n              status: \"error\",\n              duration: 9000,\n              isClosable: true,\n            });\n            if (runOnFail) runOnFail();\n          }\n          setSuccess(data);\n          if (additionalFunctionToRun) {\n            additionalFunctionToRun();\n          }\n          return data;\n        } catch (e) {}\n      }\n    },\n    [\n      additionalFunctionToRun,\n      authorization,\n      method,\n      noAuthorization,\n      runOnFail,\n      runOnSuccess,\n      toast,\n      url,\n    ]\n  );\n\n  const setRow = useCallback(\n    (row: any) => {\n      postData(row);\n    },\n    [postData]\n  );\n\n  return { success, setRow };\n};\n\nexport default useMutation;\n","import React, { memo, useCallback } from \"react\";\nimport {\n    NumberInput,\n    NumberInputField,\n    // NumberInputStepper,\n    // NumberIncrementStepper,\n    // NumberDecrementStepper,\n    Flex,\n    FormLabel\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { inputNumberProp } from \"./interface\";\n\nconst InputNumber = ({\n    disabled,\n    value,\n    name = \"number\",\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    padding,\n    margin = \"10px\",\n    step = 1,\n    min = 0,\n    max\n}: inputNumberProp) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: number; }; }) => {\n        onChange({ name: name, value: +event.target.value })\n    }, [name, onChange])\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <NumberInput step={step} min={min} max={max} isDisabled={disabled} value={value | 0}>\n                    {\n                        //@ts-ignore\n                        <NumberInputField onChange={handleChange} />\n                    }\n                    {/* <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper> */}\n                </NumberInput>\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputNumber)","import React, { memo, useCallback } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\nimport { InputTextProps } from \"./interface\";\n\nconst InputText = ({\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n}: InputTextProps) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Input\n                    placeholder={placeHolder}\n                    size='md'\n                    isDisabled={disabled}\n                    isRequired={required}\n                    onChange={handleChange}\n                    width=\"100%\"\n                    className={className}\n                    value={value}\n                    type={type}\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputText)","import React, { memo, useEffect } from \"react\";\nimport { SelectWithApi } from \"@commons/select\";\nimport { InputText } from \"@commons/input-text\";\nimport Flex from \"@commons/flex\";\nimport InputNumber from \"@commons/input-number\"\n\ninterface InsertFormProp {\n    onChange: any;\n    state: any;\n    handleRootState: any;\n    handleSelectWithLabelChange: any\n}\n\nconst InsertForm = ({\n    onChange,\n    state,\n    handleRootState,\n    handleSelectWithLabelChange\n}: InsertFormProp) => {\n\n    useEffect(() => {\n        handleRootState({\n            ...state,\n            customer_invoice_item_size: +state.customer_invoice_item_width * +state.customer_invoice_item_height,\n            customer_invoice_item_total: +state.customer_invoice_item_quantity * +state.customer_invoice_item_price * +state.customer_invoice_item_width * +state.customer_invoice_item_height\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        state.customer_invoice_item_width,\n        state.customer_invoice_item_height,\n        state.customer_invoice_item_quantity,\n        state.customer_invoice_item_price\n    ])\n\n    return (\n        <>\n            <Flex width=\"100%\" flexDirection=\"column\" margin=\"0\" padding=\"0\">\n                <Flex margin=\"0\" padding=\"0\">\n                    <SelectWithApi\n                        Api={\"QUERY_PRINT_OPTIONS_LIST\"}\n                        onChange={handleSelectWithLabelChange}\n                        value={state.customer_invoice_print_option_id}\n                        Label=\"prntnm\"\n                        name=\"customer_invoice_print_option_id\"\n                        withLabel\n                        fetchOnFirstRun\n                        selectLabelName=\"print_name\"\n                    />\n                    <SelectWithApi\n                        Api={\"QUERY_ITEMS_LIST\"}\n                        onChange={handleSelectWithLabelChange}\n                        value={state.customer_invoice_item_id}\n                        Label=\"itmnm\"\n                        name=\"customer_invoice_item_id\"\n                        withLabel\n                        fetchOnFirstRun\n                        selectLabelName=\"item_name\"\n                    />\n                </Flex>\n                <Flex margin=\"0\" padding=\"0\">\n                    <InputNumber\n                        name=\"customer_invoice_item_width\"\n                        value={state.customer_invoice_item_width}\n                        Label=\"wdth\"\n                        onChange={onChange}\n                        width=\"14%\"\n                    />\n                    <InputNumber\n                        name=\"customer_invoice_item_height\"\n                        value={state.customer_invoice_item_height}\n                        Label=\"hght\"\n                        onChange={onChange}\n                        width=\"14%\"\n                    />\n                    <InputNumber\n                        name=\"customer_invoice_item_size\"\n                        value={state.customer_invoice_item_size}\n                        Label=\"sz\"\n                        onChange={onChange}\n                        disabled\n                        width=\"14%\"\n                    />\n                    <InputNumber\n                        name=\"customer_invoice_item_quantity\"\n                        value={state.customer_invoice_item_quantity}\n                        Label=\"qnty\"\n                        onChange={onChange}\n                        width=\"14%\"\n                    />\n                    <InputNumber\n                        name=\"customer_invoice_item_price\"\n                        value={state.customer_invoice_item_price}\n                        Label=\"prc\"\n                        onChange={onChange}\n                        width=\"14%\"\n                    />\n                    <InputNumber\n                        name=\"customer_invoice_item_total\"\n                        value={state.customer_invoice_item_total}\n                        Label=\"total\"\n                        onChange={onChange}\n                        disabled\n                        width=\"14%\"\n                    />\n                    <InputText\n                        name=\"customer_invoice_item_notes\"\n                        value={state.customer_invoice_item_notes}\n                        Label=\"nts\"\n                        onChange={onChange}\n                        width=\"14%\"\n                    />\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InsertForm)","export const columns = [\n  {\n    title: \"prntnm\",\n    width: \"10%\",\n    dataIndex: \"print_name\",\n  },\n  {\n    title: \"itmnm\",\n    width: \"10%\",\n    dataIndex: \"item_name\",\n  },\n  {\n    title: \"wdth\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_width\",\n  },\n  {\n    title: \"hght\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_height\",\n  },\n  {\n    title: \"sz\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_size\",\n  },\n  {\n    title: \"qnty\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_quantity\",\n  },\n  {\n    title: \"prc\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_price\",\n  },\n  {\n    title: \"total\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_total\",\n  },\n  {\n    title: \"nts\",\n    width: \"10%\",\n    dataIndex: \"customer_invoice_item_notes\",\n  },\n];\n","import React, { memo, useCallback, useEffect } from \"react\";\nimport { InputText } from \"@commons/input-text\";\nimport InputNumber from \"@commons/input-number\"\nimport { useMutation, useFormManager } from \"@commons/hooks\";\nimport { Table } from \"@commons/table\";\nimport Flex from \"@commons/flex\";\nimport { SelectWithApi } from \"@commons/select\";\nimport { Button } from \"@commons/button\";\nimport InsertForm from \"./Partials/InsertForm\";\nimport { columns } from \"./constant\"\n\nconst CustomerInvoices = () => {\n\n    const {\n        state,\n        onChange,\n        resetForm,\n        handleRootState,\n        handleArrayChange\n    } = useFormManager({\n        initialValues: {\n            customer_id: 0,\n            customer_invoice_date: \"\",\n            customer_invoice_items: [],\n            query_status: \"n\",\n            customer_invoice_total: 0,\n            customer_invoice_discount: 0,\n            customer_invoice_after_discount: 0,\n            customer_invoice_paid: 0,\n            customer_invoice_credit: 0\n        }\n    })\n\n    const {\n        state: currentItemState,\n        onChange: currentItemChange,\n        handleRootState: handleItemMultiChange,\n        handleSelectWithLabelChange,\n        resetForm: resetItemForm\n    } = useFormManager({\n        initialValues: {\n            customer_invoice_print_option_id: 0,\n            customer_invoice_item_id: 0,\n            customer_invoice_item_width: 0,\n            customer_invoice_item_height: 0,\n            customer_invoice_item_size: 0,\n            customer_invoice_item_quantity: 0,\n            customer_invoice_item_price: 0,\n            customer_invoice_item_total: 0,\n            customer_invoice_item_notes: \"\",\n            item_name: \"\",\n            print_name: \"\"\n        }\n    })\n\n    const {\n        setRow\n    } = useMutation({\n        link: \"POST_CUSTOMER_INVOICE_DETAILS\",\n        runOnSuccess: resetForm\n    })\n\n\n    const handleAdd = useCallback(() => {\n        handleArrayChange({\n            name: \"customer_invoice_items\",\n            value: currentItemState\n        })\n        resetItemForm()\n    }, [currentItemState, handleArrayChange, resetItemForm]);\n\n    const handleSave = useCallback(() => {\n        setRow(state)\n    }, [setRow, state]);\n\n    const additionalButtons = [\n        {\n            icon: \"fa-solid fa-broom\",\n            onClick: resetForm\n        },\n    ]\n\n    useEffect(() => {\n        if (Array.isArray(state.customer_invoice_items) && state.customer_invoice_items.length !== 0) {\n            let totals = 0\n            state.customer_invoice_items.forEach((item: any) => {\n                totals = totals + item.customer_invoice_item_total\n            });\n            onChange({ name: \"customer_invoice_total\", value: totals })\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state.customer_invoice_items, state.customer_invoice_total])\n\n    useEffect(() => {\n        handleRootState({ ...state, customer_invoice_after_discount: state.customer_invoice_total - state.customer_invoice_discount, customer_invoice_credit: state.customer_invoice_total - state.customer_invoice_discount - state.customer_invoice_paid })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state.customer_invoice_total, state.customer_invoice_discount, state.customer_invoice_paid])\n\n    return (\n        <>\n            <Flex flexDirection=\"column\" width=\"100%\">\n                <Flex margin=\"0\" padding=\"0\">\n                    <SelectWithApi\n                        Api={\"QUERY_CUSTOMERS_LIST\"}\n                        onChange={onChange}\n                        value={state.customer_id}\n                        Label=\"cstmr\"\n                        name=\"customer_id\"\n                        fetchOnFirstRun\n                    />\n                    <InputText\n                        name=\"customer_invoice_date\"\n                        value={state.customer_invoice_date}\n                        Label=\"dt\"\n                        onChange={onChange}\n                        type=\"date\"\n                    />\n                </Flex>\n                <InsertForm\n                    state={currentItemState}\n                    onChange={currentItemChange}\n                    handleRootState={handleItemMultiChange}\n                    handleSelectWithLabelChange={handleSelectWithLabelChange}\n                />\n                <Table\n                    columns={columns}\n                    dataSource={state.customer_invoice_items}\n                    actionColumn\n                    actionLabel=\"Delete\"\n                    // onAction={handleDelete}\n                    hideTools={false}\n                    onAdd={handleAdd}\n                    // onSelectedRow={setActiveItem}\n                    canAdd={true}\n                    additionalButtons={additionalButtons}\n                />\n                <Flex width='100%' justifyContent='space-around'>\n                    <InputNumber\n                        name='customer_invoice_total'\n                        disabled\n                        value={state.customer_invoice_total}\n                        Label=\"total\"\n                        width=\"15%\"\n                    />\n                    <InputNumber\n                        name='customer_invoice_discount'\n                        value={state.customer_invoice_discount}\n                        Label=\"dscnt\"\n                        onChange={onChange}\n                        width=\"15%\"\n                    />\n                    <InputNumber\n                        name='totalAfterDiscount'\n                        disabled\n                        value={state.customer_invoice_after_discount}\n                        Label=\"Tlaftrdsnt\"\n                        width=\"15%\"\n                    />\n                    <InputNumber\n                        name='customer_invoice_paid'\n                        value={state.customer_invoice_paid}\n                        Label=\"paid\"\n                        onChange={onChange}\n                        width=\"15%\"\n                    />\n                    <InputNumber\n                        name='customer_invoice_credit'\n                        disabled\n                        value={state.customer_invoice_credit}\n                        Label=\"Crdt\"\n                        width=\"15%\"\n                    />\n                    <Button\n                        label=\"sv\"\n                        width=\"15%\"\n                        height=\"50%\"\n                        margin=\"30px 0\"\n                        onClick={handleSave}\n                    />\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(CustomerInvoices)","// src/select-field.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SelectField = forwardRef(\n  function SelectField2(props, ref) {\n    const { children, placeholder, className, ...rest } = props;\n    return /* @__PURE__ */ jsxs(\n      chakra.select,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-select\", className),\n        children: [\n          placeholder && /* @__PURE__ */ jsx(\"option\", { value: \"\", children: placeholder }),\n          children\n        ]\n      }\n    );\n  }\n);\nSelectField.displayName = \"SelectField\";\n\nexport {\n  SelectField\n};\n","import {\n  SelectField\n} from \"./chunk-HQIEHZYI.mjs\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Select = forwardRef((props, ref) => {\n  var _a;\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...(_a = styles.field) == null ? void 0 : _a[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ jsxs(\n    chakra.div,\n    {\n      className: \"chakra-select__wrapper\",\n      __css: rootStyles,\n      ...layoutProps,\n      ...rootProps,\n      children: [\n        /* @__PURE__ */ jsx(\n          SelectField,\n          {\n            ref,\n            height: h != null ? h : height,\n            minH: minH != null ? minH : minHeight,\n            placeholder,\n            ...ownProps,\n            __css: fieldStyles,\n            children: props.children\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          SelectIcon,\n          {\n            \"data-disabled\": dataAttr(ownProps.disabled),\n            ...(iconColor || color) && { color: iconColor || color },\n            __css: styles.icon,\n            ...iconSize && { fontSize: iconSize },\n            children: icon\n          }\n        )\n      ]\n    }\n  );\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }\n) });\nvar IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ jsx(DefaultIcon, {}), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ jsx(IconWrapper, { ...rest, className: \"chakra-select__icon-wrapper\", children: isValidElement(children) ? clone : null });\n};\nSelectIcon.displayName = \"SelectIcon\";\n\nexport {\n  Select,\n  DefaultIcon\n};\n"],"names":["Flex","children","justifyContent","width","height","padding","margin","bordered","backgroundColor","borderColor","borderWidth","borderRadius","flexDirection","textAlign","hidden","wrap","useState","setBorder","useEffect","background","memo","Select","Options","label","value","onChange","Label","name","withLabel","placeholder","selectLabelName","t","useTranslation","direction","fontSize","as","event","Array","isArray","map","option","target","Option","selected","disabled","SelectWithApi","Api","params","fetchOnFirstRun","data","useFetch","link","IconButton","icon","onClick","color","style","border","className","dataSource","rowKey","columns","hideTools","canEdit","canAdd","canDelete","canExcel","onAdd","onEdit","onDelete","actionColumn","onAction","actionLabel","onSelectedRow","canPrint","additionalButtons","onPrint","onSave","canSave","loading","onDoubleClick","e","console","log","pathname","useLocation","rowSelected","setRowSelected","handleSelectedRow","useCallback","item","handleDouble","onExcel","pathName","replace","wb","XLSX","ws","Date","toUTCString","componentRef","useRef","marginBottom","fontWeight","button","trigger","content","current","documentTitle","isLoaded","fadeDuration","overflowY","ref","top","position","bgColor","Tr","Th","maxWidth","minWidth","title","column","Td","dataIndex","length","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_CUSTOMERS_INVOICES_FOT_TODAY","QUERY_SUPPLIERS_INVOICES_FOT_TODAY","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","QUERY_INVOICES_CHART_DATA","QUERY_USERS_TABLE_DATA","POST_USERS_TABLE_DATA","QUERY_PAGE_NAME_MAIN_TABLE","POST_PAGE_NAME_MAIN_TABLE","QUERY_CUSTOMER_SUMMARY_TABLE","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","undefined","setData","setLoading","getData","settings","headers","Accept","Authorization","fetch","URLSearchParams","response","json","apiData","everyTime","description","JSON","stringify","status","duration","isClosable","runFetch","initialValues","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","Object","is","resetForm","eventData","handleRootState","handleSelectWithLabelChange","handleArrayChange","additionalFunctionToRun","runOnSuccess","runOnFail","method","success","setSuccess","postData","dataToPost","body","fetchResponse","message","setRow","row","InputNumber","step","min","max","handleChange","isDisabled","InputText","type","placeHolder","required","I","size","isRequired","InsertForm","customer_invoice_item_size","customer_invoice_item_width","customer_invoice_item_height","customer_invoice_item_total","customer_invoice_item_quantity","customer_invoice_item_price","customer_invoice_print_option_id","customer_invoice_item_id","customer_invoice_item_notes","CustomerInvoices","useFormManager","customer_id","customer_invoice_date","customer_invoice_items","query_status","customer_invoice_total","customer_invoice_discount","customer_invoice_after_discount","customer_invoice_paid","customer_invoice_credit","item_name","print_name","currentItemState","currentItemChange","handleItemMultiChange","resetItemForm","useMutation","handleAdd","handleSave","totals","forEach","Table","SelectField","forwardRef","props","rest","jsxs","chakra","cx","jsx","displayName","_a","styles","useMultiStyleConfig","omitThemingProps","rootProps","h","minH","minHeight","iconColor","iconSize","object","keys","picked","omitted","entries","key","includes","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","fieldStyles","paddingEnd","field","_focus","zIndex","__css","SelectIcon","dataAttr","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","pointerEvents","transform","clone","cloneElement","role","focusable","isValidElement"],"sourceRoot":""}