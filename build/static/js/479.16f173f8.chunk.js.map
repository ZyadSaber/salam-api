{"version":3,"file":"static/js/479.16f173f8.chunk.js","mappings":"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","sources":["../common/TableView/src/ApiTable.tsx","../common/button/src/iconButton.tsx","../common/TableView/src/Table.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/useMutation.ts","../common/modal/src/index.tsx"],"sourcesContent":["import React, { memo, useState, useCallback } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\nimport { TableWithApiProps } from \"./interface\"\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    ModalContent,\r\n    onClick,\r\n    fetchOnFirstRun = false,\r\n    params,\r\n    ...props\r\n}: TableWithApiProps) => {\r\n    const { data, runFetch, loading } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false)\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onClick) onClick(row)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onSelectedRow={handleSelectedRow}\r\n                loading={loading}\r\n                {...props}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TableWithApi)","import React, { memo } from \"react\";\r\nimport { iconButtonProp } from \"./interface\"\r\n\r\nconst IconButton = ({\r\n    icon,\r\n    onClick,\r\n    disabled = false,\r\n    width = \"30px\",\r\n    height = \"30px\",\r\n    color,\r\n    margin = \"10px\",\r\n    padding,\r\n    hidden = false\r\n}: iconButtonProp) => {\r\n    return (\r\n        <>\r\n            <button style={{\r\n                border: \"none\",\r\n                width: width,\r\n                height: height,\r\n                backgroundColor: color,\r\n                padding: padding,\r\n                margin: margin,\r\n                borderRadius: \"20px\"\r\n            }} hidden={hidden} onClick={onClick} disabled={disabled} >\r\n                <i className={icon}></i>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(IconButton)","import React, { useState, useCallback, useRef } from 'react';\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as XLSX from \"xlsx\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport ReactToPrint from 'react-to-print';\r\nimport {\r\n    Table as ChakraTable,\r\n    Thead,\r\n    Tbody,\r\n    // Tfoot,\r\n    Text,\r\n    Box,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableContainer,\r\n    Skeleton\r\n} from '@chakra-ui/react'\r\nimport Flex from \"@commons/flex\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\n\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    height = \"300px\",\r\n    rowKey = \"rowKey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    canExcel = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    canPrint = false,\r\n    onPrint,\r\n    additionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\",\r\n    margin = \"\",\r\n    padding = \"\",\r\n    loading = false,\r\n    onDoubleClick = () => { }\r\n}: TableProps) => {\r\n    const { pathname } = useLocation()\r\n    const { t } = useTranslation()\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    const onExcel = useCallback(() => {\r\n        const pathName = pathname.replace(\"/\", \"\")\r\n        const wb = XLSX.utils.book_new(),\r\n            //@ts-ignore\r\n            ws = XLSX.utils.json_to_sheet(dataSource)\r\n        XLSX.utils.book_append_sheet(wb, ws, pathName)\r\n        XLSX.writeFile(wb, `${pathName} ${new Date().toUTCString()}.xlsx`)\r\n    }, [dataSource, pathname])\r\n\r\n    const componentRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <TableContainer width={width} padding={padding} margin={margin}>\r\n                <Flex\r\n                    width='100%'\r\n                    padding='0'\r\n                    margin='5px 0'\r\n                    justifyContent='center'\r\n                    hidden={hideTools}\r\n                >\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-plus'\r\n                        onClick={onAdd}\r\n                        hidden={!canAdd}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-pen-clip'\r\n                        onClick={onEdit}\r\n                        hidden={!canEdit}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-trash'\r\n                        onClick={onDelete}\r\n                        hidden={!canDelete}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    {additionalButtons && additionalButtons.map((button: additionalButtonsType) => {\r\n                        return (\r\n                            <IconButton\r\n                                icon={button.icon}\r\n                                onClick={button.onClick}\r\n                                disabled={button.disabled}\r\n                                hidden={false}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <IconButton\r\n                        icon='fa-solid fa-floppy-disk'\r\n                        onClick={onSave}\r\n                        hidden={!canSave}\r\n                        disabled={!canSave}\r\n                    />\r\n                    <ReactToPrint\r\n                        trigger={() => <IconButton\r\n                            icon='fa-solid fa-print'\r\n                            hidden={!canPrint}\r\n                            disabled={!canPrint}\r\n                        />}\r\n                        //@ts-ignore\r\n                        content={() => {\r\n                            return (\r\n                                componentRef.current\r\n                            )\r\n                        }}\r\n                        documentTitle=\"dd\"\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-regular fa-file-excel'\r\n                        onClick={onExcel}\r\n                        hidden={!canExcel}\r\n                        disabled={!canExcel}\r\n                    />\r\n                </Flex>\r\n                <Skeleton isLoaded={!loading} fadeDuration={0} >\r\n                    <Box overflowY=\"auto\" height={height}>\r\n                        <ChakraTable\r\n                            //@ts-ignore\r\n                            ref={componentRef}\r\n                        >\r\n                            <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                                <Tr>\r\n                                    {columns.map((item: any) => {\r\n                                        return (\r\n                                            <Th maxWidth={item.width} minWidth={item.width}>\r\n                                                {t(item.title)}\r\n                                            </Th>\r\n                                        )\r\n                                    })}\r\n                                    <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {dataSource?.map((item: any) => {\r\n                                    return (\r\n                                        <Tr key={item[rowKey]} onClick={handleSelectedRow(item)} onDoubleClick={onDoubleClick} background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`} >\r\n                                            {columns.map((column: any) => {\r\n                                                return (\r\n                                                    <Td maxWidth={column.width} minWidth={column.width}>\r\n                                                        {item[column.dataIndex]}\r\n                                                    </Td>\r\n                                                )\r\n                                            })}\r\n                                            <Td hidden={!actionColumn}>\r\n                                                <Button\r\n                                                    label={actionLabel}\r\n                                                    onClick={() => { onAction(item) }}\r\n                                                />\r\n                                            </Td>\r\n                                        </Tr>\r\n                                    )\r\n                                })}\r\n                            </Tbody>\r\n\r\n                            {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n\r\n                        </ChakraTable>\r\n\r\n                        {!Array.isArray(dataSource) || dataSource.length === 0 && !loading ? <Flex justifyContent='center' width='100%'>\r\n                            <Text as='b' fontSize='md' color='red'>No Data</Text>\r\n                        </Flex> : <></>}\r\n                    </Box>\r\n                </Skeleton>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","const API_ID = {\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\r\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\r\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\r\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dml\r\n  POST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/invoices/customer_invoice/new_customer_invoice\r\n  POST_CUSTOMER_INVOICE_DETAILS:\r\n    \"invoices/customer_invoice/new_customer_invoice\",\r\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\r\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\r\n  //http://144.24.209.19:9090/api/employees/employee_data/employee_table_data\r\n  QUERY_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data\",\r\n  ////http://144.24.209.19:9090/api/employees/employee_data/employee_table_data_dml\r\n  POST_EMPLOYEES_TABLE_DATA: \"employees/employee_data/employee_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_detail_table?invoice_type=C&invoice_no=\r\n  QUERY_INVOICE_DETAIL_TABLE_DATA:\r\n    \"invoices/invoice_search/customer_supplier_invoice_detail_table\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_invoice_main_table?invoice_type=C&invoice_no=\r\n  QUERY_INVOICE_MASTER_TABLE_DATA:\r\n    \"invoices/invoice_search/customer_supplier_invoice_main_table\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\r\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\r\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\r\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\r\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\r\n    \"basic_data/print_options/print_options_table_data\",\r\n  POST_PRINT_OPTIONS_TABLE_DATA:\r\n    \"basic_data/print_options/print_options_table_data_dml\",\r\n  //http://144.24.209.19:9090/auth_security/sign_in\r\n  USER_LOG_IN: \"auth_security/sign_in\",\r\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\r\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\r\n  QUERY_LABELS: \"get_labels\",\r\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\r\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\r\n  //http://144.24.209.19:9090/api/invoices/invoice_search/customer_supplier_list?invoice_type=S\r\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST:\r\n    \"invoices/invoice_search/customer_supplier_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\r\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\r\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\r\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\r\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_lins\r\n  QUERY_PRINT_OPTIONS_LIST: \"basic_data/print_options/print_options_lins\",\r\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\r\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\r\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_receipt_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\r\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\r\n    \"income_expense/get_casher_receipt_voucher_invoices\",\r\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_receipt_voucher_invoices_dml?authorization=1677621781730\r\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\r\n    \"income_expense/post_casher_receipt_voucher_invoices_dml\",\r\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_payment_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\r\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\r\n    \"income_expense/get_casher_payment_voucher_invoices\",\r\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_payment_voucher_invoices_dml?authorization=1677621781730\r\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\r\n    \"income_expense/post_casher_payment_voucher_invoices_dml\",\r\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\r\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\r\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\r\n    \"basic_data/expenses_type/expenses_type_table_data\",\r\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\r\n  POST_EXPENSES_TYPES_TABLE_DATA:\r\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\r\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\r\n};\r\n\r\nexport default API_ID;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = useCallback(async () => {\r\n    setLoading(true);\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      setLoading(false);\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  const everyTime = useCallback(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n      // setInterval(everyTime, 10000);\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params, everyTime]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  // clearInterval(myInterval);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);"],"names":["TableWithApi","api","postApi","columns","ModalContent","onClick","fetchOnFirstRun","params","props","useFetch","link","data","runFetch","loading","onSaveAndInsertion","useTableControlsButtons","useState","selectedRow","setSelectedRow","modal","setModal","handleAdd","useCallback","query_status","handleEdit","handleCloseModal","visible","onClose","hideCloseButton","hideSaveButton","label","refreshTable","dataSource","onAdd","onEdit","onDelete","onSelectedRow","row","memo","IconButton","icon","disabled","width","height","color","margin","padding","hidden","style","border","backgroundColor","borderRadius","className","rowKey","hideTools","canEdit","canAdd","canDelete","canExcel","actionColumn","onAction","actionLabel","canPrint","additionalButtons","onPrint","onSave","canSave","onDoubleClick","pathname","useLocation","t","useTranslation","rowSelected","setRowSelected","handleSelectedRow","item","onExcel","pathName","replace","wb","XLSX","ws","Date","toUTCString","componentRef","useRef","justifyContent","map","button","trigger","content","current","documentTitle","isLoaded","fadeDuration","overflowY","ref","top","position","bgColor","Tr","Th","maxWidth","minWidth","title","background","column","Td","dataIndex","Array","isArray","length","as","fontSize","newRecord","useMutation","additionalFunctionToRun","method","setRow","updateRecord","deleteRecord","record","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","undefined","setData","setLoading","getData","settings","headers","Accept","Authorization","fetch","URLSearchParams","response","json","apiData","everyTime","useEffect","description","JSON","stringify","status","duration","isClosable","runOnSuccess","runOnFail","success","setSuccess","postData","dataToPost","body","fetchResponse","message","Modal","children","onOK","submitTitle","isOpen","size","w","wrap","colorScheme","mr"],"sourceRoot":""}