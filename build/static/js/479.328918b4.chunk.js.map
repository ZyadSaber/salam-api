{"version":3,"file":"static/js/479.328918b4.chunk.js","mappings":"gMA2BMA,EAAe,SAAH,GAcQ,IAbtBC,EAAG,EAAHA,IACAC,EAAO,EAAPA,QACAC,EAAO,EAAPA,QACAC,EAAS,EAATA,UACAC,EAAM,EAANA,OACAC,EAAO,EAAPA,QACAC,EAAS,EAATA,UACAC,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAK,EAALA,MACAC,EAAa,EAAbA,cAAc,EAAD,EACbC,gBAAAA,OAAe,OAAQ,EACvBC,EAAM,EAANA,OAEA,GAA2BC,EAAAA,EAAAA,GAAS,CAAEC,KAAMd,EAAKW,gBAAiBA,EAAiBC,OAAQA,IAAnFG,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACNC,GAAuBC,EAAAA,EAAAA,GAAwB,CAAElB,IAAKC,EAASe,SAAUA,IAAzEC,mBACR,GAAsCE,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA3CC,EAAW,KAAEC,EAAc,KAClC,GAA0BF,EAAAA,EAAAA,WAAS,GAAM,eAAlCG,EAAK,KAAEC,EAAQ,KAChBC,GAAYC,EAAAA,EAAAA,cAAY,WAC1BJ,EAAe,CAAEK,aAAc,MAC/BH,GAAS,EACb,GAAG,CAACF,IACEM,GAAaF,EAAAA,EAAAA,cAAY,WAC3BJ,GAAe,kBAAKD,GAAW,IAAEM,aAAc,OAC/CH,GAAS,EACb,GAAG,CAACH,EAAaC,IAKXO,GAAmBH,EAAAA,EAAAA,cAAY,WACjCF,GAAS,EACb,GAAG,IAQH,OACI,gCACKf,IAAgB,SAAC,IAAK,CACnBqB,QAASP,EACTQ,QAASF,EACTG,iBAAe,EACfC,gBAAc,EACdC,MAAM,OAAM,UAEZ,SAACzB,EAAY,CACTsB,QAASF,EACTR,YAAaA,EACbc,aAAclB,OAItB,SAAC,IAAK,CACFmB,WAAgB,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAClBb,QAASA,EACTC,UAAWA,EACXC,OAAQA,EACRC,QAASA,EACTC,UAAWA,EACXC,OAAQA,EACR6B,MAAOZ,EACPa,OAAQV,EACRW,SAxCS,WACjBrB,GAAmB,kBAAKG,GAAW,IAAEM,aAAc,MACvD,EAuCYhB,cAhCc,SAAC6B,GACvBlB,EAAekB,GACX7B,GAAeA,EAAc6B,EACrC,EA8BY9B,MAAOA,MAMvB,EAEA,KAAe+B,EAAAA,EAAAA,MAAKzC,E,wFCrGd0C,EAAa,SAAH,GAUO,IATnBC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QAAQ,EAAD,EACPC,SAAAA,OAAQ,OAAQ,MAChBnC,MAAAA,OAAK,MAAG,OAAM,MACdoC,OAAAA,OAAM,MAAG,OAAM,EACfC,EAAK,EAALA,MAAM,EAAD,EACLC,OAAAA,OAAM,MAAG,OAAM,EACfC,EAAO,EAAPA,QAAQ,EAAD,EACPC,OAAAA,OAAM,OAAQ,EAEd,OACI,+BACI,mBAAQC,MAAO,CACXC,OAAQ,OACR1C,MAAOA,EACPoC,OAAQA,EACRO,gBAAiBN,EACjBE,QAASA,EACTD,OAAQA,EACRM,aAAc,QACfJ,OAAQA,EAAQN,QAASA,EAASC,SAAUA,EAAS,UACpD,cAAGU,UAAWZ,OAI9B,EAEA,GAAeF,EAAAA,EAAAA,MAAKC,G,4GC3BhBc,GAAiBC,EAAAA,EAAAA,IACnB,SAACC,EAAOC,GACN,IAAIC,EACIC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,UAAWP,EAAuBG,EAAvBH,UAAcQ,GAAI,OAAKL,EAAK,GACzD,OAAuBM,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAU,gBAERN,IAAAA,EACAJ,WAAWW,EAAAA,EAAAA,IAAG,0BAA2BX,IACtCQ,GAAI,IACPI,MAAO,CACLC,QAAS,QACTC,WAAY,SACZC,wBAAyB,QACzBR,UAA6D,OAAjDF,EAAiB,MAAZC,EAAmBA,EAAWC,GAAqBF,EAAK,OACzEW,UAAW,SACXC,SAAU,UAIlB,I,iECdE,GAAwCC,EAAAA,EAAAA,GAAc,CACxDC,KAAM,qBACNC,aAAc,sGACd,eAHGC,EAAmB,KAAEC,EAAc,KAIpCC,GAAQrB,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAMoB,GAASC,EAAAA,EAAAA,IAAoB,QAAStB,GAC5C,GAA6CuB,EAAAA,EAAAA,IAAiBvB,GAAtDH,EAAS,EAATA,UAAW2B,EAAM,EAANA,OAAWC,GAAU,YACxC,OAAuBnB,EAAAA,EAAAA,KAAIY,EAAqB,CAAEQ,MAAOL,EAAQM,UAA0BrB,EAAAA,EAAAA,KACzFC,EAAAA,EAAAA,OAAY,QAEVN,IAAAA,EACAQ,OAAO,QAAEmB,YAAaJ,GAAWH,EAAOQ,OACxChC,WAAWW,EAAAA,EAAAA,IAAG,eAAgBX,IAC3B4B,KAGT,IACAL,EAAMU,YAAc,QCpBpB,IAAIC,GAAQhC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAMoB,EAASF,IACf,OAAuBb,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAAc,kBAAKP,GAAK,IAAEC,IAAAA,EAAKQ,MAAOY,EAAOW,QAC1E,ICHIC,GAAKlC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC1B,IAAMoB,EAASF,IACf,OAAuBb,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,IAAW,kBAAKP,GAAK,IAAEC,IAAAA,EAAKQ,MAAOY,EAAOa,KACvE,I,gBCHIC,GAAKpC,EAAAA,EAAAA,IACP,WAAyBE,GAAQ,IAA9BmC,EAAS,EAATA,UAAc/B,GAAI,YACbgB,EAASF,IACf,OAAuBb,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IAAS,kBAEJF,GAAI,IACPJ,IAAAA,EACAQ,MAAOY,EAAOgB,GACd,kBAAmBD,IAGzB,ICZEE,GAAQvC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAMoB,EAASF,IACf,OAAuBb,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAAc,kBAAKP,GAAK,IAAEC,IAAAA,EAAKQ,MAAOY,EAAOkB,QAC1E,I,gBCHIC,GAAKzC,EAAAA,EAAAA,IACP,WAAyBE,GAAQ,IAA9BmC,EAAS,EAATA,UAAc/B,GAAI,YACbgB,EAASF,IACf,OAAuBb,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IAAS,kBAEJF,GAAI,IACPJ,IAAAA,EACAQ,MAAOY,EAAOoB,GACd,kBAAmBL,IAGzB,I,UCmIF,EAnIc,SAAH,GAwBQ,IAvBf1D,EAAU,EAAVA,WAAW,EAAD,EACVU,OAAAA,OAAM,MAAG,QAAO,MAChBtC,OAAAA,OAAM,MAAG,SAAQ,EACjBL,EAAO,EAAPA,QAAQ,EAAD,EACPC,UAAAA,OAAS,OAAO,MAChBE,QAAAA,OAAO,OAAQ,MACfD,OAAAA,OAAM,OAAQ,MACdE,UAAAA,OAAS,OAAQ,EACjB8B,EAAK,EAALA,MACAC,EAAM,EAANA,OACAC,EAAQ,EAARA,SAAS,EAAD,EACR6D,aAAAA,OAAY,OAAQ,EACpBC,EAAQ,EAARA,SAAS,EAAD,EACRC,YAAAA,OAAW,MAAG,GAAE,EAChB3F,EAAa,EAAbA,cAAc,EAAD,EACb4F,SAAAA,OAAQ,OAAQ,EAChBC,EAAO,EAAPA,QACAC,EAAiB,EAAjBA,kBACAC,EAAM,EAANA,OAAO,EAAD,EACNC,QAAAA,OAAO,OAAQ,MACfjG,MAAAA,OAAK,MAAG,OAAM,MACdsC,OAAAA,OAAM,MAAG,GAAE,MACXC,QAAAA,OAAO,MAAG,GAAE,EAEJ2D,GAAMC,EAAAA,EAAAA,MAAND,EACR,GAAsCxF,EAAAA,EAAAA,YAAU,gBAAzC0F,GAAW,MAAEC,GAAc,MAC5BC,IAAoBtF,EAAAA,EAAAA,cAAY,SAACuF,GAAS,OAAK,WACjDtG,EAAcsG,GACdF,GAAeE,EACnB,CAAC,GAAE,CAACtG,IAEJ,OACI,+BACI,UAAC6C,EAAc,CAAC9C,MAAOA,EAAOuC,QAASA,EAASD,OAAQA,EAAO,WAC3D,UAAC,IAAI,CACDtC,MAAM,OACNuC,QAAQ,IACRD,OAAO,QACPkE,eAAe,SACfhE,OAAQ9C,EAAU,WAElB,SAAC,EAAU,CACPuC,KAAK,4BACLC,QAASP,EACTa,QAAS7C,KAEb,SAAC,EAAU,CACPsC,KAAK,gCACLC,QAASN,EACTY,QAAS5C,EACTuC,UAAWiE,MAEf,SAAC,EAAU,CACPnE,KAAK,6BACLC,QAASL,EACTW,QAAS3C,EACTsC,UAAWiE,KAEdL,GAAqBA,EAAkBU,KAAI,SAACC,GACzC,OACI,SAAC,EAAU,CACPzE,KAAMyE,EAAOzE,KACbC,QAASwE,EAAOxE,QAChBC,SAAUuE,EAAOvE,SACjBK,QAAQ,GAGpB,KACA,SAAC,EAAU,CACPP,KAAK,0BACLC,QAAS8D,EACTxD,QAASyD,EACT9D,UAAW8D,KAEf,SAAC,EAAU,CACPhE,KAAK,oBACLC,QAAS4D,EACTtD,QAASqD,EACT1D,UAAW0D,QAGnB,SAAC,KAAG,CAAChC,UAAU,OAAOzB,OAAQA,EAAO,UACjC,UAAC,EAAW,YACR,SAAC2C,EAAK,CAAC4B,IAAK,EAAGC,SAAS,SAASC,QAAQ,UAAS,UAC9C,UAAC5B,EAAE,WACExF,EAAQgH,KAAI,SAACF,GACV,OACI,SAACpB,EAAE,CAACnF,MAAOuG,EAAKvG,MAAM,SACjBkG,EAAEK,EAAKO,QAGpB,KACA,SAAC3B,EAAE,CAAC3C,QAASkD,EAAa,SAAEQ,EAAE,gBAGtC,SAACZ,EAAK,UACS,OAAV5D,QAAU,IAAVA,OAAU,EAAVA,EAAY+E,KAAI,SAACF,GACd,OACI,UAACtB,EAAE,CAAoB/C,QAASoE,GAAkBC,GAAOQ,WAAU,UAAKX,KAAgBG,EAAO,UAAY,IAAK,UAC3G9G,EAAQgH,KAAI,SAACO,GACV,OACI,SAACxB,EAAE,CAACxF,MAAOgH,EAAOhH,MAAM,SACnBuG,EAAKS,EAAOC,YAGzB,KACA,SAACzB,EAAE,CAAChD,QAASkD,EAAa,UACtB,SAAC,IAAM,CACHlE,MAAOoE,EACP1D,QAAS,WAAQyD,EAASY,EAAM,QAXnCA,EAAKzG,GAgBtB,eAc5B,C,+CC/GA,IAlCgC,SAAH,GAAqC,IAAD,IAA9BP,IAAAA,OAAG,MAAG,GAAE,EAAEgB,EAAQ,EAARA,SAC3B2G,GAAcC,EAAAA,EAAAA,GAAY,CACxC9G,KAAMd,EACN6H,wBAAyB7G,EACzB8G,OAAQ,SAHFC,OAKQC,GAAiBJ,EAAAA,EAAAA,GAAY,CAC3C9G,KAAMd,EACN6H,wBAAyB7G,EACzB8G,OAAQ,QAHFC,OAKQE,GAAiBL,EAAAA,EAAAA,GAAY,CAC3C9G,KAAMd,EACN6H,wBAAyB7G,EACzB8G,OAAQ,WAHFC,OAoBR,MAAO,CAAE9G,oBAdkBQ,EAAAA,EAAAA,cACzB,SAACyG,GACCC,QAAQC,IAAIF,GACgB,MAAxBA,EAAOxG,aACTiG,EAAUO,GACuB,MAAxBA,EAAOxG,aAChBsG,EAAaE,GACoB,MAAxBA,EAAOxG,cAChBuG,EAAaC,EAEjB,GACA,CAACP,EAAWK,EAAcC,IAI9B,C,oBC8BA,IAjEe,CAEbI,0BAA2B,4CAE3BC,yBAA0B,gDAE1BC,0BAA2B,4CAE3BC,yBAA0B,gDAC1BC,8BAA+B,gCAC/BC,yBAA0B,wCAC1BC,sBAAuB,qCACvBC,2BAA4B,0BAC5BC,0BAA2B,8BAC3BC,gCAAiC,8BACjCC,gCAAiC,8BAEjCC,uBAAwB,oCAExBC,sBAAuB,wCAEvBC,8BACE,oDACFC,8BACE,wDAEFC,YAAa,wBAEbC,sBAAuB,iDACvBC,aAAc,aACdC,mBAAoB,mBACpBC,yBAA0B,kCAC1BC,iCAAkC,sCAElCC,oBAAqB,sCAErBC,qBAAsB,sCAEtBC,iBAAkB,8BAClBC,yBAA0B,mCAE1BC,4BAA6B,+BAE7BC,wCACE,qDAEFC,uCACE,0DAEFC,wCACE,qDAEFC,uCACE,0DAEFC,sBAAuB,2BAEvBC,gCACE,oDAEFC,+BACE,wDACFC,kBAAmB,gC,gGCQrB,IAzDiB,SAAH,GAMO,IAAD,IALlBxJ,KAAAA,OAAI,MAAG,GAAE,EACTH,EAAe,EAAfA,gBAEAC,GADc,EAAd2J,eACM,EAAN3J,QAAO,EAAD,EACN4J,gBAAAA,OAAe,OAAQ,EAEjBC,GAAQC,EAAAA,EAAAA,KACNC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAEFE,EAAG,wCAAoCC,EAAAA,EAAOhK,IACpD,GAAwBK,EAAAA,EAAAA,UAAc,IAAG,eAAlCJ,EAAI,KAAEgK,EAAO,KACdC,GAAUvJ,EAAAA,EAAAA,cAAW,uBAAC,iGACtBkJ,IAAiBH,EAAe,gBAQjC,OAPKS,EAAW,CAEfC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYT,KAE3B,EAAD,OACsBU,MAAM,GAAD,OACvBR,EAAG,YAAI,IAAIS,gBAAgB1K,IAC9BqK,GACA,KAAD,EAHa,OAARM,EAAQ,gBAIQA,EAASC,OAAO,KAAD,EAA/BC,EAAO,OACbV,EAAQU,GAAS,2CAElB,CAACd,EAAeH,EAAiB5J,EAAQiK,KAE5Ca,EAAAA,EAAAA,YAAU,WACJ/K,GACFqK,GAEJ,GAAG,CAACrK,EAAiBqK,EAASH,EAAKjK,KAEnC8K,EAAAA,EAAAA,YAAU,WACJ3K,EAAKwK,UACPd,EAAM,CACJpD,SAAU,YACVE,MAAO,QACPoE,YAAY,GAAD,OAAKC,KAAKC,UAAU9K,EAAKwK,WACpCO,OAAQ,QACRC,SAAU,IACVC,YAAY,GAGlB,GAAG,CAACjL,EAAM0J,IAEV,IAAMzJ,GAAWS,EAAAA,EAAAA,cAAY,WAC3BuJ,GACF,GAAG,CAACA,IAEJ,MAAO,CAAEjK,KAAAA,EAAMC,SAAAA,EAAU+J,QAAAA,EAC3B,C,gGC4BA,IA/EoB,SAAH,GAOQ,IAAD,IANtBjK,KAAAA,OAAI,MAAG,GAAE,MACT0J,gBAAAA,OAAe,OAAQ,EACvB3C,EAAuB,EAAvBA,wBACAoE,EAAY,EAAZA,aACAC,EAAS,EAATA,UAAU,EAAD,EACTpE,OAAAA,OAAM,MAAG,OAAM,EAET2C,GAAQC,EAAAA,EAAAA,KAERG,EAAG,wCAAoCC,EAAAA,EAAOhK,IACpD,GAA8BK,EAAAA,EAAAA,YAAuB,eAA9CgL,EAAO,KAAEC,EAAU,KAClBzB,GAAkBC,EAAAA,EAAAA,KAAlBD,cACF0B,GAAW5K,EAAAA,EAAAA,aAAW,yCAC1B,WAAO6K,GAAe,oFAChB3B,IAAiBH,EAAe,iBASjC,OARKS,EAAW,CACfnD,OAAQA,EACRoD,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYT,IAE3B4B,KAAMX,KAAKC,UAAUS,IACrB,EAAD,gBAE6BjB,MAAMR,EAAKI,GAAU,KAAD,EAA7B,OAAbuB,EAAa,gBACAA,EAAchB,OAAO,KAAD,EAyBtC,MAxBqB,aADhBzK,EAAI,QACDwK,UACPd,EAAM,CACJpD,SAAU,YACVE,MAAO,UACPoE,YAAY,GAAD,OAAK5K,EAAKwK,UACrBO,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEVC,GAAcA,MAElBxB,EAAM,CACJpD,SAAU,YACVE,MAAO,QACPoE,YAAY,GAAD,OAAK5K,EAAK0L,SACrBX,OAAQ,QACRC,SAAU,IACVC,YAAY,IAEVE,GAAWA,KAEjBE,EAAWrL,GACP8G,GACFA,IACD,kBACM9G,GAAI,4FAGhB,mDA3CyB,GA4C1B,CACE8G,EACA8C,EACA7C,EACA0C,EACA0B,EACAD,EACAxB,EACAI,IAWJ,MAAO,CAAEsB,QAAAA,EAASpE,QAPHtG,EAAAA,EAAAA,cACb,SAACc,GACC8J,EAAS9J,EACX,GACA,CAAC8J,IAIL,C,iJCpEMK,EAAQ,SAAH,GAYL,IAVEtH,EAAQ,EAARA,SAAS,EAAD,EACRvD,QAAAA,OAAO,OAAQ,EACfI,EAAK,EAALA,MACAH,EAAO,EAAPA,QACA6K,EAAI,EAAJA,KAAK,EAAD,EACJC,YAAAA,OAAW,MAAG,OAAM,MACpBnM,MAAAA,OAAK,MAAG,MAAK,MACbuB,eAAAA,OAAc,OAAQ,MACtBD,gBAAAA,OAAe,OAAQ,EAGnB4E,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACI,+BAEI,UAAC,KAAS,CAACkG,OAAQhL,EAASC,QAASA,EAASgL,KAAMrM,EAAM,WACtD,SAAC,IAAY,KACb,UAAC,IAAY,YACT,SAAC,IAAW,UAAEkG,EAAE1E,MAChB,SAAC,IAAgB,KACjB,SAAC,IAAS,WACN,SAAC,IAAI,CAAC8K,EAAE,OAAO/J,QAAQ,MAAMgK,KAAK,OAAM,SACnC5H,OAGT,SAAC,IAAW,WACR,UAAC,IAAI,CAAC2H,EAAE,MAAM9F,eAAe,eAAc,WACvC,SAAC,IAAM,CAACgG,YAAY,MAAMC,GAAI,EAAGvK,QAASb,EAASmB,OAAQlB,EAAgB,SACtE4E,EAAE,UAEP,SAAC,IAAM,CAACsG,YAAY,OAAOtK,QAASgK,EAAM1J,OAAQjB,EAAe,SAAG2E,EAAEiG,iBAOlG,EAEA,KAAepK,EAAAA,EAAAA,MAAKkK,E","sources":["../common/TableView/src/ApiTable.tsx","../common/button/src/iconButton.tsx","../node_modules/@chakra-ui/table/dist/chunk-7FCBKWFD.mjs","../node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","../node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","../node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","../node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","../node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","../node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","../common/TableView/src/Table.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/global/src/api.ts","../common/hooks/src/useFetch.ts","../common/hooks/src/useMutation.ts","../common/modal/src/index.tsx"],"sourcesContent":["import React, { memo, useState, useCallback } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\n\r\ninterface TableWithApiProps {\r\n    api: string;\r\n    postApi?: string;\r\n    columns: {\r\n        title: string,\r\n        dataIndex: string,\r\n        width: number | string\r\n    }[];\r\n    hideTools?: boolean;\r\n    canAdd?: boolean;\r\n    canEdit?: boolean;\r\n    canDelete?: boolean;\r\n    rowKey: string;\r\n    ModalContent?: any;\r\n    width?: number | string;\r\n    onSelectedRow?: any;\r\n    fetchOnFirstRun?: boolean;\r\n    refreshAfter?: number;\r\n    params?: any;\r\n}\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    hideTools,\r\n    canAdd,\r\n    canEdit,\r\n    canDelete,\r\n    rowKey,\r\n    ModalContent,\r\n    width,\r\n    onSelectedRow,\r\n    fetchOnFirstRun = false,\r\n    params\r\n}: TableWithApiProps) => {\r\n    const { data, runFetch } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false)\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onSelectedRow) onSelectedRow(row)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                hideTools={hideTools}\r\n                canAdd={canAdd}\r\n                canEdit={canEdit}\r\n                canDelete={canDelete}\r\n                rowKey={rowKey}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onSelectedRow={handleSelectedRow}\r\n                width={width}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(TableWithApi)","import React, { memo } from \"react\";\nimport { iconButtonProp } from \"./interface\"\n\nconst IconButton = ({\n    icon,\n    onClick,\n    disabled = false,\n    width = \"30px\",\n    height = \"30px\",\n    color,\n    margin = \"10px\",\n    padding,\n    hidden = false\n}: iconButtonProp) => {\n    return (\n        <>\n            <button style={{\n                border: \"none\",\n                width: width,\n                height: height,\n                backgroundColor: color,\n                padding: padding,\n                margin: margin,\n                borderRadius: \"20px\"\n            }} hidden={hidden} onClick={onClick} disabled={disabled} >\n                <i className={icon}></i>\n            </button>\n        </>\n    )\n}\n\nexport default memo(IconButton)","// src/table-container.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableContainer = forwardRef(\n  (props, ref) => {\n    var _a;\n    const { overflow, overflowX, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-table__container\", className),\n        ...rest,\n        __css: {\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: (_a = overflow != null ? overflow : overflowX) != null ? _a : \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\"\n        }\n      }\n    );\n  }\n);\n\nexport {\n  TableContainer\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import React, { useState, useCallback } from 'react';\r\nimport \"./style.css\";\r\nimport { Button, IconButton } from \"@commons/button\";\r\nimport { TableProps, additionalButtonsType } from \"./interface\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    Table as ChakraTable,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Box,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableContainer,\r\n} from '@chakra-ui/react'\r\nimport Flex from \"@commons/flex\";\r\n\r\n\r\nconst Table = ({\r\n    dataSource,\r\n    height = \"300px\",\r\n    rowKey = \"rowKey\",\r\n    columns,\r\n    hideTools = true,\r\n    canEdit = false,\r\n    canAdd = false,\r\n    canDelete = false,\r\n    onAdd,\r\n    onEdit,\r\n    onDelete,\r\n    actionColumn = false,\r\n    onAction,\r\n    actionLabel = \"\",\r\n    onSelectedRow,\r\n    canPrint = false,\r\n    onPrint,\r\n    additionalButtons,\r\n    onSave,\r\n    canSave = false,\r\n    width = \"100%\",\r\n    margin = \"\",\r\n    padding = \"\"\r\n}: TableProps) => {\r\n    const { t } = useTranslation()\r\n    const [rowSelected, setRowSelected] = useState()\r\n    const handleSelectedRow = useCallback((item: any) => () => {\r\n        onSelectedRow(item)\r\n        setRowSelected(item)\r\n    }, [onSelectedRow])\r\n\r\n    return (\r\n        <>\r\n            <TableContainer width={width} padding={padding} margin={margin}>\r\n                <Flex\r\n                    width='100%'\r\n                    padding='0'\r\n                    margin='5px 0'\r\n                    justifyContent='center'\r\n                    hidden={hideTools}\r\n                >\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-plus'\r\n                        onClick={onAdd}\r\n                        hidden={!canAdd}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-pen-clip'\r\n                        onClick={onEdit}\r\n                        hidden={!canEdit}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-sharp fa-solid fa-trash'\r\n                        onClick={onDelete}\r\n                        hidden={!canDelete}\r\n                        disabled={!rowSelected}\r\n                    />\r\n                    {additionalButtons && additionalButtons.map((button: additionalButtonsType) => {\r\n                        return (\r\n                            <IconButton\r\n                                icon={button.icon}\r\n                                onClick={button.onClick}\r\n                                disabled={button.disabled}\r\n                                hidden={false}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <IconButton\r\n                        icon='fa-solid fa-floppy-disk'\r\n                        onClick={onSave}\r\n                        hidden={!canSave}\r\n                        disabled={!canSave}\r\n                    />\r\n                    <IconButton\r\n                        icon='fa-solid fa-print'\r\n                        onClick={onPrint}\r\n                        hidden={!canPrint}\r\n                        disabled={!canPrint}\r\n                    />\r\n                </Flex>\r\n                <Box overflowY=\"auto\" height={height}>\r\n                    <ChakraTable>\r\n                        <Thead top={0} position=\"sticky\" bgColor=\"#3edae6\">\r\n                            <Tr>\r\n                                {columns.map((item: any) => {\r\n                                    return (\r\n                                        <Th width={item.width}>\r\n                                            {t(item.title)}\r\n                                        </Th>\r\n                                    )\r\n                                })}\r\n                                <Th hidden={!actionColumn}>{t(\"actn\")}</Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {dataSource?.map((item: any) => {\r\n                                return (\r\n                                    <Tr key={item[rowKey]} onClick={handleSelectedRow(item)} background={`${rowSelected === item ? \"#dbffbf\" : \"\"}`} >\r\n                                        {columns.map((column: any) => {\r\n                                            return (\r\n                                                <Td width={column.width}>\r\n                                                    {item[column.dataIndex]}\r\n                                                </Td>\r\n                                            )\r\n                                        })}\r\n                                        <Td hidden={!actionColumn}>\r\n                                            <Button\r\n                                                label={actionLabel}\r\n                                                onClick={() => { onAction(item) }}\r\n                                            />\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )\r\n                            })}\r\n                        </Tbody>\r\n                        {/* <Tfoot>\r\n                        <Tr>\r\n                        <Th>To convert</Th>\r\n                        <Th>into</Th>\r\n                        <Th isNumeric>multiply by</Th>\r\n                        </Tr>\r\n                    </Tfoot> */}\r\n                    </ChakraTable>\r\n                </Box>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      console.log(record);\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","const API_ID = {\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data\n  QUERY_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_table_data_dml\n  POST_CUSTOMER_TABLE_DATA: \"basic_data/customers/customers_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data\n  QUERY_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_table_data_dml\n  POST_SUPPLIER_TABLE_DATA: \"basic_data/suppliers/suppliers_table_data_dml\",\n  POST_CUSTOMER_INVOICE_DETAILS: \"invoices/customer_invoice_dml\",\n  POST_EMPLOYEE_ATTENDANCE: \"employeesData/employee_attendance_dml\",\n  POST_EMPLOYEE_LEAVING: \"employeesData/employee_leaving_dml\",\n  QUERY_EMPLOYEES_TABLE_DATA: \"employeesData/employees\",\n  POST_EMPLOYEES_TABLE_DATA: \"employeesData/employees_dml\",\n  QUERY_INVOICE_DETAIL_TABLE_DATA: \"invoices/get_invoice_detail\",\n  QUERY_INVOICE_MASTER_TABLE_DATA: \"invoices/get_invoice_master\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data\n  QUERY_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_table_data_dml\n  POST_ITEMS_TABLE_DATA: \"basic_data/items/items_table_data_dml\",\n  //http://144.24.209.19:9090/api/basic_data/print_options/print_options_table_data\n  QUERY_PRINT_OPTIONS_TABLE_DAT:\n    \"basic_data/print_options/print_options_table_data\",\n  POST_PRINT_OPTIONS_TABLE_DATA:\n    \"basic_data/print_options/print_options_table_data_dml\",\n  //http://144.24.209.19:9090/auth_security/sign_in\n  USER_LOG_IN: \"auth_security/sign_in\",\n  //http://144.24.209.19:9090/api/invoices/supplier_invoice/new_supplier_invoice\n  POST_SUPPLIER_INVOICE: \"invoices/supplier_invoice/new_supplier_invoice\",\n  QUERY_LABELS: \"get_labels\",\n  QUERY_CHUNK_LABELS: \"get_chunk_labels\",\n  QUERY_EMPLOYEE_NAME_LIST: \"employeesData/pop_employee_name\",\n  QUERY_CUSTOMER_AND_SUPPLIER_LIST: \"invoices/get_customer_supplier_list\",\n  //http://144.24.209.19:9090/api/basic_data/suppliers/suppliers_list\n  QUERY_SUPPLIER_LIST: \"basic_data/suppliers/suppliers_list\",\n  //http://144.24.209.19:9090/api/basic_data/customers/customers_list\n  QUERY_CUSTOMERS_LIST: \"basic_data/customers/customers_list\",\n  //http://144.24.209.19:9090/api/basic_data/items/items_list\n  QUERY_ITEMS_LIST: \"basic_data/items/items_list\",\n  QUERY_PRINT_OPTIONS_LIST: \"basicData/print_options_pop_data\",\n  //http://144.24.209.19:9090/api/v1/employeesData/employee_sheet?employee_id=4\n  QUERY_EMPLOYEE_SHEET_SALARY: \"employeesData/employee_sheet\",\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_receipt_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_expense/get_casher_receipt_voucher_invoices\",\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_receipt_voucher_invoices_dml?authorization=1677621781730\n  POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA:\n    \"income_expense/post_casher_receipt_voucher_invoices_dml\",\n  //http://144.24.209.19:9090/api/v1/income_expense/get_casher_payment_voucher_invoices?date_from=2023-04-01&date_to=2023-04-30\n  QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_expense/get_casher_payment_voucher_invoices\",\n  //http://144.24.209.19:9090/api/v1/income_expense/post_casher_payment_voucher_invoices_dml?authorization=1677621781730\n  POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA:\n    \"income_expense/post_casher_payment_voucher_invoices_dml\",\n  //http://144.24.209.19:9090/api/v1/home/dash_board_get_data?authorization=1677621781730\n  QUERY_MAIN_CHART_DATA: \"home/dash_board_get_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data\n  QUERY_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data\",\n  //http://144.24.209.19:9090/api/basic_data/expenses_type/expenses_type_table_data_dml\n  POST_EXPENSES_TYPES_TABLE_DATA:\n    \"basic_data/expenses_type/expenses_type_table_data_dml\",\n  GET_PRIMARY_IMAGE: \"application_logo/primary_logo\",\n};\n\nexport default API_ID;\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useFetchProp {\r\n  link: string;\r\n  fetchOnFirstRun?: boolean;\r\n  refreshTimeout?: number;\r\n  params?: any;\r\n  noAuthorization?: boolean;\r\n}\r\n\r\nconst useFetch = ({\r\n  link = \"\",\r\n  fetchOnFirstRun,\r\n  refreshTimeout,\r\n  params,\r\n  noAuthorization = false,\r\n}: useFetchProp) => {\r\n  const toast = useToast();\r\n  const { authorization } = useLocalStorage();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [data, setData] = useState<any>([]);\r\n  const getData = useCallback(async () => {\r\n    if (authorization || noAuthorization) {\r\n      const settings = {\r\n        // method: \"FETCH\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authorization}`,\r\n        },\r\n      };\r\n      const response = await fetch(\r\n        `${url}?${new URLSearchParams(params)}`,\r\n        settings\r\n      );\r\n      const apiData = await response.json();\r\n      setData(apiData);\r\n    }\r\n  }, [authorization, noAuthorization, params, url]);\r\n\r\n  useEffect(() => {\r\n    if (fetchOnFirstRun) {\r\n      getData();\r\n    }\r\n  }, [fetchOnFirstRun, getData, url, params]);\r\n\r\n  useEffect(() => {\r\n    if (data.response) {\r\n      toast({\r\n        position: \"top-right\",\r\n        title: \"error\",\r\n        description: `${JSON.stringify(data.response)}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [data, toast]);\r\n\r\n  const runFetch = useCallback(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  return { data, runFetch, setData };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import React, { memo } from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Modal as ModalView,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Flex\r\n} from '@chakra-ui/react';\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"3xl\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false\r\n    }: ModalProp\r\n) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <>\r\n\r\n            <ModalView isOpen={visible} onClose={onClose} size={width}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>{t(label)}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Flex w=\"100%\" padding=\"5px\" wrap=\"wrap\">\r\n                            {children}\r\n                        </Flex>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Flex w=\"25%\" justifyContent=\"space-around\">\r\n                            <Button colorScheme='red' mr={3} onClick={onClose} hidden={hideCloseButton}>\r\n                                {t(\"cls\")}\r\n                            </Button>\r\n                            <Button colorScheme='blue' onClick={onOK} hidden={hideSaveButton} >{t(submitTitle)}</Button>\r\n                        </Flex>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </ModalView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);"],"names":["TableWithApi","api","postApi","columns","hideTools","canAdd","canEdit","canDelete","rowKey","ModalContent","width","onSelectedRow","fetchOnFirstRun","params","useFetch","link","data","runFetch","onSaveAndInsertion","useTableControlsButtons","useState","selectedRow","setSelectedRow","modal","setModal","handleAdd","useCallback","query_status","handleEdit","handleCloseModal","visible","onClose","hideCloseButton","hideSaveButton","label","refreshTable","dataSource","onAdd","onEdit","onDelete","row","memo","IconButton","icon","onClick","disabled","height","color","margin","padding","hidden","style","border","backgroundColor","borderRadius","className","TableContainer","forwardRef","props","ref","_a","overflow","overflowX","rest","jsx","chakra","cx","__css","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","createContext","name","errorMessage","TableStylesProvider","useTableStyles","Table","styles","useMultiStyleConfig","omitThemingProps","layout","tableProps","value","children","tableLayout","table","displayName","Thead","thead","Tr","tr","Th","isNumeric","th","Tbody","tbody","Td","td","actionColumn","onAction","actionLabel","canPrint","onPrint","additionalButtons","onSave","canSave","t","useTranslation","rowSelected","setRowSelected","handleSelectedRow","item","justifyContent","map","button","top","position","bgColor","title","background","column","dataIndex","newRecord","useMutation","additionalFunctionToRun","method","setRow","updateRecord","deleteRecord","record","console","log","QUERY_CUSTOMER_TABLE_DATA","POST_CUSTOMER_TABLE_DATA","QUERY_SUPPLIER_TABLE_DATA","POST_SUPPLIER_TABLE_DATA","POST_CUSTOMER_INVOICE_DETAILS","POST_EMPLOYEE_ATTENDANCE","POST_EMPLOYEE_LEAVING","QUERY_EMPLOYEES_TABLE_DATA","POST_EMPLOYEES_TABLE_DATA","QUERY_INVOICE_DETAIL_TABLE_DATA","QUERY_INVOICE_MASTER_TABLE_DATA","QUERY_ITEMS_TABLE_DATA","POST_ITEMS_TABLE_DATA","QUERY_PRINT_OPTIONS_TABLE_DAT","POST_PRINT_OPTIONS_TABLE_DATA","USER_LOG_IN","POST_SUPPLIER_INVOICE","QUERY_LABELS","QUERY_CHUNK_LABELS","QUERY_EMPLOYEE_NAME_LIST","QUERY_CUSTOMER_AND_SUPPLIER_LIST","QUERY_SUPPLIER_LIST","QUERY_CUSTOMERS_LIST","QUERY_ITEMS_LIST","QUERY_PRINT_OPTIONS_LIST","QUERY_EMPLOYEE_SHEET_SALARY","QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA","POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA","QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA","POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA","QUERY_MAIN_CHART_DATA","QUERY_EXPENSES_TYPES_TABLE_DATA","POST_EXPENSES_TYPES_TABLE_DATA","GET_PRIMARY_IMAGE","refreshTimeout","noAuthorization","toast","useToast","authorization","useLocalStorage","url","API_ID","setData","getData","settings","headers","Accept","Authorization","fetch","URLSearchParams","response","json","apiData","useEffect","description","JSON","stringify","status","duration","isClosable","runOnSuccess","runOnFail","success","setSuccess","postData","dataToPost","body","fetchResponse","message","Modal","onOK","submitTitle","isOpen","size","w","wrap","colorScheme","mr"],"sourceRoot":""}