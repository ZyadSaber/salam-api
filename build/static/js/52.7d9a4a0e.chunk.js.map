{"version":3,"file":"static/js/52.7d9a4a0e.chunk.js","mappings":"wJAIA,MAAMA,EAAaC,IAKI,IALH,KAChBC,EAAI,MACJC,EAAQ,MAAK,MACbC,EAAQ,QACLC,GACUJ,EACb,OACIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAACC,QAASR,EAAME,MAAM,KAAKD,MAAOA,KAAWE,KACrD,EAIX,GAAeM,EAAAA,EAAAA,MAAKX,E,kICRpB,MAAMY,EAAYX,IAII,IAJH,QACfY,EAAO,YACPC,EAAW,aACXC,GACYd,EACZ,MAAM,MACFe,EAAK,SACLC,IAEEC,EAAAA,EAAAA,GAAe,CACbC,cAAe,IACRL,MAGT,mBAAEM,IAAuBC,EAAAA,EAAAA,GAAwB,CAAEC,IAAK,+BAAgCC,SAAUR,IAElGS,GAAaC,EAAAA,EAAAA,cAAY,KAC3BL,EAAmBJ,GACnBH,GAAS,GACV,CAACO,EAAoBJ,EAAOH,IAI/B,OAFAa,QAAQC,IAAIX,EAAMY,YAGdC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,OAAQ,EAAGC,QAAS,EAAGC,IAAK,EAAGC,UAAU,SAAS/B,MAAM,OAAMK,SAAA,EACpEqB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAC3B,MAAM,OAAMK,SAAA,EACdF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACNC,KAAK,iBACLhC,MAAM,iBACNa,SAAUA,EACVoB,MAAOrB,EAAMsB,eACbnC,MAAM,MACNoC,UAAQ,KAEZjC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACNC,KAAK,mBACLhC,MAAM,mBACNa,SAAUA,EACVoB,MAAOrB,EAAMwB,iBACbrC,MAAM,SAEVG,EAAAA,EAAAA,KAACmC,EAAAA,EAAQ,CACLL,KAAK,SACLhC,MAAM,SACNa,SAAUA,EACVoB,MAAOrB,EAAM0B,aAGjBpC,EAAAA,EAAAA,KAACN,EAAAA,EAAU,CACPU,QAASc,MAEV,EAIf,GAAeb,EAAAA,EAAAA,MAAKC,G,cChEb,MAAM+B,EAAU,CACrB,CACEC,MAAO,iBACPC,UAAW,iBACX1C,MAAO,OAET,CACEyC,MAAO,cACPC,UAAW,mBACX1C,MAAO,OAET,CACEyC,MAAO,SACPC,UAAW,SACX1C,MAAO,OAET,CACEyC,MAAO,aACPC,UAAW,aACX1C,MAAO,OAET,CACEyC,MAAO,aACPC,UAAW,aACX1C,MAAO,QCnBL2C,EAAcA,KAEZxC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACyC,EAAAA,EAAY,CACTzB,IAAK,gCACL0B,QAAS,+BACTL,QAASA,EACTM,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,OAAQ,iBACRC,aAAc3C,EACd4C,iBAAe,MAM/B,GAAe7C,EAAAA,EAAAA,MAAKmC,E","sources":["../common/button/src/saveButton.tsx","../pages/pages-parent-page/src/Partials/ModalView.tsx","../pages/pages-parent-page/src/constants.ts","../pages/pages-parent-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport Button from \"./button\"\r\nimport { saveButtonProp } from \"./interface\"\r\n\r\nconst SaveButton = ({\r\n    onOK,\r\n    width = \"40%\",\r\n    label = \"sv\",\r\n    ...props\r\n}: saveButtonProp) => {\r\n    return (\r\n        <>\r\n            <Button onClick={onOK} label=\"sv\" width={width} {...props} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SaveButton)","import React, { memo, useCallback } from 'react';\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { useFormManager } from '@commons/hooks';\r\nimport { ModalViewProp } from \"@commons/global\"\r\nimport { useTableControlsButtons } from \"@commons/table\";\r\nimport { SaveButton } from \"@commons/button\";\r\nimport { CheckBox } from \"@commons/check-box\";\r\nimport { Flex } from '@chakra-ui/react';\r\n\r\nconst ModalView = ({\r\n    onClose,\r\n    selectedRow,\r\n    refreshTable\r\n}: ModalViewProp) => {\r\n    const {\r\n        state,\r\n        onChange,\r\n    }\r\n        = useFormManager({\r\n            initialValues: {\r\n                ...selectedRow\r\n            }\r\n        })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: \"POST_PAGES_PARENT_DATA_TABLE\", runFetch: refreshTable })\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSaveAndInsertion(state)\r\n        onClose()\r\n    }, [onSaveAndInsertion, state, onClose])\r\n\r\n    console.log(state.page_name)\r\n\r\n    return (\r\n        <Flex margin={0} padding={0} gap={0} direction=\"column\" width=\"100%\"> \r\n        <Flex width=\"100%\">\r\n            <InputText\r\n                name=\"page_parent_id\"\r\n                label='page_parent_id'\r\n                onChange={onChange}\r\n                value={state.page_parent_id}\r\n                width=\"20%\"\r\n                disabled\r\n            />\r\n            <InputText\r\n                name=\"page_parent_name\"\r\n                label='page_parent_name'\r\n                onChange={onChange}\r\n                value={state.page_parent_name}\r\n                width=\"60%\"\r\n            />\r\n            <CheckBox\r\n                name=\"hidden\"\r\n                label='hidden'\r\n                onChange={onChange}\r\n                value={state.hidden}\r\n            />\r\n            </Flex>\r\n            <SaveButton\r\n                onClick={handleSave}\r\n            />\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default memo(ModalView)","export const columns = [\r\n  {\r\n    title: \"page_parent_id\",\r\n    dataIndex: \"page_parent_id\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"parent_name\",\r\n    dataIndex: \"page_parent_name\",\r\n    width: \"35%\",\r\n  },\r\n  {\r\n    title: \"hidden\",\r\n    dataIndex: \"hidden\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"created_at\",\r\n    dataIndex: \"created_at\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"updated_at\",\r\n    dataIndex: \"updated_at\",\r\n    width: \"20%\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constants\"\r\n\r\nconst PagesParent = () => {\r\n    return (\r\n        <>\r\n            <TableWithApi\r\n                api={\"QUERY_PAGES_PARENT_DATA_TABLE\"}\r\n                postApi={\"POST_PAGES_PARENT_DATA_TABLE\"}\r\n                columns={columns}\r\n                hideTools={false}\r\n                canEdit={true}\r\n                canAdd={true}\r\n                canDelete={true}\r\n                canExcel={false}\r\n                rowKey={\"page_parent_id\"}\r\n                ModalContent={ModalView}\r\n                fetchOnFirstRun\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PagesParent)"],"names":["SaveButton","_ref","onOK","width","label","props","_jsx","_Fragment","children","Button","onClick","memo","ModalView","onClose","selectedRow","refreshTable","state","onChange","useFormManager","initialValues","onSaveAndInsertion","useTableControlsButtons","api","runFetch","handleSave","useCallback","console","log","page_name","_jsxs","Flex","margin","padding","gap","direction","InputText","name","value","page_parent_id","disabled","page_parent_name","CheckBox","hidden","columns","title","dataIndex","PagesParent","TableWithApi","postApi","hideTools","canEdit","canAdd","canDelete","canExcel","rowKey","ModalContent","fetchOnFirstRun"],"sourceRoot":""}