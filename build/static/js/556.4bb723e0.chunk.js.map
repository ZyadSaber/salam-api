{"version":3,"file":"static/js/556.4bb723e0.chunk.js","mappings":"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","sources":["../common/button/src/saveButton.tsx","../pages/page-name-page/src/Partials/ModalView.tsx","../pages/page-name-page/src/constants.ts","../pages/page-name-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport Button from \"./button\"\r\nimport { saveButtonProp } from \"./interface\"\r\n\r\nconst SaveButton = ({\r\n    onOK,\r\n    width=\"40%\",\r\n    label = \"sv\",\r\n    ...props\r\n}: saveButtonProp) => {\r\n    return (\r\n        <>\r\n            <Button onClick={onOK} label=\"sv\" width={width} {...props} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SaveButton)","import React, { memo, useCallback } from 'react';\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { useFormManager } from '@commons/hooks';\r\nimport { ModalViewProp } from \"@commons/global\"\r\nimport { useTableControlsButtons } from \"@commons/table\";\r\nimport { SaveButton } from \"@commons/button\";\r\nimport { CheckBox } from \"@commons/check-box\";\r\nimport { Flex } from '@chakra-ui/react';\r\nimport { SelectWithApi } from '@commons/select';\r\n\r\nconst ModalView = ({\r\n    onClose,\r\n    selectedRow,\r\n    refreshTable\r\n}: ModalViewProp) => {\r\n    const {\r\n        state,\r\n        onChange,\r\n    }\r\n        = useFormManager({\r\n            initialValues: {\r\n                ...selectedRow\r\n            }\r\n        })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: \"POST_PAGE_NAME_MAIN_TABLE\", runFetch: refreshTable })\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSaveAndInsertion(state)\r\n        onClose()\r\n    }, [onSaveAndInsertion, state, onClose])\r\n\r\n    console.log(state.page_name)\r\n\r\n    return (\r\n        <Flex margin={0} padding={0} gap={0} direction=\"column\" width=\"100%\"> \r\n        <Flex width=\"100%\">\r\n            <InputText\r\n                name=\"page_name\"\r\n                Label='page_name'\r\n                onChange={onChange}\r\n                value={state.page_name}\r\n                width=\"47%\"\r\n            />\r\n            <InputText\r\n                name=\"page_link\"\r\n                Label='page_link'\r\n                onChange={onChange}\r\n                value={state.page_link}\r\n                width=\"47%\"\r\n            />\r\n            </Flex>\r\n                <Flex width=\"100%\">\r\n                <SelectWithApi\r\n                    Api='QUERY_PAGE_PARENT_LIST'\r\n                    name=\"page_parent_id\"\r\n                    Label='parent_name'\r\n                    onChange={onChange}\r\n                    value={state.page_parent_id}\r\n                    width=\"47%\"\r\n                    fetchOnFirstRun\r\n                />\r\n            <CheckBox\r\n                name=\"page_disabled\"\r\n                label='page_disabled'\r\n                onChange={onChange}\r\n                value={state.page_disabled}\r\n            />\r\n            <CheckBox\r\n                name=\"run_in_modal\"\r\n                label='run_in_modal'\r\n                onChange={onChange}\r\n                value={state.run_in_modal}\r\n            />\r\n            </Flex>\r\n            <SaveButton\r\n                onClick={handleSave}\r\n            />\r\n\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default memo(ModalView)","export const columns = [\r\n  {\r\n    title: \"page_name\",\r\n    dataIndex: \"page_name\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"page_link\",\r\n    dataIndex: \"page_link\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"page_disabled\",\r\n    dataIndex: \"page_disabled\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"run_in_modal\",\r\n    dataIndex: \"run_in_modal\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"parent_name\",\r\n    dataIndex: \"page_parent_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"created_at\",\r\n    dataIndex: \"created_at\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"updated_at\",\r\n    dataIndex: \"updated_at\",\r\n    width: \"20%\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constants\"\r\n\r\nconst PageName = () => {\r\n    return (\r\n        <>\r\n            <TableWithApi\r\n                api={\"QUERY_PAGE_NAME_MAIN_TABLE\"}\r\n                postApi={\"POST_PAGE_NAME_MAIN_TABLE\"}\r\n                columns={columns}\r\n                hideTools={false}\r\n                canEdit={true}\r\n                canAdd={true}\r\n                canDelete={true}\r\n                canExcel\r\n                rowKey={\"customer_id\"}\r\n                ModalContent={ModalView}\r\n                fetchOnFirstRun\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageName)"],"names":["SaveButton","_ref","onOK","_ref$width","width","props","label","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","Button","_objectSpread","onClick","memo","ModalView","onClose","selectedRow","refreshTable","_useFormManager","useFormManager","initialValues","state","onChange","onSaveAndInsertion","useTableControlsButtons","api","runFetch","handleSave","useCallback","console","log","page_name","_jsxs","Flex","margin","padding","gap","direction","InputText","name","Label","value","page_link","SelectWithApi","Api","page_parent_id","fetchOnFirstRun","CheckBox","page_disabled","run_in_modal","columns","title","dataIndex","PageName","TableWithApi","postApi","hideTools","canEdit","canAdd","canDelete","canExcel","rowKey","ModalContent"],"sourceRoot":""}