{"version":3,"file":"static/js/556.7be642b4.chunk.js","mappings":"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","sources":["../common/Select/src/styled.ts","../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/button/src/saveButton.tsx","../pages/page-name-page/src/Partials/ModalView.tsx","../pages/page-name-page/src/constants.ts","../pages/page-name-page/src/component.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StyledSelect = styled.select`\r\n  background: #fdfdfd;\r\n  border: 0.5px solid #cbd5e0;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 7px;\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport const StyledOption = styled.option`\r\n  padding: 100px;\r\n`;\r\n\r\n// export const DropDownContainer = styled.span`\r\n//   margin: 0;\r\n//   min-width: 100%;\r\n//   position: relative;\r\n//   display: inline-block;\r\n//   min-height: 2em;\r\n//   max-height: 2em;\r\n//   overflow: hidden;\r\n//   top: 0.5em;\r\n//   cursor: pointer;\r\n//   text-align: left;\r\n//   white-space: nowrap;\r\n//   color: #444;\r\n//   outline: none;\r\n//   border: 0.06em solid transparent;\r\n//   border-radius: 1em;\r\n//   background-color: #cde4f5;\r\n//   transition: 0.3s all ease-in-out;\r\n\r\n//   &::after {\r\n//     content: \"\";\r\n//     position: absolute;\r\n//     right: 0.8em;\r\n//     top: 0.9em;\r\n//     border: 0.3em solid #3694d7;\r\n//     border-color: #3694d7 transparent transparent transparent;\r\n//     transition: 0.4s all ease-in-out;\r\n//   }\r\n\r\n//   /* &:nth-child(2) {\r\n//     border-top: 0.06em solid #d9d9d9;\r\n//   } */\r\n// `;\r\n\r\n// export const SelectInputRadio = styled.input`\r\n//   width: 1px;\r\n//   height: 1px;\r\n//   display: inline-block;\r\n//   position: absolute;\r\n//   opacity: 0.01;\r\n\r\n//   &:focus {\r\n//     background: #def;\r\n//   }\r\n\r\n//   /* &:checked {\r\n//     display: block;\r\n//     border-top: none;\r\n//     position: absolute;\r\n//     top: 0;\r\n//     width: 100%;\r\n//   } */\r\n// `;\r\n\r\n// export const SelectLabel = styled.label`\r\n//   border-top: 0.06em solid #d9d9d9;\r\n//   display: block;\r\n//   height: 2em;\r\n//   line-height: 2em;\r\n//   padding-left: 1em;\r\n//   padding-right: 3em;\r\n//   cursor: pointer;\r\n//   position: relative;\r\n//   transition: 0.3s color ease-in-out;\r\n// `;\r\n\r\n// <DropDownContainer\r\n//   className={`dropdown-el ${expanded ? \"expanded\" : \"\"}`}\r\n// >\r\n//   {/* <input type=\"radio\" name=\"sortType\" value=\"Relevance\" id=\"sort-relevance\" onClick={handleValue} /><label htmlFor=\"sort-relevance\">Relevance</label> */}\r\n//   <SelectInputRadio type=\"radio\" />\r\n//   <SelectLabel htmlFor=\"sort-best\">Product Popularity</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"PriceIncreasing\"\r\n//     id=\"sort-low\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-low\">Price Low to High</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"PriceDecreasing\"\r\n//     id=\"sort-high\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-high\">Price High to Low</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"ProductBrand\"\r\n//     id=\"sort-brand\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-brand\">Product Brand</SelectLabel>\r\n//   <SelectInputRadio\r\n//     onClick={handleValue}\r\n//     type=\"radio\"\r\n//     name=\"sortType\"\r\n//     value=\"ProductName\"\r\n//     id=\"sort-name\"\r\n//   />\r\n//   <SelectLabel htmlFor=\"sort-name\">Product Name</SelectLabel>\r\n// </DropDownContainer>;\r\n","import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormLabel, Flex } from '@chakra-ui/react';\r\nimport { StyledSelect, StyledOption } from \"./styled\"\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    height = \"65px\",\r\n    width = \"200px\",\r\n    Options,\r\n    onChange,\r\n    label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\",\r\n    selectLabelName = \"label_select\",\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.forEach((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, selectLabelName: selectLabelName, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                height={height}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(label)}</FormLabel>\r\n                <StyledSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    <StyledOption>{t(\"Select\")}</StyledOption>\r\n                    {Array.isArray(Options) && Options.length !== 0 ? Options.map((Option) => {\r\n                        return (\r\n                            <StyledOption key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</StyledOption>\r\n                        )\r\n                    }) : <StyledOption disabled>{t(\"No data\")}</StyledOption>}\r\n                </StyledSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    api,\r\n    onChange,\r\n    label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    selectLabelName = \"label_select\"\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params,\r\n        checkForParams: true\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                label={label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import React, { memo } from \"react\";\r\nimport Button from \"./button\"\r\nimport { saveButtonProp } from \"./interface\"\r\n\r\nconst SaveButton = ({\r\n    onOK,\r\n    width = \"40%\",\r\n    label = \"sv\",\r\n    ...props\r\n}: saveButtonProp) => {\r\n    return (\r\n        <>\r\n            <Button onClick={onOK} label=\"sv\" width={width} {...props} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SaveButton)","import React, { memo, useCallback } from 'react';\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { useFormManager } from '@commons/hooks';\r\nimport { ModalViewProp } from \"@commons/global\"\r\nimport { useTableControlsButtons } from \"@commons/table\";\r\nimport { SaveButton } from \"@commons/button\";\r\nimport { CheckBox } from \"@commons/check-box\";\r\nimport { Flex } from '@chakra-ui/react';\r\nimport { SelectWithApi } from '@commons/select';\r\n\r\nconst ModalView = ({\r\n    onClose,\r\n    selectedRow,\r\n    refreshTable\r\n}: ModalViewProp) => {\r\n    const {\r\n        state,\r\n        onChange,\r\n    }\r\n        = useFormManager({\r\n            initialValues: {\r\n                ...selectedRow\r\n            }\r\n        })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: \"POST_PAGE_NAME_MAIN_TABLE\", runFetch: refreshTable })\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSaveAndInsertion(state)\r\n        onClose()\r\n    }, [onSaveAndInsertion, state, onClose])\r\n\r\n    console.log(state.page_name)\r\n\r\n    return (\r\n        <Flex margin={0} padding={0} gap={0} direction=\"column\" width=\"100%\"> \r\n        <Flex width=\"100%\">\r\n            <InputText\r\n                name=\"page_name\"\r\n                label='page_name'\r\n                onChange={onChange}\r\n                value={state.page_name}\r\n                width=\"47%\"\r\n            />\r\n            <InputText\r\n                name=\"page_link\"\r\n                label='page_link'\r\n                onChange={onChange}\r\n                value={state.page_link}\r\n                width=\"47%\"\r\n            />\r\n            </Flex>\r\n                <Flex width=\"100%\">\r\n                <SelectWithApi\r\n                    api='QUERY_PAGE_PARENT_LIST'\r\n                    name=\"page_parent_id\"\r\n                    label='parent_name'\r\n                    onChange={onChange}\r\n                    value={state.page_parent_id}\r\n                    width=\"47%\"\r\n                    fetchOnFirstRun\r\n                />\r\n            <CheckBox\r\n                name=\"page_disabled\"\r\n                label='page_disabled'\r\n                onChange={onChange}\r\n                value={state.page_disabled}\r\n            />\r\n            <CheckBox\r\n                name=\"run_in_modal\"\r\n                label='run_in_modal'\r\n                onChange={onChange}\r\n                value={state.run_in_modal}\r\n            />\r\n            </Flex>\r\n            <SaveButton\r\n                onClick={handleSave}\r\n            />\r\n\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default memo(ModalView)","export const columns = [\r\n  {\r\n    title: \"page_name\",\r\n    dataIndex: \"page_name\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"page_link\",\r\n    dataIndex: \"page_link\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"page_disabled\",\r\n    dataIndex: \"page_disabled\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"run_in_modal\",\r\n    dataIndex: \"run_in_modal\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"parent_name\",\r\n    dataIndex: \"page_parent_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"created_at\",\r\n    dataIndex: \"created_at\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"updated_at\",\r\n    dataIndex: \"updated_at\",\r\n    width: \"20%\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constants\"\r\n\r\nconst PageName = () => {\r\n    return (\r\n        <>\r\n            <TableWithApi\r\n                api={\"QUERY_PAGE_NAME_MAIN_TABLE\"}\r\n                postApi={\"POST_PAGE_NAME_MAIN_TABLE\"}\r\n                columns={columns}\r\n                hideTools={false}\r\n                canEdit={true}\r\n                canAdd={true}\r\n                canDelete={true}\r\n                canExcel\r\n                rowKey={\"customer_id\"}\r\n                ModalContent={ModalView}\r\n                fetchOnFirstRun\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageName)"],"names":["StyledSelect","styled","select","_templateObject","_taggedTemplateLiteral","StyledOption","option","_templateObject2","Select","_ref","height","width","Options","onChange","label","value","name","withLabel","margin","padding","placeholder","selectLabelName","t","useTranslation","_jsx","_Fragment","children","_jsxs","Flex","direction","FormLabel","fontSize","as","event","Array","isArray","forEach","target","length","map","Option","selected","disabled","memo","SelectWithApi","api","params","data","useFetch","link","fetchOnFirstRun","checkForParams","SaveButton","onOK","props","Button","onClick","ModalView","onClose","selectedRow","refreshTable","state","useFormManager","initialValues","onSaveAndInsertion","useTableControlsButtons","runFetch","handleSave","useCallback","console","log","page_name","gap","InputText","page_link","page_parent_id","CheckBox","page_disabled","run_in_modal","columns","title","dataIndex","PageName","TableWithApi","postApi","hideTools","canEdit","canAdd","canDelete","canExcel","rowKey","ModalContent"],"sourceRoot":""}