{"version":3,"file":"static/js/556.85e6ce40.chunk.js","mappings":"8KAGO,MAAMA,GAAeC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAcE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kQ,aCE1C,MAAMF,EAASG,IAeK,IAfJ,OACZC,EAAS,OAAM,MACfC,EAAQ,QAAO,QACfC,EAAO,SACPC,EAAQ,MACRC,EAAK,MACLC,EAAK,KACLC,EAAI,OACJC,EAAM,QACNC,EAAO,SACPC,EAAQ,OACRC,EAAM,SACNC,EAAQ,QACRC,EAAO,KACPC,GACUd,EAMV,OACIe,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACdX,MAAOA,EACPY,WAAYX,GAASA,EAAMY,WAC3BV,OAAQA,EACRC,QAASA,EACTR,OAAQA,EACRC,MAAOA,EACPS,OAAQA,EACRQ,IAAI,MAAKC,UAGTL,EAAAA,EAAAA,KAACpB,EAAY,CACbQ,QAASA,EACTkB,UAAU,EACVC,YAAU,EACVC,YAAU,EACVb,SAAUA,EACVN,SAtBiBoB,CAAClB,EAAyBmB,KAC3CrB,EAAS,CAACG,OAAMD,QAAOmB,UAAQ,EAsB/BC,cAAc,EACdb,QAASA,EACTD,SAAUC,GAAWD,EACrBE,KAAMA,EACNa,YAAY,MAEI,EAIxB,GAAeC,EAAAA,EAAAA,MAAK/B,E,4EClDpB,MAAMgC,EAAgB7B,IAaK,IAbJ,MACnBE,EAAK,IACL4B,EAAG,SACH1B,EAAQ,MACRC,EAAK,KACLE,EAAO,GAAE,MACTD,EAAQ,EAAC,UACTyB,GAAY,EAAK,QACjBtB,EAAO,OACPD,EAAM,OACNwB,EAAM,gBACNC,EAAkB,kBACfC,GACclC,EAEjB,MAAM,KAAEmC,EAAI,SAAEC,EAAQ,QAAEvB,IAAYwB,EAAAA,EAAAA,GAAS,CACzCC,KAAMR,EACNS,iBAAiB,EACjBP,OAAQA,EACRQ,gBAAgB,IAGdC,GAAeC,EAAAA,EAAAA,cAAaC,OAI/B,IAEH,OACI5B,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACIL,EAAAA,EAAAA,KAAClB,EAAAA,EAAM,CACHM,QAASgC,EACT/B,SAAUA,EACVC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNL,MAAOA,EACP6B,UAAWA,EACXvB,OAAQA,EACRC,QAASA,EACTwB,gBAAiBA,EACjBvB,SAAU+B,EACV5B,QAASA,KACLqB,KAET,EAIX,GAAeN,EAAAA,EAAAA,MAAKC,E,gDCpDpB,MAeA,EAf4BgB,KAExB,MAAMC,GAASC,EAAAA,EAAAA,UAETC,GAAkBN,EAAAA,EAAAA,cAAYO,UAAA,IAAAC,EAAA,aAEhB,QAApBA,EAAMJ,EAAOK,eAAO,IAAAD,OAAA,EAAdA,EAAgBE,aAAY,GACpC,CAACN,IAEC,MAAO,CACHA,SACAE,kBACH,E,uBCVL,MAAMK,EAAYA,CAAArD,EAIdsD,KACM,IALS,WACXC,EAAU,OACVvB,GACChC,EAID,MAAOwD,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAEjCN,GAAaV,EAAAA,EAAAA,cAAY,KAC3Be,GAAW,EAAK,GAClB,IAEIE,GAAcjB,EAAAA,EAAAA,cAAY,KAC5Be,GAAW,EAAM,GACnB,KAEFG,EAAAA,EAAAA,qBAAoBN,GAAK,MACrBF,iBAMJ,MAAMS,EAAW,iDAAAC,OAAmDP,EAAU,KAAAO,OAAI,IAAIC,gBAAgB/B,IAE1G,OACIjB,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CACF3D,MAAM,aACNmD,QAASA,EACTS,QAASN,EACTO,UAAQ,EACRhE,MAAM,MACND,OAAO,MAAKmB,UAEZL,EAAAA,EAAAA,KAAA,UAAQoB,KAAM0B,EAAa3D,MAAM,OAAOD,OAAO,OAAMmB,SAAA,8CAGjD,EAIhB,GAAeQ,EAAAA,EAAAA,OAAKuC,EAAAA,EAAAA,YAAWd,I,aC1C/B,MAAMe,EAAoBpE,IAA+D,IAA9D,QAACwD,EAAO,QAAES,EAAO,UAAEI,EAAS,QAAEC,GAA0BtE,EAE/E,MAAMuE,GAAqB7B,EAAAA,EAAAA,cAAY,KACnC2B,IACAJ,GAAS,GACX,CAACA,EAASI,IAEZ,OACItD,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CACF3D,MAAM,UACNmD,QAASA,EACTS,QAASA,EACT/D,MAAM,MACNsE,KAAMD,EACNE,YAAY,QAAOrD,SAElBkD,GAAoB,8BACjB,EAIhB,GAAe1C,EAAAA,EAAAA,MAAKwC,G,wBCNpB,MAAMM,EAAeA,CAAA1E,EAcjBsD,KACE,IAfgB,IAClBxB,EAAG,QACH6C,EAAO,QACPC,EAAO,aACPC,EAAY,QACZC,EAAO,gBACPvC,GAAkB,EAAK,OACvBP,EAAM,eACNQ,GAAiB,EAAK,WACtBuC,EAAa,MAAK,WAClBC,EAAU,WACVzB,KACG0B,GACajF,EAGhB,MAAM,KAAEmC,EAAI,SAAEC,EAAQ,QAAEvB,EAAO,QAAEqE,EAAO,UAAEC,IAAc9C,EAAAA,EAAAA,GAAS,CAAEC,KAAMR,EAAKS,gBAAiBA,EAAiBP,OAAQA,EAAQQ,eAAgBA,KAC1I,mBAAE4C,IAAuBC,EAAAA,EAAAA,GAAwB,CAAEvD,IAAK6C,EAASvC,SAAUA,KAC3E,OAAEU,EAAM,gBAAEE,GAAoBH,KAC7ByC,EAAaC,IAAkB7B,EAAAA,EAAAA,UAAS,CAAC,IACzC8B,EAAOC,IAAY/B,EAAAA,EAAAA,WAAS,IAC5BgC,EAAcC,IAAmBjC,EAAAA,EAAAA,WAAS,GAC3CkC,GAAYlD,EAAAA,EAAAA,cAAY,KAC1B6C,EAAe,CAAEM,aAAc,MAC/BJ,GAAS,EAAK,GACf,CAACF,IACEO,GAAapD,EAAAA,EAAAA,cAAY,KAC3B6C,EAAe,IAAKD,EAAaO,aAAc,MAC/CJ,GAAS,EAAK,GACf,CAACH,EAAaC,IAKXQ,GAAmBrD,EAAAA,EAAAA,cAAY,KACjC+C,GAAS,EAAM,GAChB,IAEGO,GAA0BtD,EAAAA,EAAAA,cAAY,KAAQiD,GAAgB,EAAM,GAAI,IACxEM,GAAyBvD,EAAAA,EAAAA,cAAY,KAAQiD,GAAgB,EAAK,GAAI,IAOtEO,GAAkBC,EAAAA,EAAAA,UACpB,IAAU,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MACZ,CAAK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,OAGLiE,GAAc1D,EAAAA,EAAAA,cAAY,KAC5B4C,GAAetC,GAAiB,GACjC,CAACA,EAAiBsC,IAWrB,OATA1B,EAAAA,EAAAA,qBAAoBN,GAAK,MACrBlB,WACAiE,aAAcnB,EACdoB,eAAgBnB,EAChBoB,qBAAsBA,IAAML,OAM5BM,EAAAA,EAAAA,MAAA5D,EAAAA,SAAA,CAAAxB,SAAA,CACKyD,IAAgB9D,EAAAA,EAAAA,KAACiD,EAAAA,EAAK,CACnBR,QAASgC,EACTvB,QAAS8B,EACTU,iBAAe,EACfC,gBAAc,EACdrG,MAAM,OACN6D,UAAQ,EACRhE,MAAO6E,EAAW3D,UAElBL,EAAAA,EAAAA,KAAC8D,EAAY,CACTZ,QAAS8B,EACTT,YAAaA,EACbqB,aAAcvE,OAItBrB,EAAAA,EAAAA,KAACqD,EAAiB,CACdZ,QAASkC,EACTrB,UAtDSuC,KACjBxB,EAAmB,IAAKE,EAAaO,aAAc,KAAM,EAsDjD5B,QAAS+B,KAEbjF,EAAAA,EAAAA,KAACsC,EAAS,CACNC,IAAKR,EACLS,WAAYA,EACZvB,OAAQgD,KAEZjE,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CACFC,WAAgB,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAClByC,QAASA,EACTmC,MAAOnB,EACPoB,OAAQlB,EACRmB,QAASb,EACTc,SAAUjB,EACVkB,cA1DeC,IACvB7B,EAAe6B,GACXtC,GAASA,EAAQsC,EAAI,EAyDjBvG,QAASA,KACLoE,MAIT,EAGX,GAAerD,EAAAA,EAAAA,OAAKuC,EAAAA,EAAAA,YAAWO,G,0DC5H/B,MAiCA,EAjCgC1E,IAAkC,IAAjC,IAAE8B,EAAM,GAAE,SAAEM,GAAepC,EAC1D,MAAQqH,OAAQC,IAAcC,EAAAA,EAAAA,GAAY,CACxCjF,KAAMR,EACN0F,wBAAyBpF,EACzBqF,OAAQ,UAEFJ,OAAQK,IAAiBH,EAAAA,EAAAA,GAAY,CAC3CjF,KAAMR,EACN0F,wBAAyBpF,EACzBqF,OAAQ,SAEFJ,OAAQM,IAAiBJ,EAAAA,EAAAA,GAAY,CAC3CjF,KAAMR,EACN0F,wBAAyBpF,EACzBqF,OAAQ,WAgBV,MAAO,CAAErC,oBAbkB1C,EAAAA,EAAAA,cACxBkF,IAC6B,MAAxBA,EAAO/B,aACTyB,EAAUM,GACuB,MAAxBA,EAAO/B,aAChB6B,EAAaE,GACoB,MAAxBA,EAAO/B,cAChB8B,EAAaC,EACf,GAEF,CAACN,EAAWI,EAAcC,IAGC,C,iEC7B/B,MAAME,EAAa7H,IAKI,IALH,KAChBwE,EAAI,MACJtE,EAAQ,MAAK,MACbG,EAAQ,QACL6B,GACUlC,EACb,OACIe,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACIL,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CAAChD,QAASN,EAAMnE,MAAM,KAAKH,MAAOA,KAAWgC,KACrD,EAIX,GAAeN,EAAAA,EAAAA,MAAKiG,E,kGCZb,MAAME,GAAiBnI,EAAAA,EAAAA,GAAOoI,EAAAA,EAAPpI,CAAgBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FACjCC,IAAA,IAAC,MAACE,GAAMF,EAAA,OAAGE,CAAK,IACd+H,IAAA,IAAC,QAACxH,GAAQwH,EAAA,OAAGxH,CAAO,IACrByH,IAAA,IAAC,OAACjI,GAAOiI,EAAA,OAAGjI,CAAM,IAClBkI,IAAA,IAAC,OAAC3H,GAAO2H,EAAA,OAAG3H,CAAM,IAC3B4H,IAAA,IAAC,SAACC,GAASD,EAAA,OAAGC,GAAQ,qBAAAvE,OAAyBwE,EAAAA,EAAcC,OAAM,IAAG,I,aCL3E,MAAMC,EAAWxI,IAWK,IAXJ,MAChBK,EAAQ,GAAE,MACVC,EAAK,SACLF,EAAQ,KACRG,EAAI,MACJL,EAAK,OACLD,EAAM,SACNW,EAAQ,SACRyH,EAAQ,QACR5H,EAAO,OACPD,EAAS,QACKR,EACd,MAAM,EAAEyI,IAAMC,EAAAA,EAAAA,MACRlH,GAAekB,EAAAA,EAAAA,cAClBiG,KAC8B,IAAzBA,EAAMC,OAAOC,QACfzI,EAAS,CAAEG,KAAMA,EAAMD,MAAO,OACI,IAAzBqI,EAAMC,OAAOC,SACtBzI,EAAS,CAAEG,KAAMA,EAAMD,MAAO,KAChC,GAEF,CAACC,EAAMH,IAGHyI,EAAoB,MAAVvI,EAEhB,OACES,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACEL,EAAAA,EAAAA,KAACgH,EAAc,CACf3H,SAAUoB,EACVqH,QAASA,EACT3I,MAAOA,EACPD,OAAQA,EACRW,SAAUA,EACVH,QAASA,EACTD,OAAQA,EACR6H,SAAUA,EAASjH,SAEhBqH,EAAEpI,MAEJ,EAIP,GAAeuB,EAAAA,EAAAA,MAAK4G,E,gFC/Cb,MAAMM,EAAyBlJ,EAAAA,EAAOmJ,IAAGjJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iGAEpCC,IAAA,IAAC,OAAEQ,GAAQR,EAAA,OAAKQ,CAAM,IACrByH,IAAA,IAAC,QAACxH,GAAQwH,EAAA,OAAGxH,GAAoB,OAAO,IACzCyH,IAAA,IAAC,OAAEjI,GAAQiI,EAAA,OAAKjI,CAAM,IACvBkI,IAAA,IAAC,MAAEjI,GAAOiI,EAAA,OAAKjI,CAAK,IAGlB8I,EAAqBpJ,EAAAA,EAAOS,MAAK4I,IAAAA,GAAAlJ,EAAAA,EAAAA,GAAA,mLAErCqI,IAAA,IAAC,IAACjH,GAAIiH,EAAA,OAAGjH,GAAY,KAAK,IAO/B+H,IAAA,IAAC,WAAEjI,GAAYiI,EAAA,OACfjI,GAAU,qHAOX,I,aCtBH,MAAMD,EAAgBhB,IAWK,IAXJ,WACnBiB,EAAU,KACVV,EAAI,MACJF,EAAQ,GAAE,OACVJ,EAAM,MACNC,EAAQ,QAAO,QACfO,EAAO,OACPD,EAAM,SACNY,EAAQ,OACRT,EAAM,IACNQ,GACiBnB,EAEjB,MAAM,EAAEyI,IAAMC,EAAAA,EAAAA,MACd,OACI3H,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACIoF,EAAAA,EAAAA,MAACsC,EAAsB,CACvB5I,MAAOA,EACPD,OAAQA,EACRO,OAAQA,EACRC,QAASA,EACTE,OAAQA,EAAOS,SAAA,CAEVA,GACDL,EAAAA,EAAAA,KAACiI,EAAkB,CAAC7H,IAAKA,EAAKgI,QAAS5I,EAAMU,WAAYA,EAAWG,SAC/DqH,EAAEpI,SAGZ,EAIX,GAAeuB,EAAAA,EAAAA,MAAKZ,E,gDCnCpB,MAUA,EAVwBV,IACtB,MAAMgD,GAAMP,EAAAA,EAAAA,UAMZ,OAJAqG,EAAAA,EAAAA,YAAU,KACR9F,EAAIH,QAAU7C,CAAK,IAGdgD,EAAIH,OAAO,ECyEpB,EA3EuBnD,IAA6C,IAA5C,cAAEqJ,GAAoCrJ,EAC5D,MAAOsJ,EAAOC,IAAY7F,EAAAA,EAAAA,UAA+B2F,GAEnDG,GAAwBzG,EAAAA,EAAAA,SAAO,GAC/B0G,EAAYC,EAAYL,GAExBM,GAA0BjH,EAAAA,EAAAA,cAC9B,KAAOkH,OAAOC,GAAGC,KAAKC,UAAUN,GAAYK,KAAKC,UAAUV,KAC3D,CAACA,EAAeI,KAGlBL,EAAAA,EAAAA,YAAU,KACJO,KACFJ,EAAS,IAAKF,GAChB,GACC,CAACM,EAAyBN,IAE7B,MAAMW,GAAYtH,EAAAA,EAAAA,cAAY,KAC5B8G,EAAsBrG,SAAU,EAChCoG,GAAS,IAAMF,GAAc,GAE5B,CAACA,KAEJD,EAAAA,EAAAA,YACE,IACSY,GAGT,IAGF,MAAM5J,GAAWsC,EAAAA,EAAAA,cACduH,IACC,MAAM,KAAE1J,EAAI,MAAED,GAAU2J,EACxBV,EAAS,IAAKD,EAAO,CAAC/I,GAAOD,GAAQ,GAEvC,CAACgJ,IAGGY,GAAmBxH,EAAAA,EAAAA,cAAayH,IACpCZ,EAAS,IACJD,KACAa,GACH,GACF,CAACb,IAEGc,GAA8B1H,EAAAA,EAAAA,cACjCuH,IACCV,EAAS,IACJD,EACH,CAACW,EAAU1J,MAAO0J,EAAU3J,MAC5B,CAAC2J,EAAUhI,iBAAkBgI,EAAU5J,OACvC,GAEJ,CAACiJ,IAGGe,GAAoB3H,EAAAA,EAAAA,cACxBuF,IAA2B,IAA1B,KAAE1H,EAAI,MAAED,GAAY2H,EACnBsB,EAAS,IAAKD,EAAO,CAAC/I,GAAO,IAAI+I,EAAM/I,GAAOD,IAAS,GAEzD,CAACgJ,IAGH,MAAO,CACLA,QACAlJ,WACA4J,YACAM,gBAAiBf,EACjBa,8BACAC,oBACAH,mBACD,C,6EC9DH,MA+EA,EA/EoBlK,IAOK,IAPJ,KACnBsC,EAAO,GAAE,gBACTiI,GAAkB,EAAK,wBACvB/C,EAAuB,aACvBgD,EAAY,UACZC,EAAS,OACThD,EAAS,QACQzH,EACjB,MAAM0K,GAAQC,EAAAA,EAAAA,KAERC,EAAG,iCAAA9G,OAAoC+G,EAAAA,EAAOvI,KAC7CwI,EAASC,IAAcrH,EAAAA,EAAAA,aACxB,cAAEsH,IAAkBC,EAAAA,EAAAA,KACpBC,GAAWxI,EAAAA,EAAAA,cACfO,UACE,GAAI+H,GAAiBT,EAAiB,CACpC,MAAMY,EAAW,CACf1D,OAAQA,EACR2D,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAADxH,OAAYkH,IAE3BO,KAAMzB,KAAKC,UAAUyB,IAEvB,IACE,MAAMC,QAAsBC,MAAMd,EAAKO,GACjChJ,QAAasJ,EAAcE,OA0BjC,MAzBsB,YAAlBxJ,EAAKyJ,UACPlB,EAAM,CACJmB,SAAU,YACVC,MAAO,UACPC,YAAY,GAADjI,OAAK3B,EAAKyJ,UACrBI,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEV1B,GAAcA,MAElBE,EAAM,CACJmB,SAAU,YACVC,MAAO,QACPC,YAAY,GAADjI,OAAK3B,EAAKmC,SACrB0H,OAAQ,QACRC,SAAU,IACVC,YAAY,IAEVzB,GAAWA,KAEjBM,EAAW5I,GACPqF,GACFA,IAEKrF,CACT,CAAE,MAAOgI,GAAI,CACf,IAEF,CACE3C,EACAwD,EACAvD,EACA8C,EACAE,EACAD,EACAE,EACAE,IAWJ,MAAO,CAAEE,UAASzD,QAPH3E,EAAAA,EAAAA,cACZ0E,IACC8D,EAAS9D,EAAI,GAEf,CAAC8D,IAGuB,C,wFC1FrB,MAAMiB,EAAcvM,EAAAA,EAAOwM,MAAKtM,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6PAQhCC,IAAA,IAAC,SAAEqI,GAAUrI,EAAA,OAChBqI,GAAQ,sBAAAvE,OAA0BwE,EAAAA,EAAcD,SAAU,I,aCP9D,MAAMgE,EAAYrM,IAeK,IAfJ,SACfY,EAAQ,MACRN,EAAK,KACLC,EAAI,MACJF,EAAQ,GAAE,SACVD,EAAQ,OACRH,EAAM,MACNC,EAAQ,QAAO,KACfoM,EAAO,OAAM,YACbC,EAAW,QACX9L,EAAO,OACPD,EAAM,UACNgM,EAAS,SACTnE,KACGnG,GACUlC,EAEb,MAAMwB,GAAekB,EAAAA,EAAAA,cAAaiG,IAC9BvI,EAAS,CAAEG,KAAMA,EAAMD,MAAOqI,EAAMC,OAAOtI,OAAQ,GACpD,CAACC,EAAMH,IAEV,OACIW,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACIL,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACVX,MAAOA,EACPY,WAAYX,GAASA,EAAMY,WAC3BV,OAAQA,EACRC,QAASA,EACTR,OAAQA,EACRC,MAAOA,EAAMkB,UAEbL,EAAAA,EAAAA,KAACoL,EAAW,CACRxK,YAAa4K,EACb3L,SAAUA,EACVyH,SAAUA,EACVjI,SAAUoB,EACVtB,MAAM,OACNsM,UAAWA,EACXlM,MAAOA,EACPgM,KAAMA,KACFpK,OAGb,EAIX,GAAeN,EAAAA,EAAAA,MAAKyK,E,8FClDb,MAAMI,EAAiB7M,EAAAA,EAAOmJ,IAAGjJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iNAa3B8E,EAAejF,EAAAA,EAAOmJ,IAAGE,IAAAA,GAAAlJ,EAAAA,EAAAA,GAAA,8hBAKzBC,IAAA,IAAC,MAAEE,GAAOF,EAAA,OAAKE,CAAK,IACnB+H,IAAA,IAAC,OAAEhI,GAAQgI,EAAA,OAAKhI,CAAM,IAKzBiI,IAAA,IAAC,MAAEhI,GAAOgI,EAAA,OAAKhI,CAAK,IACnBiI,IAAA,IAAC,OAAElI,GAAQkI,EAAA,OAAKlI,CAAM,IAcrByM,EAAc9M,EAAAA,EAAOmJ,IAAG4D,IAAAA,GAAA5M,EAAAA,EAAAA,GAAA,gJAQxB6M,EAAYhN,EAAAA,EAAOmJ,IAAG8D,IAAAA,GAAA9M,EAAAA,EAAAA,GAAA,sEAMtB+M,EAAclN,EAAAA,EAAOmJ,IAAGgE,IAAAA,GAAAhN,EAAAA,EAAAA,GAAA,qc,aCpCrC,MAAMiE,EAAQhE,IAcR,IAbF,SACIoB,EAAQ,QACRoC,GAAU,EAAK,MACfnD,EAAK,QACL4D,EAAO,KACPO,EAAI,YACJC,EAAc,OAAM,MACpBvE,EAAQ,MAAK,OACbD,EAAS,OAAM,eACfyG,GAAiB,EAAK,gBACtBD,GAAkB,EAAK,SACvBvC,GAAW,GACHlE,EAGZ,OACIe,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,SACKoC,IACGzC,EAAAA,EAAAA,KAAC0L,EAAc,CAAC9L,QAAS6C,EAAQpC,UAC7BoF,EAAAA,EAAAA,MAAC3B,EAAY,CAAC3E,MAAOA,EAAOD,OAAQA,EAAOmB,SAAA,EACvCoF,EAAAA,EAAAA,MAACkG,EAAW,CAAAtL,SAAA,EACRL,EAAAA,EAAAA,KAACiM,EAAAA,EAAS,CAAA5L,SAAEf,KACZU,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CAACzH,MAAM,OAAUH,MAAM,KAAK+M,WAAW,OAAOzM,OAAO,IAAIC,QAAQ,IAAI,eAAa,QAAQqE,QAASb,EAASiJ,WAAW,aAGlInM,EAAAA,EAAAA,KAAC6L,EAAS,CAAAxL,SACDA,KAGP8C,IACEsC,EAAAA,EAAAA,MAACsG,EAAW,CAACnM,OAAQuD,EAAS9C,SAAA,EACxBsF,IAAkB3F,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CAAChD,QAASN,EAAMnE,MAAOoE,EAAa9D,OAAQ+F,EAAgBxG,MAAM,MAAMM,OAAO,OACxGiG,IAAmB1F,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,CAAChD,QAASb,EAAS5D,MAAM,MAAMM,OAAQ8F,EAAiBvG,MAAM,MAAM+M,WAAW,MAAMzM,OAAO,eAM7I,EAIX,GAAeoB,EAAAA,EAAAA,MAAKoC,E,2ICpDpB,MAAMmJ,EAAYnN,IAII,IAJH,QACfiE,EAAO,YACPqB,EAAW,aACXqB,GACY3G,EACZ,MAAM,MACFsJ,EAAK,SACLlJ,IAEEgN,EAAAA,EAAAA,GAAe,CACb/D,cAAe,IACR/D,MAGT,mBAAEF,IAAuBC,EAAAA,EAAAA,GAAwB,CAAEvD,IAAK,4BAA6BM,SAAUuE,IAE/F0G,GAAa3K,EAAAA,EAAAA,cAAY,KAC3B0C,EAAmBkE,GACnBrF,GAAS,GACV,CAACmB,EAAoBkE,EAAOrF,IAG/B,OACIuC,EAAAA,EAAAA,MAAC8G,EAAAA,EAAI,CAAC9M,OAAQ,EAAGC,QAAS,EAAG8M,IAAK,EAAGC,UAAU,SAAStN,MAAM,OAAMkB,SAAA,EACpEoF,EAAAA,EAAAA,MAAC8G,EAAAA,EAAI,CAACpN,MAAM,OAAMkB,SAAA,EACdL,EAAAA,EAAAA,KAACsL,EAAAA,EAAS,CACN9L,KAAK,YACLF,MAAM,YACND,SAAUA,EACVE,MAAOgJ,EAAMmE,UACbvN,MAAM,SAEVa,EAAAA,EAAAA,KAACsL,EAAAA,EAAS,CACN9L,KAAK,YACLF,MAAM,YACND,SAAUA,EACVE,MAAOgJ,EAAMoE,UACbxN,MAAM,YAGNsG,EAAAA,EAAAA,MAAC8G,EAAAA,EAAI,CAACpN,MAAM,OAAMkB,SAAA,EAClBL,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CACVC,IAAI,yBACJvB,KAAK,iBACLF,MAAM,cACND,SAAUA,EACVE,MAAOgJ,EAAMqE,eACbzN,MAAM,MACNqC,iBAAe,KAEvBxB,EAAAA,EAAAA,KAACyH,EAAAA,EAAQ,CACLjI,KAAK,gBACLF,MAAM,gBACND,SAAUA,EACVE,MAAOgJ,EAAMsE,iBAEjB7M,EAAAA,EAAAA,KAACyH,EAAAA,EAAQ,CACLjI,KAAK,eACLF,MAAM,eACND,SAAUA,EACVE,MAAOgJ,EAAMuE,mBAGjB9M,EAAAA,EAAAA,KAAC8G,EAAAA,EAAU,CACP/C,QAASuI,MAGV,EAIf,GAAezL,EAAAA,EAAAA,MAAKuL,G,cCjFb,MAAMvI,EAAU,CACrB,CACEkH,MAAO,KACPgC,UAAW,YACX5N,MAAO,OAET,CACE4L,MAAO,QACPgC,UAAW,YACX5N,MAAO,OAET,CACE4L,MAAO,UACPgC,UAAW,gBACX5N,MAAO,MAET,CACE4L,MAAO,UACPgC,UAAW,eACX5N,MAAO,MAET,CACE4L,MAAO,SACPgC,UAAW,mBACX5N,MAAO,OAET,CACE4L,MAAO,SACPgC,UAAW,aACX5N,MAAO,OAET,CACE4L,MAAO,UACPgC,UAAW,aACX5N,MAAO,QC7BL6N,EAAWA,KAEThN,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAAxB,UACIL,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACT5C,IAAK,6BACL6C,QAAS,4BACTC,QAASA,EACToJ,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,UAAQ,EACRC,OAAQ,UACRxJ,aAAcsI,EACd5K,iBAAe,EACftC,OAAO,YAMvB,GAAe2B,EAAAA,EAAAA,MAAKmM,E","sources":["../common/Select/src/styled.ts","../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/pdf-viewer/src/hooks/usePdfViewerControl.ts","../common/pdf-viewer/src/index.tsx","../common/confirmation-modal/src/index.tsx","../common/TableView/src/ApiTable.tsx","../common/TableView/src/hooks/useTableControlsButtons.ts","../common/button/src/saveButton.tsx","../common/check-box/src/styled.ts","../common/check-box/src/CheckBox.tsx","../common/floating-label/src/styled.ts","../common/floating-label/src/index.tsx","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/hooks/src/useMutation.ts","../common/input-text/src/styled.ts","../common/input-text/src/inputText.tsx","../common/modal/src/style.ts","../common/modal/src/index.tsx","../pages/page-name-page/src/Partials/ModalView.tsx","../pages/page-name-page/src/constants.ts","../pages/page-name-page/src/component.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Select, SelectProps } from \"antd\";\r\n\r\nexport const StyledSelect = styled(Select)<SelectProps>`\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  margin: 0;\r\n  background-color: white;\r\n  transition: border-color 0.3s;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n","import React, { memo } from \"react\";\r\nimport FloatingLabel from \"@commons/floating-label\"\r\nimport { StyledSelect } from \"./styled\"\r\nimport { selectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    height = \"65px\",\r\n    width = \"200px\",\r\n    options,\r\n    onChange,\r\n    label,\r\n    value,\r\n    name,\r\n    margin,\r\n    padding,\r\n    onSearch,\r\n    hidden,\r\n    disabled,\r\n    loading,\r\n    mode\r\n}: selectProps) => {\r\n\r\n    const handleChange = (value: unknown | number, option : any) => {\r\n        onChange({name, value, option})\r\n    }\r\n\r\n    return (\r\n        <FloatingLabel\r\n        label={label}\r\n        hasContent={value && value.toString()}\r\n        margin={margin}\r\n        padding={padding}\r\n        height={height}\r\n        width={width}\r\n        hidden={hidden}\r\n        top=\"7px\"\r\n        >\r\n\r\n        <StyledSelect\r\n        options={options}\r\n        bordered={false}\r\n        allowClear\r\n        showSearch\r\n        onSearch={onSearch}\r\n        onChange={handleChange}\r\n        filterOption={false}\r\n        loading={loading}\r\n        disabled={loading || disabled}\r\n        mode={mode}\r\n        placeholder=\"\"\r\n        />\r\n        </FloatingLabel>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo, useCallback } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    api,\r\n    onChange,\r\n    label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    selectLabelName = \"label_select\",\r\n    ...props\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data, runFetch, loading } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params,\r\n        checkForParams: true\r\n    })\r\n\r\n    const handleSearch = useCallback((search_word: string|number|unknown)=>{\r\n        // runFetch({\r\n        //     search_word\r\n        // })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                options={data}\r\n                onChange={onChange}\r\n                label={label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n                onSearch={handleSearch}\r\n                loading={loading}\r\n                {...props}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import { useRef, useCallback } from \"react\";\r\n\r\nconst usePdfViewerControl = ()=>{\r\n\r\n    const PDFRef = useRef()\r\n\r\n    const handleOpenModal = useCallback(async () =>\r\n    //@ts-ignore\r\n    await PDFRef.current?.handleOpen(),\r\n  [PDFRef])\r\n\r\n    return {\r\n        PDFRef,\r\n        handleOpenModal\r\n    }\r\n}\r\n\r\nexport default usePdfViewerControl","import React, {memo, useImperativeHandle, forwardRef, useState, useCallback} from \"react\";\r\nimport Modal from \"@commons/modal\";\r\n\r\n//TODO: implement pdf viewer type\r\nconst PdfViewer = ({\r\n        reportName,\r\n        params\r\n    }:any,\r\n    ref: any\r\n    ) => {\r\n\r\n        const [visible, setVisible] = useState(false);\r\n        \r\n        const handleOpen = useCallback(()=>{\r\n            setVisible(true);\r\n        },[])\r\n\r\n        const handleClose = useCallback(()=>{\r\n            setVisible(false);\r\n        },[])\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            handleOpen,\r\n            // setTableData: setData,\r\n            // resetTableData: resetData,\r\n            // getCurrentDataSource: data\r\n        }));\r\n\r\n        const computedUrl =`http://144.24.209.19:9090/system_pdf_generate/${reportName}?${new URLSearchParams(params)}`\r\n\r\n    return(\r\n        <Modal\r\n            label=\"PDF Viewer\"\r\n            visible={visible}\r\n            onClose={handleClose}\r\n            noFooter\r\n            width=\"90%\"\r\n            height=\"80%\"\r\n        >\r\n            <object data={computedUrl} width=\"100%\" height=\"100%\">\r\n          {`Your browser does not support pdf files.`}\r\n        </object>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(forwardRef(PdfViewer))\r\nexport * from \"./interface\"\r\nexport {default as usePdfViewerControl} from \"./hooks/usePdfViewerControl\";\r\n","import React, { memo, useCallback } from \"react\";\r\nimport Modal from \"@commons/modal\";\r\nimport {confirmationModal} from \"./interface\"\r\n\r\nconst ConfirmationModal = ({visible, onClose, onConfirm, message}:confirmationModal) => {\r\n\r\n    const handleConfirmation = useCallback(() => {\r\n        onConfirm()\r\n        onClose()\r\n    },[onClose, onConfirm])\r\n\r\n    return (\r\n        <Modal \r\n            label=\"cnfrmtn\"\r\n            visible={visible}\r\n            onClose={onClose}\r\n            width=\"25%\"\r\n            onOK={handleConfirmation}\r\n            submitTitle=\"cnfrm\"\r\n        >\r\n            {message ? message : \"Are you want to continue ?\"}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(ConfirmationModal)\r\nexport * from \"./interface\"","import React,\r\n{\r\n    memo,\r\n    useState,\r\n    useCallback,\r\n    useImperativeHandle,\r\n    forwardRef,\r\n    useMemo\r\n} from \"react\";\r\nimport PdfViewer, { usePdfViewerControl } from \"@commons/pdf-viewer\";\r\nimport { useFetch, useEffectTimeOut } from \"@commons/hooks\"\r\nimport Modal from \"@commons/modal\";\r\nimport ConfirmationModal from \"@commons/confirmation-modal\"\r\nimport Table from \"./Table\";\r\nimport useTableControlsButtons from \"./hooks/useTableControlsButtons\";\r\nimport { TableWithApiProps } from \"./interface\"\r\n\r\n//TODO: change the ref type\r\n\r\nconst TableWithApi = ({\r\n    api,\r\n    postApi,\r\n    columns,\r\n    ModalContent,\r\n    onClick,\r\n    fetchOnFirstRun = false,\r\n    params,\r\n    checkForParams = false,\r\n    modalWidth = \"60%\",\r\n    printProps,\r\n    reportName,\r\n    ...tableProps\r\n}: TableWithApiProps,\r\n    ref: any\r\n) => {\r\n    const { data, runFetch, loading, setData, resetData } = useFetch({ link: api, fetchOnFirstRun: fetchOnFirstRun, params: params, checkForParams: checkForParams })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: postApi, runFetch: runFetch })\r\n    const { PDFRef, handleOpenModal } = usePdfViewerControl()\r\n    const [selectedRow, setSelectedRow] = useState({})\r\n    const [modal, setModal] = useState(false);\r\n    const [confirmModal, setConfirmModal] = useState(false);\r\n    const handleAdd = useCallback(() => {\r\n        setSelectedRow({ query_status: \"n\" })\r\n        setModal(true)\r\n    }, [setSelectedRow])\r\n    const handleEdit = useCallback(() => {\r\n        setSelectedRow({ ...selectedRow, query_status: \"u\" })\r\n        setModal(true)\r\n    }, [selectedRow, setSelectedRow])\r\n    const handleDelete = () => {\r\n        onSaveAndInsertion({ ...selectedRow, query_status: \"d\" })\r\n    }\r\n\r\n    const handleCloseModal = useCallback(() => {\r\n        setModal(false)\r\n    }, [])\r\n\r\n    const handleCloseConfirmModal = useCallback(() => { setConfirmModal(false) }, [])\r\n    const handleOpenConfirmModal = useCallback(() => { setConfirmModal(true) }, [])\r\n\r\n    const handleSelectedRow = (row: any) => {\r\n        setSelectedRow(row)\r\n        if (onClick) onClick(row)\r\n    };\r\n\r\n    const foundDataSource = useMemo(\r\n        () => data?.data,\r\n        [data?.data]\r\n    );\r\n\r\n    const handlePrint = useCallback(() => {\r\n        selectedRow && handleOpenModal()\r\n    }, [handleOpenModal, selectedRow])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        runFetch,\r\n        setTableData: setData,\r\n        resetTableData: resetData,\r\n        getCurrentDataSource: () => foundDataSource,\r\n    }));\r\n\r\n    // useEffectTimeOut(runFetch, 30000)\r\n\r\n    return (\r\n        <>\r\n            {ModalContent && <Modal\r\n                visible={modal}\r\n                onClose={handleCloseModal}\r\n                hideCloseButton\r\n                hideSaveButton\r\n                label=\"dtls\"\r\n                noFooter\r\n                width={modalWidth}\r\n            >\r\n                <ModalContent\r\n                    onClose={handleCloseModal}\r\n                    selectedRow={selectedRow}\r\n                    refreshTable={runFetch}\r\n                />\r\n            </Modal>\r\n            }\r\n            <ConfirmationModal\r\n                visible={confirmModal}\r\n                onConfirm={handleDelete}\r\n                onClose={handleCloseConfirmModal}\r\n            />\r\n            <PdfViewer\r\n                ref={PDFRef}\r\n                reportName={reportName}\r\n                params={printProps}\r\n            />\r\n            <Table\r\n                dataSource={data?.data}\r\n                columns={columns}\r\n                onAdd={handleAdd}\r\n                onEdit={handleEdit}\r\n                onPrint={handlePrint}\r\n                onDelete={handleOpenConfirmModal}\r\n                onSelectedRow={handleSelectedRow}\r\n                loading={loading}\r\n                {...tableProps}\r\n            >\r\n            </Table>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default memo(forwardRef(TableWithApi))","import { useCallback } from \"react\";\r\nimport { useMutation } from \"@commons/hooks\";\r\n\r\nconst useTableControlsButtons = ({ api = \"\", runFetch }: any) => {\r\n  const { setRow: newRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"POST\",\r\n  });\r\n  const { setRow: updateRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"PUT\",\r\n  });\r\n  const { setRow: deleteRecord } = useMutation({\r\n    link: api,\r\n    additionalFunctionToRun: runFetch,\r\n    method: \"Delete\",\r\n  });\r\n\r\n  const onSaveAndInsertion = useCallback(\r\n    (record: any) => {\r\n      if (record.query_status === \"n\") {\r\n        newRecord(record);\r\n      } else if (record.query_status === \"u\") {\r\n        updateRecord(record);\r\n      } else if (record.query_status === \"d\") {\r\n        deleteRecord(record);\r\n      }\r\n    },\r\n    [newRecord, updateRecord, deleteRecord]\r\n  );\r\n\r\n  return { onSaveAndInsertion };\r\n};\r\n\r\nexport default useTableControlsButtons;\r\n","import React, { memo } from \"react\";\r\nimport Button from \"./button\"\r\nimport { saveButtonProp } from \"./interface\"\r\n\r\nconst SaveButton = ({\r\n    onOK,\r\n    width = \"40%\",\r\n    label = \"sv\",\r\n    ...props\r\n}: saveButtonProp) => {\r\n    return (\r\n        <>\r\n            <Button onClick={onOK} label=\"sv\" width={width} {...props} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SaveButton)","import styled from \"@emotion/styled\";\r\nimport { Checkbox } from 'antd';\r\nimport {primaryColors} from \"@commons/global\"\r\nimport { CheckBoxProps } from \"./interface\";\r\n\r\nexport const StyledCheckBox = styled(Checkbox)<CheckBoxProps>`\r\n    width: ${({width})=>width};\r\n    padding: ${({padding})=>padding};\r\n    height: ${({height})=>height};\r\n    margin: ${({margin})=>margin};\r\n   ${({required})=>required && `background-color: ${primaryColors.danger};`}\r\n`","import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyledCheckBox } from \"./styled\";\r\nimport { CheckBoxProps } from \"./interface\";\r\n\r\nconst CheckBox = ({\r\n  label = \"\",\r\n  value,\r\n  onChange,\r\n  name,\r\n  width,\r\n  height,\r\n  disabled,\r\n  required,\r\n  padding,\r\n  margin = \"10px\",\r\n}: CheckBoxProps) => {\r\n  const { t } = useTranslation();\r\n  const handleChange = useCallback(\r\n    (event: { target: { checked: boolean } }) => {\r\n      if (event.target.checked === true) {\r\n        onChange({ name: name, value: \"Y\" });\r\n      } else if (event.target.checked === false) {\r\n        onChange({ name: name, value: \"N\" });\r\n      }\r\n    },\r\n    [name, onChange]\r\n  );\r\n\r\n  const checked = value === \"Y\" ? true : false;\r\n\r\n  return (\r\n    <>\r\n      <StyledCheckBox \r\n      onChange={handleChange}\r\n      checked={checked}\r\n      width={width}\r\n      height={height}\r\n      disabled={disabled}\r\n      padding={padding}\r\n      margin={margin}\r\n      required={required}\r\n      >\r\n        {t(label)}\r\n    </StyledCheckBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(CheckBox);\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FloatingLabelContainer = styled.div<any>`\r\n  position: relative;\r\n  margin: ${({ margin }) => margin};\r\n  padding: ${({padding})=>padding ? padding : \"5px 0\"};\r\n  height: ${({ height }) => height};\r\n  width: ${({ width }) => width};\r\n`;\r\n\r\nexport const FloatingLabelLabel = styled.label<any>`\r\n  position: absolute;\r\n  top: ${({top})=>top ? top : \"5px\"};\r\n  left: 10px;\r\n  color: #999;\r\n  padding: 0;\r\n  margin: 0;\r\n  transition: top 0.3s, font-size 0.3s, background-color 0.5s;\r\n\r\n  ${({ hasContent }) =>\r\n    hasContent &&\r\n    `\r\n    top: -5px;\r\n    font-size: 12px;\r\n    color: #007bff;\r\n    font-size: 14px;\r\n    background-color: white;\r\n  `}\r\n`;\r\n","import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FloatingLabelContainer, FloatingLabelLabel } from \"./styled\"\r\nimport { floatingLabelProps } from \"./interface\";\r\n\r\nconst FloatingLabel = ({\r\n    hasContent,\r\n    name,\r\n    label = \"\",\r\n    height,\r\n    width = \"200px\",\r\n    padding,\r\n    margin,\r\n    children,\r\n    hidden,\r\n    top\r\n}: floatingLabelProps) => {\r\n\r\n    const { t } = useTranslation();\r\n    return (\r\n        <>\r\n            <FloatingLabelContainer\r\n            width={width}\r\n            height={height}\r\n            margin={margin}\r\n            padding={padding}\r\n            hidden={hidden}\r\n            >\r\n                {children}\r\n                <FloatingLabelLabel top={top} htmlFor={name} hasContent={hasContent}>\r\n                    {t(label)}\r\n                </FloatingLabelLabel>\r\n            </FloatingLabelContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(FloatingLabel)\r\nexport * from \"./interface\"","import { useRef, useEffect } from \"react\";\r\n\r\nconst usePrevious = <T>(value: T): T => {\r\n  const ref = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current as T;\r\n};\r\n\r\nexport default usePrevious;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport usePrevious from \"./usePrevious\";\r\n\r\ninterface useFormManagerProps {\r\n  initialValues?: any;\r\n}\r\n\r\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\r\n  const [state, setState] = useState<typeof initialValues>(initialValues);\r\n\r\n  const hasAnyFieldChangedRef = useRef(false);\r\n  const preValues = usePrevious(initialValues);\r\n\r\n  const areInitialValuesChanged = useCallback(\r\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\r\n    [initialValues, preValues]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (areInitialValuesChanged()) {\r\n      setState({ ...initialValues });\r\n    }\r\n  }, [areInitialValuesChanged, initialValues]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    hasAnyFieldChangedRef.current = false;\r\n    setState(() => initialValues);\r\n    // @ts-ignore\r\n  }, [initialValues]);\r\n\r\n  useEffect(\r\n    () => {\r\n      return resetForm;\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const onChange = useCallback(\r\n    (eventData: any) => {\r\n      const { name, value } = eventData;\r\n      setState({ ...state, [name]: value });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleMultiInput = useCallback((e:any)=>{\r\n    setState({\r\n      ...state,\r\n      ...e\r\n    })\r\n  },[state])\r\n\r\n  const handleSelectWithLabelChange = useCallback(\r\n    (eventData: any) => {\r\n      setState({\r\n        ...state,\r\n        [eventData.name]: eventData.value,\r\n        [eventData.selectLabelName]: eventData.label,\r\n      });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleArrayChange = useCallback(\r\n    ({ name, value }: any) => {\r\n      setState({ ...state, [name]: [...state[name], value] });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return {\r\n    state,\r\n    onChange,\r\n    resetForm,\r\n    handleRootState: setState,\r\n    handleSelectWithLabelChange,\r\n    handleArrayChange,\r\n    handleMultiInput\r\n  };\r\n};\r\n\r\nexport default useFormManager;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"@commons/hooks\";\r\nimport { API_ID } from \"@commons/global\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\ninterface useMutationProps {\r\n  link: string;\r\n  noAuthorization?: boolean;\r\n  additionalFunctionToRun?: () => void;\r\n  runOnSuccess?: () => void;\r\n  runOnFail?: () => void;\r\n  method?: string;\r\n}\r\ninterface successType {\r\n  response: string;\r\n}\r\n\r\nconst useMutation = ({\r\n  link = \"\",\r\n  noAuthorization = false,\r\n  additionalFunctionToRun,\r\n  runOnSuccess,\r\n  runOnFail,\r\n  method = \"POST\",\r\n}: useMutationProps) => {\r\n  const toast = useToast();\r\n  //@ts-ignore\r\n  const url = `http://144.24.209.19:9090/api/${API_ID[link]}`;\r\n  const [success, setSuccess] = useState<successType>();\r\n  const { authorization } = useLocalStorage();\r\n  const postData = useCallback(\r\n    async (dataToPost: any) => {\r\n      if (authorization || noAuthorization) {\r\n        const settings = {\r\n          method: method,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authorization}`,\r\n          },\r\n          body: JSON.stringify(dataToPost),\r\n        };\r\n        try {\r\n          const fetchResponse = await fetch(url, settings);\r\n          const data = await fetchResponse.json();\r\n          if (data.response === \"success\") {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Success\",\r\n              description: `${data.response}`,\r\n              status: \"success\",\r\n              duration: 5000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnSuccess) runOnSuccess();\r\n          } else {\r\n            toast({\r\n              position: \"top-right\",\r\n              title: \"Error\",\r\n              description: `${data.message}`,\r\n              status: \"error\",\r\n              duration: 9000,\r\n              isClosable: true,\r\n            });\r\n            if (runOnFail) runOnFail();\r\n          }\r\n          setSuccess(data);\r\n          if (additionalFunctionToRun) {\r\n            additionalFunctionToRun();\r\n          }\r\n          return data;\r\n        } catch (e) {}\r\n      }\r\n    },\r\n    [\r\n      additionalFunctionToRun,\r\n      authorization,\r\n      method,\r\n      noAuthorization,\r\n      runOnFail,\r\n      runOnSuccess,\r\n      toast,\r\n      url,\r\n    ]\r\n  );\r\n\r\n  const setRow = useCallback(\r\n    (row: any) => {\r\n      postData(row);\r\n    },\r\n    [postData]\r\n  );\r\n\r\n  return { success, setRow };\r\n};\r\n\r\nexport default useMutation;\r\n","import styled from \"@emotion/styled\";\r\nimport { primaryColors } from \"@commons/global\";\r\n\r\nexport const StyledInput = styled.input<any>`\r\n  width: 100%;\r\n  padding: 5px 7px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n\r\n  transition: border-color 0.3s;\r\n  box-sizing: border-box;\r\n  /* ${({ required }) =>\r\n    required && `background-color:  ${primaryColors.required}`}; */\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n","import React, { memo, useCallback } from \"react\";\r\nimport FloatingLabel from \"@commons/floating-label\"\r\nimport { StyledInput } from \"./styled\"\r\nimport { InputTextProps } from \"./interface\";\r\n\r\nconst InputText = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    label = \"\",\r\n    onChange,\r\n    height,\r\n    width = \"200px\",\r\n    type = \"text\",\r\n    placeHolder,\r\n    padding,\r\n    margin,\r\n    className,\r\n    required,\r\n    ...props\r\n}: InputTextProps) => {\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange]);\r\n\r\n    return (\r\n        <>\r\n            <FloatingLabel\r\n                label={label}\r\n                hasContent={value && value.toString()}\r\n                margin={margin}\r\n                padding={padding}\r\n                height={height}\r\n                width={width}\r\n            >\r\n                <StyledInput\r\n                    placeholder={placeHolder}\r\n                    disabled={disabled}\r\n                    required={required}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    className={className}\r\n                    value={value}\r\n                    type={type}\r\n                    {...props}\r\n                />\r\n            </FloatingLabel>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InputText)","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`;\r\n\r\nexport const ModalContent = styled.div<{ width: string; height?: string }>`\r\n  /* position: relative;\r\n    margin: 5% auto;\r\n    padding: 20px;\r\n    border: 1px solid #888;\r\n    width: ${({ width }) => width};\r\n    height: ${({ height }) => height};\r\n    background-color: white;\r\n    border-radius: 15px; */\r\n  /* max-height: 90vh;\r\n\tmax-width: 500px; */\r\n  width: ${({ width }) => width};\r\n  height: ${({ height }) => height};\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #fff;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 15px 30px 0 rgba(#000, 0.25);\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  padding: 15px 32px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  margin: 10px 15px;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n  padding: 35px 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border-top: 1px solid #ddd;\r\n  gap: 12px;\r\n  position: relative;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: -51px;\r\n    left: 24px;\r\n    right: 24px;\r\n    height: 50px;\r\n    flex-shrink: 0;\r\n    background-image: linear-gradient(to top, rgba(#fff, 0.75), transparent);\r\n    pointer-events: none;\r\n  }\r\n`;\r\n","import React, { memo } from 'react';\r\nimport { Button } from \"@commons/button\";\r\nimport { BaseTitle } from \"@commons/page-title\"\r\nimport { ModalContainer, ModalContent, ModalHeader, ModalBody, ModalFooter } from \"./style\"\r\n\r\ninterface ModalProp {\r\n    visible?: boolean,\r\n    children?: any,\r\n    label: string,\r\n    onOK?: () => void,\r\n    onClose?: () => void,\r\n    submitTitle?: string,\r\n    width?: string;\r\n    hideSaveButton?: boolean;\r\n    hideCloseButton?: boolean;\r\n    height?: string;\r\n    noFooter?: boolean;\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        children,\r\n        visible = false,\r\n        label,\r\n        onClose,\r\n        onOK,\r\n        submitTitle = \"smbt\",\r\n        width = \"90%\",\r\n        height = \"auto\",\r\n        hideSaveButton = false,\r\n        hideCloseButton = false,\r\n        noFooter = false\r\n    }: ModalProp\r\n) => {\r\n\r\n    return (\r\n        <>\r\n            {visible &&\r\n                <ModalContainer hidden={!visible} >\r\n                    <ModalContent width={width} height={height}>\r\n                        <ModalHeader>\r\n                            <BaseTitle>{label}</BaseTitle>\r\n                            <Button label='&times;' width='5%' backGround='none' margin='0' padding='0' data-dismiss=\"modal\" onClick={onClose} fontWeight=\"19px\" />\r\n                        </ModalHeader>\r\n\r\n                        <ModalBody>\r\n                                {children}\r\n                        </ModalBody>\r\n\r\n                        {!noFooter &&\r\n                            <ModalFooter hidden={noFooter}>\r\n                                {!hideSaveButton && <Button onClick={onOK} label={submitTitle} hidden={hideSaveButton} width='20%' margin='0' />}\r\n                                {!hideCloseButton && <Button onClick={onClose} label='cls' hidden={hideCloseButton} width='20%' backGround='red' margin='0' />}\r\n                            </ModalFooter>\r\n                        }\r\n                    </ModalContent>\r\n                </ModalContainer>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Modal);","import React, { memo, useCallback } from 'react';\r\nimport { InputText } from \"@commons/input-text\";\r\nimport { useFormManager } from '@commons/hooks';\r\nimport { ModalViewProp } from \"@commons/global\"\r\nimport { useTableControlsButtons } from \"@commons/table\";\r\nimport { SaveButton } from \"@commons/button\";\r\nimport { CheckBox } from \"@commons/check-box\";\r\nimport { Flex } from '@chakra-ui/react';\r\nimport { SelectWithApi } from '@commons/select';\r\n\r\nconst ModalView = ({\r\n    onClose,\r\n    selectedRow,\r\n    refreshTable\r\n}: ModalViewProp) => {\r\n    const {\r\n        state,\r\n        onChange,\r\n    }\r\n        = useFormManager({\r\n            initialValues: {\r\n                ...selectedRow\r\n            }\r\n        })\r\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: \"POST_PAGE_NAME_MAIN_TABLE\", runFetch: refreshTable })\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSaveAndInsertion(state)\r\n        onClose()\r\n    }, [onSaveAndInsertion, state, onClose])\r\n\r\n\r\n    return (\r\n        <Flex margin={0} padding={0} gap={0} direction=\"column\" width=\"100%\"> \r\n        <Flex width=\"100%\">\r\n            <InputText\r\n                name=\"page_name\"\r\n                label='page_name'\r\n                onChange={onChange}\r\n                value={state.page_name}\r\n                width=\"47%\"\r\n            />\r\n            <InputText\r\n                name=\"page_link\"\r\n                label='page_link'\r\n                onChange={onChange}\r\n                value={state.page_link}\r\n                width=\"47%\"\r\n            />\r\n            </Flex>\r\n                <Flex width=\"100%\">\r\n                <SelectWithApi\r\n                    api='QUERY_PAGE_PARENT_LIST'\r\n                    name=\"page_parent_id\"\r\n                    label='parent_name'\r\n                    onChange={onChange}\r\n                    value={state.page_parent_id}\r\n                    width=\"47%\"\r\n                    fetchOnFirstRun\r\n                />\r\n            <CheckBox\r\n                name=\"page_disabled\"\r\n                label='page_disabled'\r\n                onChange={onChange}\r\n                value={state.page_disabled}\r\n            />\r\n            <CheckBox\r\n                name=\"run_in_modal\"\r\n                label='run_in_modal'\r\n                onChange={onChange}\r\n                value={state.run_in_modal}\r\n            />\r\n            </Flex>\r\n            <SaveButton\r\n                onClick={handleSave}\r\n            />\r\n\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default memo(ModalView)","export const columns = [\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"page_name\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"pglnk\",\r\n    dataIndex: \"page_link\",\r\n    width: \"17%\",\r\n  },\r\n  {\r\n    title: \"pgdsbld\",\r\n    dataIndex: \"page_disabled\",\r\n    width: \"7%\",\r\n  },\r\n  {\r\n    title: \"rninmdl\",\r\n    dataIndex: \"run_in_modal\",\r\n    width: \"7%\",\r\n  },\r\n  {\r\n    title: \"prntnm\",\r\n    dataIndex: \"page_parent_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"crtdat\",\r\n    dataIndex: \"created_at\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"updtdat\",\r\n    dataIndex: \"updated_at\",\r\n    width: \"15%\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constants\"\r\n\r\nconst PageName = () => {\r\n    return (\r\n        <>\r\n            <TableWithApi\r\n                api={\"QUERY_PAGE_NAME_MAIN_TABLE\"}\r\n                postApi={\"POST_PAGE_NAME_MAIN_TABLE\"}\r\n                columns={columns}\r\n                hideTools={false}\r\n                canEdit={true}\r\n                canAdd={true}\r\n                canDelete={true}\r\n                canExcel\r\n                rowKey={\"page_id\"}\r\n                ModalContent={ModalView}\r\n                fetchOnFirstRun\r\n                height=\"400px\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(PageName)"],"names":["StyledSelect","styled","Select","_templateObject","_taggedTemplateLiteral","_ref","height","width","options","onChange","label","value","name","margin","padding","onSearch","hidden","disabled","loading","mode","_jsx","FloatingLabel","hasContent","toString","top","children","bordered","allowClear","showSearch","handleChange","option","filterOption","placeholder","memo","SelectWithApi","api","withLabel","params","selectLabelName","props","data","runFetch","useFetch","link","fetchOnFirstRun","checkForParams","handleSearch","useCallback","search_word","_Fragment","usePdfViewerControl","PDFRef","useRef","handleOpenModal","async","_PDFRef$current","current","handleOpen","PdfViewer","ref","reportName","visible","setVisible","useState","handleClose","useImperativeHandle","computedUrl","concat","URLSearchParams","Modal","onClose","noFooter","forwardRef","ConfirmationModal","onConfirm","message","handleConfirmation","onOK","submitTitle","TableWithApi","postApi","columns","ModalContent","onClick","modalWidth","printProps","tableProps","setData","resetData","onSaveAndInsertion","useTableControlsButtons","selectedRow","setSelectedRow","modal","setModal","confirmModal","setConfirmModal","handleAdd","query_status","handleEdit","handleCloseModal","handleCloseConfirmModal","handleOpenConfirmModal","foundDataSource","useMemo","handlePrint","setTableData","resetTableData","getCurrentDataSource","_jsxs","hideCloseButton","hideSaveButton","refreshTable","handleDelete","Table","dataSource","onAdd","onEdit","onPrint","onDelete","onSelectedRow","row","setRow","newRecord","useMutation","additionalFunctionToRun","method","updateRecord","deleteRecord","record","SaveButton","Button","StyledCheckBox","Checkbox","_ref2","_ref3","_ref4","_ref5","required","primaryColors","danger","CheckBox","t","useTranslation","event","target","checked","FloatingLabelContainer","div","FloatingLabelLabel","_templateObject2","_ref6","htmlFor","useEffect","initialValues","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","Object","is","JSON","stringify","resetForm","eventData","handleMultiInput","e","handleSelectWithLabelChange","handleArrayChange","handleRootState","noAuthorization","runOnSuccess","runOnFail","toast","useToast","url","API_ID","success","setSuccess","authorization","useLocalStorage","postData","settings","headers","Accept","Authorization","body","dataToPost","fetchResponse","fetch","json","response","position","title","description","status","duration","isClosable","StyledInput","input","InputText","type","placeHolder","className","ModalContainer","ModalHeader","_templateObject3","ModalBody","_templateObject4","ModalFooter","_templateObject5","BaseTitle","backGround","fontWeight","ModalView","useFormManager","handleSave","Flex","gap","direction","page_name","page_link","page_parent_id","page_disabled","run_in_modal","dataIndex","PageName","hideTools","canEdit","canAdd","canDelete","canExcel","rowKey"],"sourceRoot":""}