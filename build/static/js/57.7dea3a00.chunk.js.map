{"version":3,"file":"static/js/57.7dea3a00.chunk.js","mappings":"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","sources":["../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/input-number/src/index.tsx","../node_modules/@chakra-ui/textarea/dist/chunk-OEQDSMWZ.mjs","../common/input-text/src/TextArea.tsx","../common/input-text/src/inputText.tsx","../common/radio-box/src/index.tsx","../pages/casher-receipt-voucher-page/src/constant.ts","../pages/casher-receipt-voucher-page/src/Partials/modalView.tsx","../pages/casher-receipt-voucher-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Select as ChakraSelect, FormLabel, Flex } from '@chakra-ui/react';\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    width = \"200px\",\r\n    Options = [{\r\n        label: \"\",\r\n        value: 0\r\n    }],\r\n    onChange,\r\n    Label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\",\r\n    selectLabelName = \"label_select\",\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.map((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, selectLabelName: selectLabelName, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <ChakraSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    {Array.isArray(Options) ? Options.map((Option) => {\r\n                        return (\r\n                            <option key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</option>\r\n                        )\r\n                    }) : <option disabled>{t(\"No data\")}</option>}\r\n                </ChakraSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    Api,\r\n    onChange,\r\n    Label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    fetchOnFirstRun = false,\r\n    selectLabelName = \"label_select\"\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: Api,\r\n        fetchOnFirstRun: fetchOnFirstRun,\r\n        params: params\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                Label={Label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import { useRef, useEffect } from \"react\";\n\nconst usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current as T;\n};\n\nexport default usePrevious;\n","import { useState, useCallback, useEffect, useRef } from \"react\";\nimport usePrevious from \"./usePrevious\";\n\ninterface useFormManagerProps {\n  initialValues?: any;\n  setSelectedRow?: any;\n  tableModal?: boolean;\n}\n\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\n  const [state, setState] = useState<typeof initialValues>(initialValues);\n\n  const hasAnyFieldChangedRef = useRef(false);\n  const preValues = usePrevious(initialValues);\n\n  const areInitialValuesChanged = useCallback(\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\n    [initialValues, preValues]\n  );\n\n  useEffect(() => {\n    if (areInitialValuesChanged()) {\n      setState({ ...initialValues });\n    }\n  }, [areInitialValuesChanged, initialValues]);\n\n  const resetForm = useCallback(() => {\n    hasAnyFieldChangedRef.current = false;\n    setState(() => initialValues);\n    // @ts-ignore\n  }, [initialValues]);\n\n  useEffect(\n    () => {\n      return resetForm;\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const onChange = useCallback(\n    (eventData: any) => {\n      const { name, value } = eventData;\n      setState({ ...state, [name]: value });\n    },\n    [state]\n  );\n\n  const handleRootState = useCallback((e: any) => {\n    setState(e);\n  }, []);\n\n  const handleSelectWithLabelChange = useCallback(\n    (eventData: any) => {\n      setState({\n        ...state,\n        [eventData.name]: eventData.value,\n        [eventData.selectLabelName]: eventData.label,\n      });\n    },\n    [state]\n  );\n\n  const handleArrayChange = useCallback(\n    ({ name, value }: any) => {\n      setState({ ...state, [name]: [...state[name], value] });\n    },\n    [state]\n  );\n\n  return {\n    state,\n    onChange,\n    resetForm,\n    handleRootState,\n    handleSelectWithLabelChange,\n    handleArrayChange,\n  };\n};\n\nexport default useFormManager;\n","import React, { memo, useCallback } from \"react\";\nimport {\n    NumberInput,\n    NumberInputField,\n    // NumberInputStepper,\n    // NumberIncrementStepper,\n    // NumberDecrementStepper,\n    Flex,\n    FormLabel\n} from '@chakra-ui/react';\nimport { useTranslation } from 'react-i18next';\nimport { inputNumberProp } from \"./interface\";\n\nconst InputNumber = ({\n    disabled,\n    value,\n    name = \"number\",\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    padding,\n    margin = \"10px\",\n    step = 1,\n    min = 0,\n    max\n}: inputNumberProp) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: number; }; }) => {\n        onChange({ name: name, value: +event.target.value })\n    }, [name, onChange])\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <NumberInput step={step} min={min} max={max} isDisabled={disabled} value={value | 0}>\n                    {\n                        //@ts-ignore\n                        <NumberInputField onChange={handleChange} />\n                    }\n                    {/* <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper> */}\n                </NumberInput>\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputNumber)","// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n","import React, { memo, useCallback } from \"react\";\nimport { Textarea, FormLabel, Flex } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\nimport { TextAreaProps } from \"./interface\";\n\nconst TextArea = ({\n    name,\n    Label = \"name\",\n    placeHolder,\n    width = \"30%\",\n    height = \"100px\",\n    padding,\n    margin = \"10px\",\n    onChange,\n    value,\n    disabled,\n}: TextAreaProps) => {\n    const { t } = useTranslation()\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n                height={height}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Textarea\n                    value={value}\n                    onChange={handleChange}\n                    placeholder={placeHolder}\n                    isDisabled={disabled}\n                    height=\"100%\"\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(TextArea);","import React, { memo, useCallback } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\nimport { InputTextProps } from \"./interface\";\n\nconst InputText = ({\n    disabled,\n    value,\n    name,\n    Label = \"\",\n    onChange,\n    width = \"200px\",\n    type = \"text\",\n    placeHolder,\n    padding,\n    margin = \"10px\",\n    className = \"\",\n    required = false\n}: InputTextProps) => {\n    const { t } = useTranslation()\n\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\n        onChange({ name: name, value: event.target.value })\n    }, [name, onChange])\n\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n            >\n                <FormLabel>{t(Label)}</FormLabel>\n                <Input\n                    placeholder={placeHolder}\n                    size='md'\n                    isDisabled={disabled}\n                    isRequired={required}\n                    onChange={handleChange}\n                    width=\"100%\"\n                    className={className}\n                    value={value}\n                    type={type}\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(InputText)","import React, { memo, useCallback } from \"react\";\nimport { useTranslation } from 'react-i18next'\nimport { Radio, RadioGroup, Stack, FormLabel, Flex } from '@chakra-ui/react'\nimport { radioBoxProps, option } from \"./interface\"\n\nconst RadioBox = ({\n    name,\n    options,\n    width,\n    onChange,\n    value,\n    Label,\n    margin = \"10px\",\n    padding,\n    hidden = false\n}: radioBoxProps) => {\n    const { t } = useTranslation()\n    const handleChange = useCallback((value: string | number) => {\n        onChange({ name: name, value: value })\n    }, [name, onChange])\n    return (\n        <>\n            <Flex\n                direction=\"column\"\n                width={width}\n                padding={padding}\n                margin={margin}\n                wrap=\"wrap\"\n                hidden={hidden}\n            >\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\n                <Flex\n                    className=\"css-1xsh6d8\"\n                    width=\"100%\"\n                >\n                    <RadioGroup\n                        padding=\"7px\"\n                        onChange={handleChange}\n                        value={value}\n                        width=\"100%\"\n                        display=\"flex\"\n                        gap=\"15px\"\n                        flexWrap=\"wrap\"\n                    >\n                        {options.map((option: option) => {\n                            return (\n                                <Stack direction='row'>\n                                    <Radio value={option.value} >{t(option.label)}</Radio>\n                                </Stack>\n                            )\n                        })}\n                    </RadioGroup>\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(RadioBox)","export const columns = [\n  {\n    title: \"dt\",\n    dataIndex: \"voucher_date\",\n    width: \"10%\",\n  },\n  {\n    title: \"amnt\",\n    dataIndex: \"voucher_amount\",\n    width: \"10%\",\n  },\n  {\n    title: \"vchrnm\",\n    dataIndex: \"voucher_id\",\n    width: \"10%\",\n  },\n  {\n    title: \"vchrnm\",\n    dataIndex: \"voucher_name\",\n    width: \"10%\",\n  },\n  {\n    title: \"nts\",\n    dataIndex: \"notes\",\n    width: \"10%\",\n  },\n];\n\nexport const voucherOptions = [\n  {\n    label: \"splr\",\n    value: \"S\",\n  },\n  {\n    label: \"cstmr\",\n    value: \"C\",\n  },\n  {\n    label: \"othr\",\n    value: \"O\",\n  },\n];\n","import React, { memo, useCallback } from \"react\";\nimport { useTableControlsButtons } from \"@commons/table\";\nimport { ModalViewProp } from \"@commons/global\";\nimport RadioBox from \"@commons/radio-box\"\nimport { InputText, TextArea } from \"@commons/input-text\";\nimport InputNumber from \"@commons/input-number\"\nimport { SelectWithApi } from \"@commons/select\";\nimport { useFormManager } from \"@commons/hooks\";\nimport { Button } from \"@commons/button\"\nimport { voucherOptions } from \"../constant\"\n\nconst ModalView = ({\n    onClose,\n    selectedRow,\n    refreshTable\n}: ModalViewProp) => {\n    const { state, onChange } = useFormManager({\n        initialValues: {\n            ...selectedRow\n        }\n    })\n    const { onSaveAndInsertion } = useTableControlsButtons({ api: \"POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA\", runFetch: refreshTable })\n\n    const handleSave = useCallback(() => {\n        onSaveAndInsertion(state)\n        onClose()\n    }, [onSaveAndInsertion, state, onClose])\n\n    return (\n        <>\n            <>\n                <InputText\n                    name=\"voucher_date\"\n                    type=\"date\"\n                    onChange={onChange}\n                    value={state?.voucher_date}\n                    Label=\"dt\"\n                    width=\"47%\"\n                />\n                <InputNumber\n                    name=\"voucher_amount\"\n                    onChange={onChange}\n                    value={state?.voucher_amount}\n                    Label=\"amnt\"\n                    width=\"47%\"\n                />\n                <RadioBox\n                    name=\"voucher_type\"\n                    onChange={onChange}\n                    value={state?.voucher_type}\n                    Label=\"vchr\"\n                    width=\"47%\"\n                    options={voucherOptions}\n                    hidden={state.query_status === \"u\"}\n                />\n                <SelectWithApi\n                    name=\"voucher_id\"\n                    Api=\"QUERY_CUSTOMER_AND_SUPPLIER_LIST\"\n                    Label=\"nm\"\n                    params={{\n                        invoice_type: state.voucher_type\n                    }}\n                    value={state?.voucher_id}\n                    fetchOnFirstRun\n                    width=\"47%\"\n                    onChange={onChange}\n                />\n                <TextArea\n                    width=\"100%\"\n                    name=\"notes\"\n                    onChange={onChange}\n                    value={state?.notes}\n                    Label=\"nts\"\n                />\n                <Button\n                    onClick={handleSave}\n                    label=\"sv\"\n                />\n            </>\n        </>\n    )\n}\n\nexport default memo(ModalView)","import React, { memo } from \"react\";\nimport Flex from \"@commons/flex\";\nimport InputText from \"@commons/input-text/src/inputText\";\nimport { TableWithApi } from \"@commons/table\";\nimport { columns } from \"./constant\";\nimport { useFormManager } from \"@commons/hooks\";\nimport ModalView from \"./Partials/modalView\"\n\nconst CasherReceiptVoucher = () => {\n\n    const { state, onChange } = useFormManager({ initialValues: { date_from: \"\", date_to: \"\" } })\n\n    return (\n        <>\n            <Flex width=\"100%\" flexDirection=\"column\">\n                <Flex width=\"100%\" >\n                    <InputText name=\"date_from\" type=\"date\" Label=\"from\" onChange={onChange} />\n                    <InputText name=\"date_to\" type=\"date\" Label=\"to\" onChange={onChange} />\n                </Flex>\n                <TableWithApi\n                    api={\"QUERY_CASHER_RECEIPT_VOUCHER_TABLE_DATA\"}\n                    postApi={\"POST_CASHER_RECEIPT_VOUCHER_TABLE_DATA\"}\n                    columns={columns}\n                    hideTools={false}\n                    canEdit={true}\n                    canAdd={true}\n                    canDelete={true}\n                    rowKey={\"receipt_voucher_id\"}\n                    params={{\n                        date_from: state.date_from,\n                        date_to: state.date_to\n                    }}\n                    ModalContent={ModalView}\n                    fetchOnFirstRun\n                />\n            </Flex>\n        </>\n    )\n}\n\nexport default memo(CasherReceiptVoucher)"],"names":["Select","width","Options","label","value","onChange","Label","name","withLabel","margin","padding","placeholder","selectLabelName","t","useTranslation","direction","fontSize","as","event","Array","isArray","map","option","target","Option","selected","disabled","memo","SelectWithApi","Api","params","fetchOnFirstRun","data","useFetch","link","ref","useRef","useEffect","current","initialValues","useState","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","useCallback","Object","is","JSON","stringify","resetForm","eventData","handleRootState","e","handleSelectWithLabelChange","handleArrayChange","InputNumber","step","min","max","handleChange","isDisabled","omitted","Textarea","forwardRef","props","styles","useStyleConfig","omitThemingProps","className","rows","rest","textareaProps","useFormControl","textareaStyles","object","keysToOmit","clone","assign","key","omit","jsx","chakra","cx","__css","displayName","TextArea","placeHolder","height","InputText","type","required","I","size","isRequired","RadioBox","options","hidden","wrap","display","gap","flexWrap","columns","title","dataIndex","voucherOptions","ModalView","onClose","selectedRow","refreshTable","useFormManager","onSaveAndInsertion","useTableControlsButtons","api","runFetch","handleSave","voucher_date","voucher_amount","voucher_type","query_status","invoice_type","voucher_id","notes","onClick","CasherReceiptVoucher","date_from","date_to","flexDirection","postApi","hideTools","canEdit","canAdd","canDelete","rowKey","ModalContent"],"sourceRoot":""}