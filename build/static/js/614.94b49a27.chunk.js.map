{"version":3,"file":"static/js/614.94b49a27.chunk.js","mappings":"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","sources":["../common/Select/src/select.tsx","../common/Select/src/selectWithApi.tsx","../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/input-text/src/inputText.tsx","../pages/item-summary-page/src/constant.ts","../pages/item-summary-page/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Select as ChakraSelect, FormLabel, Flex } from '@chakra-ui/react';\r\nimport { SelectProps } from \"./interface\";\r\n\r\nconst Select = ({\r\n    width = \"200px\",\r\n    Options = [{\r\n        label: \"\",\r\n        value: 0\r\n    }],\r\n    onChange,\r\n    Label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    placeholder = \"Select\",\r\n    selectLabelName = \"label_select\",\r\n}: SelectProps) => {\r\n    const { t } = useTranslation()\r\n    //@ts-ignore\r\n    const handleValue = (event) => {\r\n        if (Array.isArray(Options)) {\r\n            Options.map((option) => {\r\n                if (option.value === +event.target.value) {\r\n                    if (withLabel) {\r\n                        onChange({ value: option.value, selectLabelName: selectLabelName, label: option.label, name: name })\r\n                    } else {\r\n                        onChange({ value: option.value, name: name })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <ChakraSelect\r\n                    placeholder={t(placeholder)}\r\n                    onChange={handleValue}\r\n                >\r\n                    {Array.isArray(Options) ? Options.map((Option) => {\r\n                        return (\r\n                            <option key={Option.value} value={Option.value} selected={value === Option.value && true}> {t(Option.label)}</option>\r\n                        )\r\n                    }) : <option disabled>{t(\"No data\")}</option>}\r\n                </ChakraSelect>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo } from \"react\";\r\nimport Select from \"./select\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SelectWithApiProps } from \"./interface\"\r\n\r\nconst SelectWithApi = ({\r\n    width,\r\n    Api,\r\n    onChange,\r\n    Label,\r\n    name = \"\",\r\n    value = 0,\r\n    withLabel = false,\r\n    padding,\r\n    margin,\r\n    params,\r\n    fetchOnFirstRun = false,\r\n    selectLabelName = \"label_select\"\r\n}: SelectWithApiProps) => {\r\n\r\n    const { data } = useFetch({\r\n        link: Api,\r\n        fetchOnFirstRun: fetchOnFirstRun,\r\n        params: params\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                Options={data}\r\n                onChange={onChange}\r\n                Label={Label}\r\n                value={value}\r\n                name={name}\r\n                width={width}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                selectLabelName={selectLabelName}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(SelectWithApi);","import { useRef, useEffect } from \"react\";\r\n\r\nconst usePrevious = <T>(value: T): T => {\r\n  const ref = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current as T;\r\n};\r\n\r\nexport default usePrevious;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport usePrevious from \"./usePrevious\";\r\n\r\ninterface useFormManagerProps {\r\n  initialValues?: any;\r\n  setSelectedRow?: any;\r\n  tableModal?: boolean;\r\n}\r\n\r\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\r\n  const [state, setState] = useState<typeof initialValues>(initialValues);\r\n\r\n  const hasAnyFieldChangedRef = useRef(false);\r\n  const preValues = usePrevious(initialValues);\r\n\r\n  const areInitialValuesChanged = useCallback(\r\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\r\n    [initialValues, preValues]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (areInitialValuesChanged()) {\r\n      setState({ ...initialValues });\r\n    }\r\n  }, [areInitialValuesChanged, initialValues]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    hasAnyFieldChangedRef.current = false;\r\n    setState(() => initialValues);\r\n    // @ts-ignore\r\n  }, [initialValues]);\r\n\r\n  useEffect(\r\n    () => {\r\n      return resetForm;\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const onChange = useCallback(\r\n    (eventData: any) => {\r\n      const { name, value } = eventData;\r\n      setState({ ...state, [name]: value });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleRootState = useCallback((e: any) => {\r\n    setState(e);\r\n  }, []);\r\n\r\n  const handleSelectWithLabelChange = useCallback(\r\n    (eventData: any) => {\r\n      setState({\r\n        ...state,\r\n        [eventData.name]: eventData.value,\r\n        [eventData.selectLabelName]: eventData.label,\r\n      });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleArrayChange = useCallback(\r\n    ({ name, value }: any) => {\r\n      setState({ ...state, [name]: [...state[name], value] });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return {\r\n    state,\r\n    onChange,\r\n    resetForm,\r\n    handleRootState,\r\n    handleSelectWithLabelChange,\r\n    handleArrayChange,\r\n  };\r\n};\r\n\r\nexport default useFormManager;\r\n","import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\r\nimport { InputTextProps } from \"./interface\";\r\n\r\nconst InputText = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    Label = \"\",\r\n    onChange,\r\n    width = \"200px\",\r\n    type = \"text\",\r\n    placeHolder,\r\n    padding,\r\n    margin = \"10px\",\r\n    className = \"\",\r\n    required = false\r\n}: InputTextProps) => {\r\n    const { t } = useTranslation()\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange])\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel>{t(Label)}</FormLabel>\r\n                <Input\r\n                    placeholder={placeHolder}\r\n                    size='md'\r\n                    isDisabled={disabled}\r\n                    isRequired={required}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    className={className}\r\n                    value={value}\r\n                    type={type}\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InputText)","export const columns = [\r\n  {\r\n    title: \"dt\",\r\n    dataIndex: \"date\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"invoice_id\",\r\n    dataIndex: \"invoice_id\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"holder_name\",\r\n    dataIndex: \"holder_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"item_name\",\r\n    dataIndex: \"item_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"item_in\",\r\n    dataIndex: \"item_in\",\r\n    width: \"13%\",\r\n  },\r\n  {\r\n    title: \"item_out\",\r\n    dataIndex: \"item_out\",\r\n    width: \"13%\",\r\n  },\r\n  {\r\n    title: \"blnc\",\r\n    dataIndex: \"balance\",\r\n    width: \"13%\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport Flex from \"@commons/flex\";\r\nimport InputText from \"@commons/input-text/src/inputText\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constant\";\r\nimport { useFormManager } from \"@commons/hooks\";\r\n\r\nconst ItemSummaryPage = () => {\r\n    const { state, onChange } = useFormManager({ initialValues: { date_from: \"\", date_to: \"\", item_id: \"\" } })\r\n    return (\r\n        <>\r\n            <Flex width=\"100%\" flexDirection=\"column\">\r\n                <Flex width=\"100%\" >\r\n                    <SelectWithApi\r\n                        Label=\"itm\"\r\n                        fetchOnFirstRun\r\n                        name=\"item_id\"\r\n                        value={state.item_id}\r\n                        onChange={onChange}\r\n                        Api=\"QUERY_ITEMS_LIST\"\r\n                    />\r\n                    <InputText\r\n                        name=\"date_from\"\r\n                        type=\"date\"\r\n                        Label=\"frm\"\r\n                        onChange={onChange}\r\n                    />\r\n                    <InputText\r\n                        name=\"date_to\"\r\n                        type=\"date\"\r\n                        Label=\"to\"\r\n                        onChange={onChange}\r\n                    />\r\n                </Flex>\r\n                <TableWithApi\r\n                    api={\"QUERY_ITEM_SUMMARY_TABLE\"}\r\n                    columns={columns}\r\n                    hideTools={false}\r\n                    canExcel\r\n                    rowKey={\"rowKey\"}\r\n                    params={{\r\n                        item_id: state.item_id,\r\n                        date_from: state.date_from,\r\n                        date_to: state.date_to\r\n                    }}\r\n                    fetchOnFirstRun\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ItemSummaryPage)"],"names":["Select","_ref","_ref$width","width","_ref$Options","Options","label","value","onChange","Label","_ref$value","name","_ref$withLabel","withLabel","_ref$margin","margin","padding","_ref$placeholder","placeholder","_ref$selectLabelName","selectLabelName","t","useTranslation","_jsx","_Fragment","children","_jsxs","Flex","direction","FormLabel","fontSize","as","ChakraSelect","event","Array","isArray","map","option","target","Option","selected","disabled","memo","SelectWithApi","Api","_ref$name","params","_ref$fetchOnFirstRun","fetchOnFirstRun","data","useFetch","link","ref","useRef","useEffect","current","initialValues","_useState","useState","_useState2","_slicedToArray","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","useCallback","Object","is","JSON","stringify","_objectSpread","resetForm","eventData","_defineProperty","handleRootState","e","handleSelectWithLabelChange","_objectSpread3","handleArrayChange","_ref2","concat","_toConsumableArray","InputText","_ref$Label","_ref$type","type","placeHolder","_ref$className","className","_ref$required","required","handleChange","Input","size","isDisabled","isRequired","columns","title","dataIndex","ItemSummaryPage","_useFormManager","useFormManager","date_from","date_to","item_id","flexDirection","TableWithApi","api","hideTools","canExcel","rowKey"],"sourceRoot":""}