{"version":3,"file":"static/js/683.8ffe8b24.chunk.js","mappings":"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","sources":["../common/hooks/src/usePrevious.ts","../common/hooks/src/useFormManager.ts","../common/input-text/src/inputText.tsx","../pages/casher-payment-voucher-page/src/constant.ts","../pages/casher-payment-voucher-page/src/component.tsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\r\n\r\nconst usePrevious = <T>(value: T): T => {\r\n  const ref = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current as T;\r\n};\r\n\r\nexport default usePrevious;\r\n","import { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport usePrevious from \"./usePrevious\";\r\n\r\ninterface useFormManagerProps {\r\n  initialValues?: any;\r\n  setSelectedRow?: any;\r\n  tableModal?: boolean;\r\n}\r\n\r\nconst useFormManager = ({ initialValues }: useFormManagerProps) => {\r\n  const [state, setState] = useState<typeof initialValues>(initialValues);\r\n\r\n  const hasAnyFieldChangedRef = useRef(false);\r\n  const preValues = usePrevious(initialValues);\r\n\r\n  const areInitialValuesChanged = useCallback(\r\n    () => !Object.is(JSON.stringify(preValues), JSON.stringify(initialValues)),\r\n    [initialValues, preValues]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (areInitialValuesChanged()) {\r\n      setState({ ...initialValues });\r\n    }\r\n  }, [areInitialValuesChanged, initialValues]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    hasAnyFieldChangedRef.current = false;\r\n    setState(() => initialValues);\r\n    // @ts-ignore\r\n  }, [initialValues]);\r\n\r\n  useEffect(\r\n    () => {\r\n      return resetForm;\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const onChange = useCallback(\r\n    (eventData: any) => {\r\n      const { name, value } = eventData;\r\n      setState({ ...state, [name]: value });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleRootState = useCallback((e: any) => {\r\n    setState(e);\r\n  }, []);\r\n\r\n  const handleSelectWithLabelChange = useCallback(\r\n    (eventData: any) => {\r\n      setState({\r\n        ...state,\r\n        [eventData.name]: eventData.value,\r\n        [eventData.selectLabelName]: eventData.label,\r\n      });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleArrayChange = useCallback(\r\n    ({ name, value }: any) => {\r\n      setState({ ...state, [name]: [...state[name], value] });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return {\r\n    state,\r\n    onChange,\r\n    resetForm,\r\n    handleRootState,\r\n    handleSelectWithLabelChange,\r\n    handleArrayChange,\r\n  };\r\n};\r\n\r\nexport default useFormManager;\r\n","import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input, FormLabel, Flex } from '@chakra-ui/react'\r\nimport { InputTextProps } from \"./interface\";\r\n\r\nconst InputText = ({\r\n    disabled,\r\n    value,\r\n    name,\r\n    Label = \"\",\r\n    onChange,\r\n    width = \"200px\",\r\n    type = \"text\",\r\n    placeHolder,\r\n    padding,\r\n    margin = \"10px\",\r\n    className = \"\",\r\n    required = false\r\n}: InputTextProps) => {\r\n    const { t } = useTranslation()\r\n\r\n    const handleChange = useCallback((event: { target: { value: string; }; }) => {\r\n        onChange({ name: name, value: event.target.value })\r\n    }, [name, onChange])\r\n\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n            >\r\n                <FormLabel>{t(Label)}</FormLabel>\r\n                <Input\r\n                    placeholder={placeHolder}\r\n                    size='md'\r\n                    isDisabled={disabled}\r\n                    isRequired={required}\r\n                    onChange={handleChange}\r\n                    width=\"100%\"\r\n                    className={className}\r\n                    value={value}\r\n                    type={type}\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InputText)","export const columns = [\r\n        {\r\n            title: \"dt\",\r\n            dataIndex: \"date\",\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"amnt\",\r\n            dataIndex: \"amount\",\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"vchrnm\",\r\n            dataIndex: \"voucher_name\",\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"cstmrnm\",\r\n            dataIndex: \"customer_name\",\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"splrnm\",\r\n            dataIndex: \"supplier_name\",\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"nts\",\r\n            dataIndex: \"notes\",\r\n            width: \"10%\"\r\n        }\r\n    ]\r\n\r\nexport const voucherOptions = [\r\n    {\r\n        label: \"splr\",\r\n        value: 1,\r\n    },\r\n    {\r\n        label: \"cstmr\",\r\n        value: 2,\r\n    }\r\n]","import React, { memo } from \"react\";\r\nimport Flex from \"@commons/flex\";\r\nimport InputText from \"@commons/input-text/src/inputText\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { columns } from \"./constant\";\r\nimport { useFormManager } from \"@commons/hooks\";\r\nimport ModalView from \"./Partials/modalView\"\r\n\r\nconst CasherPaymentVoucher = () => {\r\n    const { state, onChange } = useFormManager({ initialValues: { date_from: \"\", date_to: \"\" } })\r\n    return (\r\n        <>\r\n            <Flex width=\"100%\" flexDirection=\"column\">\r\n                <Flex width=\"100%\" >\r\n                    <InputText name=\"date_from\" type=\"date\" Label=\"from\" onChange={onChange} />\r\n                    <InputText name=\"date_to\" type=\"date\" Label=\"to\" onChange={onChange} />\r\n                </Flex>\r\n                <TableWithApi\r\n                    api={\"QUERY_CASHER_PAYMENT_VOUCHER_TABLE_DATA\"}\r\n                    postApi={\"POST_CASHER_PAYMENT_VOUCHER_TABLE_DATA\"}\r\n                    columns={columns}\r\n                    hideTools={false}\r\n                    canEdit={true}\r\n                    canAdd={true}\r\n                    canDelete={true}\r\n                    rowKey={\"payment_voucher_id\"}\r\n                    params={{\r\n                        date_from: state.date_from,\r\n                        date_to: state.date_to\r\n                    }}\r\n                    ModalContent\r\n                    fetchOnFirstRun\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(CasherPaymentVoucher)"],"names":["value","ref","useRef","useEffect","current","initialValues","useState","state","setState","hasAnyFieldChangedRef","preValues","usePrevious","areInitialValuesChanged","useCallback","Object","is","JSON","stringify","resetForm","onChange","eventData","name","handleRootState","e","handleSelectWithLabelChange","selectLabelName","label","handleArrayChange","InputText","disabled","Label","width","type","placeHolder","padding","margin","className","required","t","useTranslation","handleChange","event","target","direction","I","placeholder","size","isDisabled","isRequired","memo","columns","title","dataIndex","CasherPaymentVoucher","useFormManager","date_from","date_to","flexDirection","api","postApi","hideTools","canEdit","canAdd","canDelete","rowKey","params","ModalContent","fetchOnFirstRun"],"sourceRoot":""}