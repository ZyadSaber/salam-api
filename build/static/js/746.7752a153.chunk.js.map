{"version":3,"file":"static/js/746.7752a153.chunk.js","mappings":"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","sources":["../common/chart-js/src/chart.tsx","../common/chart-js/src/chartWithApi.tsx","../pages/DashBoard/src/constants.ts","../pages/DashBoard/src/component.tsx"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport 'chart.js/auto';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Flex from \"@commons/flex\";\r\nimport { barChartProp } from \"./interface\";\r\n\r\nconst BarChart = ({\r\n  mode = 'bar',\r\n  width,\r\n  height,\r\n  margin,\r\n  padding,\r\n  label = \"chart\",\r\n  dataSource\r\n}: barChartProp) => {\r\n  const { t } = useTranslation()\r\n  const view = () => {\r\n\r\n    switch (mode) {\r\n      case \"line\":\r\n        return <Chart type='line' data={dataSource} />;\r\n      case \"pie\":\r\n        return <Chart type='pie' data={dataSource} />;\r\n      case \"bar\":\r\n        return <Chart type='bar' data={dataSource} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection=\"column\"\r\n        width={width}\r\n        height={height}\r\n        margin={margin}\r\n        padding={padding}\r\n      >\r\n        <Flex width=\"100%\" justifyContent=\"center\">\r\n          <p>{t(label)}</p>\r\n        </Flex>\r\n        {dataSource && view()}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(BarChart)","import React, { memo, useEffect, useState } from \"react\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport BarChart from \"./chart\";\r\nimport { chartWithApi } from \"./interface\"\r\n\r\nconst ChartWithApi = ({\r\n    api,\r\n    params,\r\n    ...prop\r\n}: chartWithApi) => {\r\n\r\n    const [dataSource, setDataSource] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                data: [],\r\n            },\r\n        ],\r\n    })\r\n\r\n    const { data } = useFetch({\r\n        link: api,\r\n        fetchOnFirstRun: true,\r\n        params: params\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(data)) {\r\n            setDataSource(data)\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n            <BarChart\r\n                dataSource={dataSource}\r\n                {...prop}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ChartWithApi);","export const customerTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"customer_invoice_id\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"customer_invoice_total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"discount\",\r\n    dataIndex: \"customer_invoice_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total after\",\r\n    dataIndex: \"customer_invoice_after_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"customer_invoice_paid\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"credit\",\r\n    dataIndex: \"customer_invoice_credit\",\r\n    width: \"5%\",\r\n  },\r\n];\r\n\r\nexport const supplierTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"supplier_invoice_id\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"supplier_invoice_total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"discount\",\r\n    dataIndex: \"supplier_invoice_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total after\",\r\n    dataIndex: \"supplier_invoice_after_discount\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"paid\",\r\n    dataIndex: \"supplier_invoice_paid\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"credit\",\r\n    dataIndex: \"supplier_invoice_credit\",\r\n    width: \"5%\",\r\n  }\r\n];\r\n","import React, { memo } from 'react';\r\nimport { ChartWithApi } from \"@pages/chart-js\";\r\nimport Flex from \"@commons/flex\";\r\nimport { TableWithApi } from \"@commons/table\";\r\nimport { supplierTableColumns, customerTableColumns } from \"./constants\"\r\n\r\nconst DashBoard = () => {\r\n\r\n    return (\r\n        <>\r\n            <Flex width='100%'>\r\n                <Flex width='75%' flexDirection='column'>\r\n                    <TableWithApi\r\n                        api='QUERY_CUSTOMERS_INVOICES_FOR_TODAY'\r\n                        rowKey='customer_invoice_id'\r\n                        columns={customerTableColumns}\r\n                        fetchOnFirstRun\r\n                        label='cstmrs'\r\n                    />\r\n                    <TableWithApi\r\n                        api='QUERY_SUPPLIERS_INVOICES_FOR_TODAY'\r\n                        rowKey='supplier_invoice_id'\r\n                        columns={supplierTableColumns}\r\n                        fetchOnFirstRun\r\n                        label='splrs'\r\n                    />\r\n                </Flex>\r\n                <Flex width='25%' flexDirection=\"column\">\r\n                    <ChartWithApi\r\n                        api=\"QUERY_INVOICES_CHART_DATA\"\r\n                        label=\"invcs\"\r\n                        mode=\"pie\"\r\n                        width=\"100%\"\r\n                    />\r\n                    <ChartWithApi\r\n                        api=\"QUERY_MAIN_CHART_DATA\"\r\n                        label=\"vault\"\r\n                        mode=\"pie\"\r\n                        width=\"100%\"\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(DashBoard);\r\n"],"names":["BarChart","_ref","_ref$mode","mode","width","height","margin","padding","_ref$label","label","dataSource","t","useTranslation","_jsx","_Fragment","children","_jsxs","Flex","flexDirection","justifyContent","Chart","type","data","view","memo","ChartWithApi","api","params","prop","_objectWithoutProperties","_excluded","_useState","useState","labels","datasets","_useState2","_slicedToArray","setDataSource","useFetch","link","fetchOnFirstRun","useEffect","Array","isArray","_objectSpread","customerTableColumns","title","dataIndex","supplierTableColumns","DashBoard","TableWithApi","rowKey","columns"],"sourceRoot":""}