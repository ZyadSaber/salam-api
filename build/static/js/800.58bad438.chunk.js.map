{"version":3,"file":"static/js/800.58bad438.chunk.js","mappings":"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","sources":["../common/Select/src/monthSelect.tsx","../common/Select/src/yearSelect.tsx","../pages/employee-sheet-page/src/constans.ts","../pages/employee-sheet-page/src/component.tsx"],"sourcesContent":["import React, { memo, useCallback } from \"react\";\r\nimport { monthSelectProp } from \"./interface\"\r\nimport Select from \"./select\";\r\n\r\nconst MonthSelect = ({\r\n    width = \"100px\",\r\n    onChange,\r\n    label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n}: monthSelectProp) => {\r\n\r\n    const options = useCallback(() => {\r\n        let options = []\r\n        for (let i = 1; i <= 12; i++) {\r\n            options.push({ label: i, value: i })\r\n        }\r\n        return options\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                name={name}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                value={value}\r\n                onChange={onChange}\r\n                label={label}\r\n                width={width}\r\n                //@ts-ignore for now\r\n                Options={options()}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(MonthSelect)","import React, { memo, useCallback } from \"react\";\r\nimport { monthSelectProp } from \"./interface\"\r\nimport Select from \"./select\";\r\n\r\nconst YearSelect = ({\r\n    width = \"200px\",\r\n    onChange,\r\n    label,\r\n    value = 0,\r\n    name,\r\n    withLabel = false,\r\n    margin = \"10px\",\r\n    padding,\r\n    range = 5\r\n}: monthSelectProp) => {\r\n\r\n    const option = useCallback(() => {\r\n        var now = new Date();\r\n        var time = now.getFullYear();\r\n        let options = []\r\n        for (let i = time - range; i <= time; i++) {\r\n            options.push({ label: i, value: i })\r\n        }\r\n        return options\r\n    }, [range])\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n                name={name}\r\n                withLabel={withLabel}\r\n                margin={margin}\r\n                padding={padding}\r\n                value={value}\r\n                onChange={onChange}\r\n                label={label}\r\n                width={width}\r\n                //@ts-ignore for now\r\n                Options={option()}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(YearSelect)","export const columns = [\r\n        {\r\n            title: \"dt\",\r\n            dataIndex: \"date\",\r\n            width: 20\r\n        },\r\n        {\r\n            title: \"atndnctm\",\r\n            dataIndex: \"attendance_time\",\r\n            width: 17\r\n        },\r\n        {\r\n            title: \"ltm\",\r\n            dataIndex: \"late_time\",\r\n            width: 15\r\n        },\r\n        {\r\n            title: \"ltrsn\",\r\n            dataIndex: \"late_reason\",\r\n            width: 15\r\n        },\r\n        {\r\n            title: \"lvngtm\",\r\n            dataIndex: \"leaving_time\",\r\n            width: 20\r\n        },\r\n        {\r\n            title: \"ovrtm\",\r\n            dataIndex: \"over_time\",\r\n            width: 20\r\n        },\r\n        {\r\n            title: \"erlytm\",\r\n            dataIndex: \"early_time\",\r\n            width: 20\r\n        },\r\n        {\r\n            title: \"nts\",\r\n            dataIndex: \"notes\",\r\n            width: 20\r\n        }\r\n    ]","import React, { memo } from \"react\";\r\nimport { Table } from \"@commons/table\";\r\nimport { SelectWithApi, YearSelect, MonthSelect } from \"@commons/select\";\r\nimport Flex from \"@commons/flex\";\r\nimport { useFormManager } from \"@commons/hooks\";\r\nimport { columns } from \"./constans\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport { SearchAndClearButton } from \"@commons/button\";\r\nimport { InputText } from \"@commons/input-text\";\r\n\r\nconst EmployeeSheet = () => {\r\n    const { state, onChange } = useFormManager({ initialValues: { employee_id: \"\", } })\r\n    const { data, runFetch } = useFetch({\r\n        link: \"QUERY_EMPLOYEE_SHEET_SALARY\",\r\n        params: {\r\n            employee_id: state.employee_id,\r\n            year: state.year,\r\n            month: state.month\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <Flex flexDirection=\"column\" padding=\"0\" margin=\"0\" width=\"100%\">\r\n                <Flex width=\"100%\" margin=\"0\" padding=\"0\" bordered>\r\n                    <SelectWithApi\r\n                        api=\"QUERY_EMPLOYEE_NAME_LIST\"\r\n                        name=\"employee_id\"\r\n                        label=\"emply\"\r\n                        onChange={onChange}\r\n                        fetchOnFirstRun\r\n                        value={state.employee_id}\r\n                    />\r\n                    <MonthSelect\r\n                        name=\"month\"\r\n                        label=\"mnth\"\r\n                        onChange={onChange}\r\n                        value={state.month}\r\n                    />\r\n                    <YearSelect\r\n                        name=\"year\"\r\n                        label=\"yr\"\r\n                        onChange={onChange}\r\n                        value={state.year}\r\n                        width=\"15%\"\r\n                        range={4}\r\n                    />\r\n                    <SearchAndClearButton\r\n                        onClick={runFetch}\r\n                    />\r\n                </Flex>\r\n                <Table\r\n                    dataSource={data?.late_cost}\r\n                    columns={columns}\r\n                    hideTools={false}\r\n                    canPrint={true}\r\n                // onPrint\r\n                />\r\n                <Flex width=\"100%\" margin=\"0\" padding=\"0\" justifyContent=\"space-around\">\r\n                    <InputText\r\n                        value={data?.salary}\r\n                        label=\"slry\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.total_late_time}\r\n                        label=\"tltm\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.total_over_time}\r\n                        label=\"tlvrtm\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.total_early_leaving}\r\n                        label=\"tlrlylvng\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.late_cost}\r\n                        label=\"ltcs\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.over_time_cost}\r\n                        label=\"ovrtmcst\"\r\n                        disabled\r\n                    />\r\n                    <InputText\r\n                        value={data?.net_data?.salary}\r\n                        label=\"ntslry\"\r\n                        disabled\r\n                    />\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(EmployeeSheet)"],"names":["MonthSelect","_ref","width","onChange","label","value","name","withLabel","margin","padding","options","useCallback","i","push","_jsx","_Fragment","children","Select","Options","memo","YearSelect","range","option","time","Date","getFullYear","columns","title","dataIndex","EmployeeSheet","_data$net_data","state","useFormManager","initialValues","employee_id","data","runFetch","useFetch","link","params","year","month","_jsxs","Flex","flexDirection","bordered","SelectWithApi","api","fetchOnFirstRun","SearchAndClearButton","onClick","Table","dataSource","late_cost","hideTools","canPrint","justifyContent","InputText","salary","disabled","total_late_time","total_over_time","total_early_leaving","over_time_cost","net_data"],"sourceRoot":""}