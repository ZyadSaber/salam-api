{"version":3,"file":"static/js/930.2e014685.chunk.js","mappings":"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","sources":["../common/radio-box/src/index.tsx","../pages/invoices-search-page/src/constant.ts","../pages/invoices-search-page/src/Partials/FormView.tsx","../pages/invoices-search-page/src/component.tsx"],"sourcesContent":["import React, { memo, useCallback } from \"react\";\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Radio, RadioGroup, Stack, FormLabel, Flex } from '@chakra-ui/react'\r\nimport { radioBoxProps, option } from \"./interface\"\r\n\r\nconst RadioBox = ({\r\n    name,\r\n    options,\r\n    width,\r\n    onChange,\r\n    value,\r\n    Label,\r\n    margin = \"10px\",\r\n    padding,\r\n    hidden = false,\r\n    disabled= false,\r\n    ...props\r\n}: radioBoxProps) => {\r\n    const { t } = useTranslation()\r\n    const handleChange = useCallback((value: string | number) => {\r\n        onChange({ name: name, value: value })\r\n    }, [name, onChange])\r\n    return (\r\n        <>\r\n            <Flex\r\n                direction=\"column\"\r\n                width={width}\r\n                padding={padding}\r\n                margin={margin}\r\n                wrap=\"wrap\"\r\n                hidden={hidden}\r\n            >\r\n                <FormLabel fontSize='md' as=\"b\" margin=\"0 0 5px\">{t(Label)}</FormLabel>\r\n                <Flex\r\n                    className=\"css-1xsh6d8\"\r\n                    width=\"100%\"\r\n                >\r\n                    <RadioGroup\r\n                        padding=\"7px\"\r\n                        onChange={handleChange}\r\n                        value={value}\r\n                        width=\"100%\"\r\n                        display=\"flex\"\r\n                        gap=\"15px\"\r\n                        flexWrap=\"wrap\"\r\n                        isDisabled={disabled}\r\n                        {...props}\r\n                    >\r\n                        {options.map((option: option) => {\r\n                            return (\r\n                                <Stack direction='row'>\r\n                                    <Radio value={option.value} >{t(option.label)}</Radio>\r\n                                </Stack>\r\n                            )\r\n                        })}\r\n                    </RadioGroup>\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(RadioBox)","export const mainTableColumns = [\r\n  {\r\n    title: \"no\",\r\n    dataIndex: \"invoice_id\",\r\n    width: \"14%\",\r\n  },\r\n  {\r\n    title: \"nm\",\r\n    dataIndex: \"invoice_holder_name\",\r\n    width: \"20%\",\r\n  },\r\n  {\r\n    title: \"dt\",\r\n    dataIndex: \"invoice_date\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"invoice_after_discount\",\r\n    width: \"10%\",\r\n  },\r\n];\r\n\r\nexport const detailTableColumns = [\r\n  {\r\n    title: \"itmnm\",\r\n    dataIndex: \"invoice_item_name\",\r\n    width: \"15%\",\r\n  },\r\n  {\r\n    title: \"wdth\",\r\n    dataIndex: \"invoice_item_width\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"hght\",\r\n    dataIndex: \"invoice_item_height\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"sz\",\r\n    dataIndex: \"invoice_item_size\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"qnty\",\r\n    dataIndex: \"invoice_item_quantity\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"prc\",\r\n    dataIndex: \"invoice_item_price\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"total\",\r\n    dataIndex: \"invoice_item_total\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"nts\",\r\n    dataIndex: \"invoice_item_notes\",\r\n    width: \"5%\",\r\n  },\r\n];\r\n\r\nexport const RadioBoxOptions = [\r\n  {\r\n    label: \"splr\",\r\n    value: \"S\",\r\n  },\r\n  {\r\n    label: \"cstmr\",\r\n    value: \"C\",\r\n  },\r\n];\r\n","import React, { memo } from \"react\";\r\nimport RadioBox from \"@commons/radio-box\";\r\nimport { RadioBoxOptions } from \"../constant\";\r\nimport { SelectWithApi } from \"@commons/select\";\r\nimport { InputText } from \"@commons/input-text\";\r\nimport Flex from \"@commons/flex\";\r\nimport { Button } from \"@commons/button\"\r\n\r\nconst FormView = ({ onChange, state, runQuery }: any) => {\r\n    return (\r\n        <>\r\n            <Flex bordered width=\"100%\" wrap>\r\n                <RadioBox\r\n                    name=\"invoice_type\"\r\n                    options={RadioBoxOptions}\r\n                    value={state.invoice_type}\r\n                    onChange={onChange}\r\n                    Label=\"invctyp\"\r\n                    width=\"17%\"\r\n                />\r\n                <InputText\r\n                    name=\"invoice_no\"\r\n                    Label=\"no\"\r\n                    onChange={onChange}\r\n                    type=\"number\"\r\n                    value={state.invoice_no}\r\n                />\r\n                <SelectWithApi\r\n                    name=\"holder_number\"\r\n                    Api=\"QUERY_CUSTOMER_AND_SUPPLIER_LIST\"\r\n                    Label=\"nm\"\r\n                    params={{\r\n                        invoice_type: state.invoice_type\r\n                    }}\r\n                    value={state.holder_number}\r\n                    fetchOnFirstRun\r\n                    onChange={onChange}\r\n                />\r\n                <InputText\r\n                    name=\"date_from\"\r\n                    value={state.date_from}\r\n                    Label=\"dtfrm\"\r\n                    onChange={onChange}\r\n                    type=\"date\"\r\n                />\r\n                <InputText\r\n                    name=\"date_to\"\r\n                    value={state.date_to}\r\n                    Label=\"dto\"\r\n                    onChange={onChange}\r\n                    type=\"date\"\r\n                />\r\n                <Button\r\n                    onClick={runQuery}\r\n                    label=\"Search\"\r\n                />\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(FormView)","import React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { Table } from \"@commons/table\";\r\nimport { useFormManager } from \"@commons/hooks\";\r\nimport Flex from \"@commons/flex\";\r\nimport { useFetch } from \"@commons/hooks\"\r\nimport FormView from \"./Partials/FormView\";\r\nimport { mainTableColumns, detailTableColumns } from \"./constant\";\r\n\r\nconst InvoicesSearch = () => {\r\n\r\n    const [row, setRow] = useState({\r\n        invoice_id: \"\"\r\n    })\r\n    const {\r\n        state\r\n        , onChange\r\n    } = useFormManager({\r\n        initialValues: {\r\n            invoice_type: \"C\",\r\n            invoice_no: \"\",\r\n            person_id: \"\",\r\n            date_from: \"\",\r\n            date_to: \"\"\r\n        }\r\n    })\r\n    const { invoice_type, invoice_no, holder_number } = state\r\n\r\n    const onSelectedRow = useCallback((row?: any) => {\r\n        setRow(row)\r\n    }, [])\r\n\r\n    const { data, runFetch, loading } = useFetch({\r\n        link: \"QUERY_INVOICE_MASTER_TABLE_DATA\",\r\n        params: {\r\n            invoice_type: invoice_type,\r\n            invoice_no: invoice_no,\r\n            holder_number: holder_number,\r\n        },\r\n    })\r\n\r\n    const {\r\n        data: detailData,\r\n        runFetch: runFetchDetailData,\r\n        loading: detailLoading\r\n    } = useFetch({\r\n        link: \"QUERY_INVOICE_DETAIL_TABLE_DATA\",\r\n        params: {\r\n            invoice_type: invoice_type,\r\n            invoice_no: row.invoice_id,\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (row.invoice_id) {\r\n            runFetchDetailData()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [row.invoice_id])\r\n\r\n    return (\r\n        <>\r\n            <Flex width=\"100%\" margin=\"0\" padding=\"0\" flexDirection=\"column\">\r\n                <FormView\r\n                    onChange={onChange}\r\n                    state={state}\r\n                    runQuery={runFetch}\r\n                />\r\n                <Flex width=\"100%\" margin=\"0\" padding=\"0\" justifyContent=\"space-between\">\r\n                    <Flex width=\"40%\">\r\n                        <Table\r\n                            columns={mainTableColumns}\r\n                            dataSource={data?.data}\r\n                            rowKey=\"invoice_id\"\r\n                            onSelectedRow={onSelectedRow}\r\n                            height=\"400px\"\r\n                            loading={loading}\r\n                        />\r\n                    </Flex>\r\n                    <Flex width=\"60%\">\r\n                        <Table\r\n                            columns={detailTableColumns}\r\n                            dataSource={detailData?.data}\r\n                            rowKey=\"row_key\"\r\n                            loading={detailLoading}\r\n                        />\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(InvoicesSearch)"],"names":["RadioBox","_ref","name","options","width","onChange","value","Label","_ref$margin","margin","padding","_ref$hidden","hidden","_ref$disabled","disabled","props","_objectWithoutProperties","_excluded","t","useTranslation","handleChange","useCallback","_jsx","_Fragment","children","_jsxs","Flex","direction","wrap","FormLabel","fontSize","as","className","RadioGroup","_objectSpread","display","gap","flexWrap","isDisabled","map","option","Stack","Radio","label","memo","mainTableColumns","title","dataIndex","detailTableColumns","RadioBoxOptions","FormView","state","runQuery","bordered","invoice_type","InputText","type","invoice_no","SelectWithApi","Api","params","holder_number","fetchOnFirstRun","date_from","date_to","Button","onClick","InvoicesSearch","_useState","useState","invoice_id","_useState2","_slicedToArray","row","setRow","_useFormManager","useFormManager","initialValues","person_id","onSelectedRow","_useFetch","useFetch","link","data","runFetch","loading","_useFetch2","detailData","runFetchDetailData","detailLoading","useEffect","flexDirection","justifyContent","Table","columns","dataSource","rowKey","height"],"sourceRoot":""}